<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[shell手册]]></title>
      <url>/2020/02/23/shell%E6%89%8B%E5%86%8C/</url>
      <content type="html"><![CDATA[<p>​    手册制作: 雪松</p>
<p>​    github更新下载地址:  <a href="https://github.com/liquanzhou/ops_doc" target="_blank" rel="noopener">https://github.com/liquanzhou/ops_doc</a></p>
<p>原文为sh文件，个人需要转成md文件</p>
<a id="more"></a>
<h4 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h4><h5 id="sort排序"><a href="#sort排序" class="headerlink" title="sort排序"></a>sort排序</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">-t  # 指定排序时所用的栏位分隔字符</span><br><span class="line">-n  # 依照数值的大小排序</span><br><span class="line">-r  # 以相反的顺序来排序</span><br><span class="line">-f  # 排序时，将小写字母视为大写字母</span><br><span class="line">-d  # 排序时，处理英文字母、数字及空格字符外，忽略其他的字符</span><br><span class="line">-c  # 检查文件是否已经按照顺序排序</span><br><span class="line">-b  # 忽略每行前面开始处的空格字符</span><br><span class="line">-M  # 前面3个字母依照月份的缩写进行排序</span><br><span class="line">-k  # 指定域</span><br><span class="line">-m  # 将几个排序好的文件进行合并</span><br><span class="line">-T  # 指定临时文件目录,默认在/tmp</span><br><span class="line">+&lt;起始栏位&gt;-&lt;结束栏位&gt;   # 以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。</span><br><span class="line">-o  # 将排序后的结果存入指定的文</span><br><span class="line"></span><br><span class="line">sort -n               # 按数字排序</span><br><span class="line">sort -nr              # 按数字倒叙</span><br><span class="line">sort -u               # 过滤重复行</span><br><span class="line">sort -m a.txt c.txt   # 将两个文件内容整合到一起</span><br><span class="line">sort -n -t' ' -k 2 -k 3 a.txt     # 第二域相同，将从第三域进行升降处理</span><br><span class="line">sort -n -t':' -k 3r a.txt         # 以:为分割域的第三域进行倒叙排列</span><br><span class="line">sort -k 1.3 a.txt                 # 从第三个字母起进行排序</span><br><span class="line">sort -t" " -k 2n -u  a.txt        # 以第二域进行排序，如果遇到重复的，就删除</span><br></pre></td></tr></table></figure>
<h5 id="find查找"><a href="#find查找" class="headerlink" title="find查找"></a>find查找</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> linux文件无创建时间</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Access 使用时间</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Modify 内容修改时间</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Change 状态改变时间(权限、属主)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 时间默认以24小时为单位,当前时间到向前24小时为0天,向前48-72小时为2天</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -and 且 匹配两个条件 参数可以确定时间范围 -mtime +2 -and -mtime -4</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -or 或 匹配任意一个条件</span></span><br><span class="line"></span><br><span class="line">find /etc -name "*http*"     # 按文件名查找</span><br><span class="line">find . -type f               # 查找某一类型文件</span><br><span class="line">find / -perm                 # 按照文件权限查找</span><br><span class="line">find / -user                 # 按照文件属主查找</span><br><span class="line">find / -group                # 按照文件所属的组来查找文件</span><br><span class="line">find / -atime -n             # 文件使用时间在N天以内</span><br><span class="line">find / -atime +n             # 文件使用时间在N天以前</span><br><span class="line">find / -mtime +n             # 文件内容改变时间在N天以前</span><br><span class="line">find / -ctime +n             # 文件状态改变时间在N天前</span><br><span class="line">find / -mmin +30             # 按分钟查找内容改变</span><br><span class="line">find / -size +1000000c -print                           # 查找文件长度大于1M字节的文件</span><br><span class="line">find /etc -name "*passwd*" -exec grep "xuesong" &#123;&#125; \;   # 按名字查找文件传递给-exec后命令</span><br><span class="line">find . -name 't*' -exec basename &#123;&#125; \;                  # 查找文件名,不取路径</span><br><span class="line">find . -type f -name "err*" -exec  rename err ERR &#123;&#125; \; # 批量改名(查找err 替换为 ERR &#123;&#125;文件</span><br><span class="line">find 路径 -name *name1* -or -name *name2*               # 查找任意一个关键字</span><br></pre></td></tr></table></figure>
<h5 id="vim编辑"><a href="#vim编辑" class="headerlink" title="vim编辑"></a>vim编辑</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">gconf-editor           # 配置编辑器</span><br><span class="line">/etc/vimrc             # 配置文件路径</span><br><span class="line">vim +24 file           # 打开文件定位到指定行</span><br><span class="line">vim file1 file2        # 打开多个文件</span><br><span class="line">vim -O2 file1 file2    # 垂直分屏</span><br><span class="line">vim -on file1 file2    # 水平分屏</span><br><span class="line">Ctrl+ U                # 向前翻页</span><br><span class="line">Ctrl+ D                # 向后翻页</span><br><span class="line">Ctrl+ww                # 在窗口间切换</span><br><span class="line">Ctrl+w +or-or=         # 增减高度</span><br><span class="line">:sp filename           # 上下分割打开新文件</span><br><span class="line">:vs filename           # 左右分割打开新文件</span><br><span class="line">:set nu                # 打开行号</span><br><span class="line">:set nonu              # 取消行号</span><br><span class="line">:nohl                  # 取消高亮</span><br><span class="line">:set paste             # 取消缩进</span><br><span class="line">:set autoindent        # 设置自动缩进</span><br><span class="line">:set ff                # 查看文本格式</span><br><span class="line">:set binary            # 改为unix格式</span><br><span class="line">:%s/字符1/字符2/g       # 全部替换</span><br><span class="line">:200                   # 跳转到200  1 文件头</span><br><span class="line">G                      # 跳到行尾</span><br><span class="line">dd                     # 删除当前行 并复制 可直接p粘贴</span><br><span class="line">11111dd                # 删除11111行，可用来清空文件</span><br><span class="line">r                      # 替换单个字符</span><br><span class="line">R                      # 替换多个字符</span><br><span class="line">u                      # 撤销上次操作</span><br><span class="line">*                      # 全文匹配当前光标所在字符串</span><br><span class="line"><span class="meta">$</span><span class="bash">                      <span class="comment"># 行尾</span></span></span><br><span class="line">0                      # 行首</span><br><span class="line">X                      # 文档加密</span><br><span class="line">v =                    # 自动格式化代码</span><br><span class="line">Ctrl+v                 # 可视模式</span><br><span class="line">Ctrl+v I ESC           # 多行操作</span><br><span class="line">Ctrl+v s ESC           # 批量取消注释</span><br></pre></td></tr></table></figure>
<h5 id="归档压缩"><a href="#归档压缩" class="headerlink" title="归档压缩"></a>归档压缩</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">tar zxvpf gz.tar.gz -C 放到指定目录 包中的目录       # 解包tar.gz 不指定目录则全解压</span><br><span class="line">tar zcvpf /$path/gz.tar.gz * # 打包gz 注意*最好用相对路径</span><br><span class="line">tar zcf /$path/gz.tar.gz *   # 打包正确不提示</span><br><span class="line">tar ztvpf gz.tar.gz          # 查看gz</span><br><span class="line">tar xvf 1.tar -C 目录         # 解包tar</span><br><span class="line">tar -cvf 1.tar *             # 打包tar</span><br><span class="line">tar tvf 1.tar                # 查看tar</span><br><span class="line">tar -rvf 1.tar 文件名         # 给tar追加文件</span><br><span class="line">tar --exclude=/home/dmtsai --exclude=*.tar -zcvf myfile.tar.gz /home/* /etc      # 打包/home, /etc ，但排除 /home/dmtsai</span><br><span class="line">tar -N "2005/06/01" -zcvf home.tar.gz /home      # 在 /home 当中，比 2005/06/01 新的文件才备份</span><br><span class="line">tar -zcvfh home.tar.gz /home                     # 打包目录中包括连接目录</span><br><span class="line">tar zcf - ./ | ssh root@IP "tar zxf - -C /xxxx"  # 一边压缩一边解压</span><br><span class="line">zgrep 字符 1.gz               # 查看压缩包中文件字符行</span><br><span class="line">bzip2  -dv 1.tar.bz2         # 解压bzip2</span><br><span class="line">bzip2 -v 1.tar               # bzip2压缩</span><br><span class="line">bzcat                        # 查看bzip2</span><br><span class="line">gzip A                       # 直接压缩文件 # 压缩后源文件消失</span><br><span class="line">gunzip A.gz                  # 直接解压文件 # 解压后源文件消失</span><br><span class="line">gzip -dv 1.tar.gz            # 解压gzip到tar</span><br><span class="line">gzip -v 1.tar                # 压缩tar到gz</span><br><span class="line">unzip zip.zip                # 解压zip</span><br><span class="line">zip zip.zip *                # 压缩zip</span><br><span class="line"><span class="meta">#</span><span class="bash"> rar3.6下载:  http://www.rarsoft.com/rar/rarlinux-3.6.0.tar.gz</span></span><br><span class="line">rar a rar.rar *.jpg          # 压缩文件为rar包</span><br><span class="line">unrar x rar.rar              # 解压rar包</span><br><span class="line">7z a 7z.7z *                 # 7z压缩</span><br><span class="line">7z e 7z.7z                   # 7z解压</span><br></pre></td></tr></table></figure>
<h5 id="文件ACL控制"><a href="#文件ACL控制" class="headerlink" title="文件ACL控制"></a>文件ACL控制</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getfacl 1.test                      # 查看文件ACL权限</span><br><span class="line">setfacl -R -m u:xuesong:rw- 1.test  # 对文件增加用户的读写权限 -R 递归</span><br></pre></td></tr></table></figure>
<h5 id="git操作"><a href="#git操作" class="headerlink" title="git操作"></a>git操作</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编译安装git-1.8.4.4</span></span><br><span class="line">./configure --with-curl --with-expat</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">git clone git@10.10.10.10:gittest.git  ./gittest/  # 克隆项目到指定目录</span><br><span class="line">git status                                         # Show the working tree(工作树) status</span><br><span class="line">git log -n 1 --stat                                # 查看最后一次日志文件</span><br><span class="line">git branch -a                                      # 列出远程跟踪分支(remote-tracking branches)和本地分支</span><br><span class="line">git checkout developing                            # 切换到developing分支</span><br><span class="line">git checkout -b release                            # 切换分支没有从当前分支创建</span><br><span class="line">git checkout -b release origin/master              # 从远程分支创建本地镜像分支</span><br><span class="line">git push origin --delete release                   # 从远端删除分区，服务端有可能设置保护不允许删除</span><br><span class="line">git push origin release                            # 把本地分支提交到远程</span><br><span class="line">git pull                                           # 更新项目 需要cd到项目目录中</span><br><span class="line">git fetch                                          # 抓取远端代码但不合并到当前</span><br><span class="line">git reset --hard origin/master                     # 和远端同步分支</span><br><span class="line">git add .                                          # 更新所有文件</span><br><span class="line">git commit -m "gittest up"                         # 提交操作并添加备注</span><br><span class="line">git push                                           # 正式提交到远程git服务器</span><br><span class="line">git push [-u origin master]                        # 正式提交到远程git服务器(master分支)</span><br><span class="line">git tag [-a] dev-v-0.11.54 [-m 'fix #67']          # 创建tag,名为dev-v-0.11.54,备注fix #67</span><br><span class="line">git tag -l dev-v-0.11.54                           # 查看tag(dev-v-0.11.5)</span><br><span class="line">git push origin --tags                             # 提交tag</span><br><span class="line">git reset --hard                                   # 本地恢复整个项目</span><br><span class="line">git rm -r -n --cached  ./img                       # -n执行命令时,不会删除任何文件,而是展示此命令要删除的文件列表预览</span><br><span class="line">git rm -r --cached  ./img                          # 执行删除命令 需要commit和push让远程生效</span><br><span class="line">git init --bare smc-content-check.git              # 初始化新git项目  需要手动创建此目录并给git用户权限 chown -R git:git smc-content-check.git</span><br><span class="line">git config --global credential.helper store        # 记住密码</span><br><span class="line">git config [--global] user.name "your name"        # 设置你的用户名, 希望在一个特定的项目中使用不同的用户或e-mail地址, 不要--global选项</span><br><span class="line">git config [--global] user.email "your email"      # 设置你的e-mail地址, 每次Git提交都会使用该信息</span><br><span class="line">git config [--global] user.name                    # 查看用户名</span><br><span class="line">git config [--global] user.email                   # 查看用户e-mail</span><br><span class="line">git config --global --edit                         # 编辑~/.gitconfig(User-specific)配置文件, 值优先级高于/etc/gitconfig(System-wide)</span><br><span class="line">git config --edit                                  # 编辑.git/config(Repository specific)配置文件, 值优先级高于~/.gitconfig</span><br><span class="line">git cherry-pick  &lt;commit id&gt;                       # 用于把另一个本地分支的commit修改应用到当前分支 需要push到远程</span><br><span class="line">git log --pretty=format:'%h: %s' 9378b62..HEAD     # 查看指定范围更新操作 commit id</span><br><span class="line"></span><br><span class="line">从远端拉一份新的&#123;</span><br><span class="line"><span class="meta">#</span><span class="bash"> You have not concluded your merge (MERGE_HEAD exists)  git拉取失败</span></span><br><span class="line">git fetch --hard origin/master</span><br><span class="line">git reset --hard origin/master</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="rm删除文件恢复"><a href="#rm删除文件恢复" class="headerlink" title="rm删除文件恢复"></a>rm删除文件恢复</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> debugfs针对 ext2   <span class="comment"># ext3grep针对 ext3   # extundelete针对 ext4</span></span></span><br><span class="line">df -T   # 首先查看磁盘分区格式</span><br><span class="line">umount /data/     # 卸载挂载,数据丢失请首先卸载挂载,或重新挂载只读</span><br><span class="line">ext3grep /dev/sdb1 --ls --inode 2         # 记录信息继续查找目录下文件inode信息</span><br><span class="line">ext3grep /dev/sdb1 --ls --inode 131081    # 此处是inode</span><br><span class="line">ext3grep /dev/sdb1 --restore-inode 49153  # 记录下inode信息开始恢复目录</span><br></pre></td></tr></table></figure>
<h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">ls -rtl                 # 按时间倒叙列出所有目录和文件 ll -rt</span><br><span class="line">touch file              # 创建空白文件</span><br><span class="line">rm -rf 目录名            # 不提示删除非空目录(-r:递归删除 -f强制)</span><br><span class="line">dos2unix                # windows文本转linux文本</span><br><span class="line">unix2dos                # linux文本转windows文本</span><br><span class="line">enca filename           # 查看编码  安装 yum install -y enca</span><br><span class="line">md5sum                  # 查看md5值</span><br><span class="line">ln 源文件 目标文件         # 硬链接</span><br><span class="line">ln -s 源文件 目标文件      # 符号连接</span><br><span class="line">readlink -f /data       # 查看连接真实目录</span><br><span class="line">cat file | nl |less     # 查看上下翻页且显示行号  q退出</span><br><span class="line">head                    # 查看文件开头内容</span><br><span class="line">head -c 10m             # 截取文件中10M内容</span><br><span class="line">split -C 10M            # 将文件切割大小为10M -C按行</span><br><span class="line">tail -f file            # 查看结尾 监视日志文件</span><br><span class="line">tail -F file            # 监视日志并重试, 针对文件被mv的情况可以持续读取</span><br><span class="line">file                    # 检查文件类型</span><br><span class="line">umask                   # 更改默认权限</span><br><span class="line">uniq                    # 删除重复的行</span><br><span class="line">uniq -c                 # 重复的行出现次数</span><br><span class="line">uniq -u                 # 只显示不重复行</span><br><span class="line">paste a b               # 将两个文件合并用tab键分隔开</span><br><span class="line">paste -d'+' a b         # 将两个文件合并指定'+'符号隔开</span><br><span class="line">paste -s a              # 将多行数据合并到一行用tab键隔开</span><br><span class="line">chattr +i /etc/passwd   # 不得任意改变文件或目录 -i去掉锁 -R递归</span><br><span class="line">more                    # 向下分面器</span><br><span class="line">locate 字符串            # 搜索</span><br><span class="line">wc -l file              # 查看行数</span><br><span class="line">cp filename&#123;,.bak&#125;      # 快速备份一个文件</span><br><span class="line">\cp a b                 # 拷贝不提示 既不使用别名 cp -i</span><br><span class="line">rev                     # 将行中的字符逆序排列</span><br><span class="line">comm -12 2 3            # 行和行比较匹配</span><br><span class="line">echo "10.45aa" |cksum                   # 字符串转数字编码，可做校验，也可用于文件校验</span><br><span class="line">iconv -f gbk -t utf8 原.txt &gt; 新.txt     # 转换编码</span><br><span class="line">xxd /boot/grub/stage1                   # 16进制查看</span><br><span class="line">hexdump -C /boot/grub/stage1            # 16进制查看</span><br><span class="line">rename 原模式 目标模式 文件                 # 重命名 可正则</span><br><span class="line">watch -d -n 1 'df; ls -FlAt /path'      # 实时某个目录下查看最新改动过的文件</span><br><span class="line">cp -v  /dev/dvd  /rhel4.6.iso9660       # 制作镜像</span><br><span class="line">diff suzu.c suzu2.c  &gt; sz.patch         # 制作补丁</span><br><span class="line">patch suzu.c &lt; sz.patch                 # 安装补丁</span><br></pre></td></tr></table></figure>
<h4 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h4><h5 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh lynx          # rpm安装</span><br><span class="line">rpm -e lynx            # 卸载包</span><br><span class="line">rpm -e lynx --nodeps   # 强制卸载</span><br><span class="line">rpm -qa                # 查看所有安装的rpm包</span><br><span class="line">rpm -qa | grep lynx    # 查找包是否安装</span><br><span class="line">rpm -ql                # 软件包路径</span><br><span class="line">rpm -Uvh               # 升级包</span><br><span class="line">rpm --test lynx        # 测试</span><br><span class="line">rpm -qc                # 软件包配置文档</span><br><span class="line">rpm --import  /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6     # 导入rpm的签名信息</span><br><span class="line">rpm --initdb           # 初始化rpm 数据库</span><br><span class="line">rpm --rebuilddb        # 重建rpm数据库  在rpm和yum无响应的情况使用 先 rm -f /var/lib/rpm/__db.00* 在重建</span><br></pre></td></tr></table></figure>
<h5 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum list                 # 所有软件列表</span><br><span class="line">yum install 包名          # 安装包和依赖包</span><br><span class="line">yum -y update            # 升级所有包版本,依赖关系，系统版本内核都升级</span><br><span class="line">yum -y update 软件包名    # 升级指定的软件包</span><br><span class="line">yum -y upgrade           # 不改变软件设置更新软件，系统版本升级，内核不改变</span><br><span class="line">yum search mail          # yum搜索相关包</span><br><span class="line">yum grouplist            # 软件包组</span><br><span class="line">yum -y groupinstall "Virtualization"   # 安装软件包组</span><br><span class="line">repoquery -ql gstreamer  # 不安装软件查看包含文件</span><br><span class="line">yum clean all            # 清除var下缓存</span><br></pre></td></tr></table></figure>
<h5 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">源码安装&#123;</span><br><span class="line"></span><br><span class="line">    ./configure --help                   # 查看所有编译参数</span><br><span class="line">    ./configure  --prefix=/usr/local/    # 配置参数</span><br><span class="line">    make                                 # 编译</span><br><span class="line">    # make -j 8                          # 多线程编译,速度较快,但有些软件不支持</span><br><span class="line">    make install                         # 安装包</span><br><span class="line">    make clean                           # 清除编译结果</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">perl程序编译&#123;</span><br><span class="line"></span><br><span class="line">    perl Makefile.PL</span><br><span class="line">    make</span><br><span class="line">    make test</span><br><span class="line">    make install</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">python程序编译&#123;</span><br><span class="line"></span><br><span class="line">    python file.py</span><br><span class="line"></span><br><span class="line">    # 源码包编译安装</span><br><span class="line">    python setup.py build</span><br><span class="line">    python setup.py install</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">编译c程序&#123;</span><br><span class="line"></span><br><span class="line">    gcc -g hello.c -o hello</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[django-filter]]></title>
      <url>/2019/06/24/django-filter/</url>
      <content type="html"><![CDATA[<p>Django-filter是一个通用的、可重用的应用程序来缓解写一些平凡的视图代码。具体地说,它允许用户过滤queryset基于模型的字段，从而显示对应的过滤结果。</p>
<p>使用django-filter 的时候能节省很多查询的后台代码</p>
<p>可自动生成docs文档</p>
<a id="more"></a>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>建议在虚拟环境中操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip  install django-filter</span><br></pre></td></tr></table></figure>
<h4 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">	...</span><br><span class="line">	&apos;django_filters&apos;,</span><br><span class="line">	&apos;rest_framework&apos;,</span><br><span class="line">	...</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><h5 id="models-py"><a href="#models-py" class="headerlink" title="models.py"></a>models.py</h5><p>用来生成数据库的，生成应用时会自带此文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from django.db import models</span><br><span class="line"></span><br><span class="line">class UserInfo(models.Model):</span><br><span class="line">	username = models.CharField(max_length=255)</span><br><span class="line">    phone = models.CharField(max_length=255)</span><br><span class="line">    addr = models.CharField(max_length=255)</span><br></pre></td></tr></table></figure>
<h5 id="myfilter-py"><a href="#myfilter-py" class="headerlink" title="myfilter.py"></a>myfilter.py</h5><p>新建文件，用来定义过滤类</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from django_filters import rest_framework as filters</span><br><span class="line"></span><br><span class="line">class UserInfoFilter(filters.FilterSet):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    获取用户信息</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    name = filters.CharFilter(field_name=&quot;username&quot;, lookup_expr=&apos;exact&apos;,help_text=u&apos;用户名&apos;) # exact 精确匹配</span><br><span class="line">    class Meta:</span><br><span class="line">        model = UserInfo  # models</span><br><span class="line">        fields = ()    # 空=所有  或 (username,)指定列</span><br></pre></td></tr></table></figure>
<h5 id="serializers-py"><a href="#serializers-py" class="headerlink" title="serializers.py"></a>serializers.py</h5><p>这个是<code>DRF</code>相关的东西，放着供参考</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from mytest.models import UserInfo</span><br><span class="line">from rest_framework import serializers</span><br><span class="line"></span><br><span class="line">class UserInfoSerializerI(serializers.ModelSerializer):</span><br><span class="line">    class Meta:</span><br><span class="line">        model = UserInfo</span><br><span class="line">        fields = &apos;__all__&apos;</span><br></pre></td></tr></table></figure>
<h5 id="view-py"><a href="#view-py" class="headerlink" title="view.py"></a>view.py</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">from mytest.models import UserInfo  # 这里导入的是models.py 下的方法</span><br><span class="line">from myfilter import UserInfoFilter</span><br><span class="line">from serializers import UserInfoSerializer</span><br><span class="line"></span><br><span class="line">from django_filters.rest_framework import DjangoFilterBackend</span><br><span class="line"></span><br><span class="line"># 这里使用了DRF</span><br><span class="line">class FetchUserInof(mixins.ListModelMixin,viewsets.GenericViewSet):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    获取用户信息</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    queryset = UserInfo.objects.all()</span><br><span class="line">    serializer_class = UserInfoSerializer   # 这里是DRF相关内容</span><br><span class="line">    filter_backends = (DjangoFilterBackend,)</span><br><span class="line">    filter_class = UserInfoFilter</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> web </category>
            
            <category> django </category>
            
        </categories>
        
        
        <tags>
            
            <tag> django </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[gerrit安装和使用]]></title>
      <url>/2019/06/21/gerrit%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>个人记录<br><a id="more"></a></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 创建专用账户</span><br><span class="line">useradd gerrit</span><br><span class="line"># 为账户设置密码</span><br><span class="line">passwd gerrit</span><br></pre></td></tr></table></figure>
<h5 id="安装java"><a href="#安装java" class="headerlink" title="安装java"></a>安装java</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">略</span><br><span class="line">$ java -version</span><br><span class="line">java version &quot;1.8.0_45&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_45-b14)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.45-b02, mixed mode)</span><br></pre></td></tr></table></figure>
<h5 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h5><p>如果不打算使用<code>gerrit</code> 自带的H2数据库的话</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">安装-----略</span><br><span class="line"></span><br><span class="line"># 创建db user</span><br><span class="line">mysql&gt; CREATE USER &apos;gerrit&apos;@&apos;%&apos; IDENTIFIED BY &apos;password&apos;;</span><br><span class="line"></span><br><span class="line">#创建要用的DB</span><br><span class="line">mysql&gt; CREATE DATABASE GerritDB;</span><br><span class="line"></span><br><span class="line">#授权</span><br><span class="line">mysql&gt; GRANT ALL ON GerritDB.* TO &apos;gerrit&apos;@&apos;%&apos;;</span><br></pre></td></tr></table></figure>
<h5 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum -y install git</span><br></pre></td></tr></table></figure>
<h5 id="安装gerrit"><a href="#安装gerrit" class="headerlink" title="安装gerrit"></a>安装gerrit</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 切换用户</span><br><span class="line">su - gerrit</span><br><span class="line"></span><br><span class="line"># 下载</span><br><span class="line">wget https://gerrit-releases.storage.googleapis.com/gerrit-2.15.5.war</span><br><span class="line"></span><br><span class="line">#安装  review_site 为定义的安装目录，默认安装在当前目录下（家目录）</span><br><span class="line"> java -jar gerrit-2.15.war init -d review_site</span><br></pre></td></tr></table></figure>
<p>一路回车默认安装 (其中的认证方式处改为 HTTP)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Authentication method          [OPENID/?]: HTTP</span><br></pre></td></tr></table></figure>
<p>另外，建议这几个插件也顺便安装上，全部选y</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Installing plugins.</span><br><span class="line">Install plugin commit-message-length-validator version v2.15.5 [y/N]?</span><br><span class="line">Install plugin download-commands version v2.15.5 [y/N]?</span><br><span class="line">Install plugin hooks version v2.15.5 [y/N]?</span><br><span class="line">Install plugin replication version v2.15.5 [y/N]?</span><br><span class="line">Install plugin reviewnotes version v2.15.5 [y/N]?</span><br><span class="line">Install plugin singleusergroup version v2.15.5 [y/N]?</span><br></pre></td></tr></table></figure>
<p>文件夹授权</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chown -R gerrit:gerrit review_site</span><br></pre></td></tr></table></figure>
<p>修改配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ vim review_site/etc/gerrit.config</span><br><span class="line"></span><br><span class="line">[gerrit]</span><br><span class="line">	basePath = git #指定被gerrit管理git库存放位置：review_site_project/git/</span><br><span class="line">	serverId = 1048a788-9fb9-4d7d-8da4-aa44be83aa7a</span><br><span class="line">	canonicalWebUrl = http://192.168.1.66:8088/  #指定web访问gerrit的网址，填自己的ip和端口号</span><br><span class="line">[database] </span><br><span class="line">	type = h2 	#指定gerrit所默认数据库类型，h2 已经够用了 可以选用mysql，安装并创建gerrit账户</span><br><span class="line">	database = /home/gerrit/review_site/db/GerritDB</span><br><span class="line">[index]</span><br><span class="line">	type = LUCENE</span><br><span class="line">[auth]</span><br><span class="line">	type = HTTP				#指定浏览器登录gerrit时的认证方式</span><br><span class="line">[sendemail]</span><br><span class="line">	smtpServer = localhost</span><br><span class="line">[container]</span><br><span class="line">    user = gerrit 			#指定gerrit所在机器的用户身份与上文创建的用户对应一致,可以是root</span><br><span class="line">	javaHome = /usr/local/jdk1.8.0_45/jre</span><br><span class="line">[sshd]</span><br><span class="line">	listenAddress = *:29418                        #指定sshd服务监听的端口号</span><br><span class="line">[httpd]</span><br><span class="line">	listenUrl = http://*:8088/                        #指定http代理地址</span><br><span class="line">[cache]</span><br><span class="line">	directory = cache                        #缓存位置</span><br></pre></td></tr></table></figure>
<p>启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">review_site/bin/gerrit.sh start</span><br></pre></td></tr></table></figure>
<h5 id="htpasswd"><a href="#htpasswd" class="headerlink" title="htpasswd"></a>htpasswd</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> #工具安装</span><br><span class="line">yum -y install httpd-tools  </span><br><span class="line"></span><br><span class="line">#生成密码文件</span><br><span class="line">htpasswd -c /home/gerrit/review_site/etc/gerrit.password gerrit  #然后输入密码</span><br></pre></td></tr></table></figure>
<p>注意，如果此时你是用<code>root</code>生成的密码文件，记得更改权限，粗暴点</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R gerrit:gerrit /home/gerrit</span><br></pre></td></tr></table></figure>
<h5 id="安装gitweb"><a href="#安装gitweb" class="headerlink" title="安装gitweb"></a>安装gitweb</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gitweb</span><br></pre></td></tr></table></figure>
<p>修改配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/gitweb.conf</span><br><span class="line"></span><br><span class="line"># 更改路径为你的路径</span><br><span class="line">our $projectroot = &quot;/home/gerrit/review_site/git&quot;;</span><br></pre></td></tr></table></figure>
<p>修改 /home/gerrit/review_site/etc/gerrit.config,追加内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[gitweb]</span><br><span class="line">        cgi = /var/www/git/gitweb.cgi</span><br><span class="line">        type = gitweb</span><br></pre></td></tr></table></figure>
<h5 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 安装依赖</span><br><span class="line">yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl</span><br><span class="line"></span><br><span class="line">安装 ----略</span><br></pre></td></tr></table></figure>
<p>配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 添加basic认证，修改location</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  192.168.1.66;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line">        auth_basic &quot;Welcomme!&quot;;</span><br><span class="line">        auth_basic_user_file /home/gerrit/review_site/etc/gerrit.password;</span><br><span class="line">        </span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">            proxy_pass http://192.168.1.66:8088;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            #proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h5 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/home/gerrit/review_site/bin/gerrit.sh restart</span><br><span class="line">/usr/local/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure>
<p>访问 <a href="http://192.168.1.xxx" target="_blank" rel="noopener">http://192.168.1.xxx</a> 既可</p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p><code>Projects –&gt; List</code>能看到两个默认的项目<code>All-Projects</code>和 <code>All-Users</code>，这两个工程是两个基础的工程，我们新建的工程默认都是继承自<code>All-Projects</code>的权限</p>
<p>设置：</p>
<p> <code>右上角-用户名--setting</code> - <code>Preferences</code>  偏好设置，<code>Show Change Number In Changes Table</code> 勾选</p>
<p><code>右上角-用户名--setting</code> - <code>SSH Public Keys</code> 将客户机的<code>公钥</code>添加上</p>
<p> <code>右上角-用户名--setting</code> - <code>HTTP Password</code>  生成一个访问密码，可用来访问API接口</p>
<h5 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h5><p>老版UI</p>
<p><code>Projects –&gt; List</code> 点进项目可查看到项目的一些配置，无需更改太多</p>
<p><code>Require Change-Id in commit message:</code>  true ，其余可默认</p>
<p>点<code>access</code> 点 <code>edit</code> 可对项目进行单独的授权等</p>
<p>点<code>Add Reference</code> ，将Reference设置为 <code>refs/*</code></p>
<p>点<code>Add Permission</code> ,选<code>read</code> 然后进行相应的赋权</p>
<h5 id="添加普通用户"><a href="#添加普通用户" class="headerlink" title="添加普通用户"></a>添加普通用户</h5><p>添加普通用户的访问</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 密钥文件可提前收集好</span><br><span class="line">cat ~/home/zili.pub | ssh gerrit gerrit create-account --full-name zili --email zili@zili.com --ssh-key - zili</span><br><span class="line"></span><br><span class="line">此命令意味着 管理员把用户zili加入到了Anonymous Users用户组中，并且设置了他的全称，邮件以及公钥文件</span><br></pre></td></tr></table></figure>
<p>然后我们就可以去</p>
<p><code>People  - List Groups</code> 创建组，将人员划分到组内，同时 创建项目的时候就能添加相应的组了。</p>
<h5 id="克隆项目"><a href="#克隆项目" class="headerlink" title="克隆项目"></a>克隆项目</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone ssh://gerrit@192.168.1.66:29418/test &amp;&amp; scp -p -P 29418 gerrit@192.168.1.66:hooks/commit-msg test/.git/hooks/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git config user.name test</span><br><span class="line">git config user.email test@test.com</span><br></pre></td></tr></table></figure>
<h5 id="修改push分支"><a href="#修改push分支" class="headerlink" title="修改push分支"></a>修改push分支</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config remote.origin.push refs/heads/*:refs/for/*</span><br></pre></td></tr></table></figure>
<p>当执行<code>push</code>命令时，将会推送到<code>refs/for/当前head所在的分支</code>上</p>
<p>然后我们做的所有操作都将会被gerrit记录下来了</p>
<h5 id="review"><a href="#review" class="headerlink" title="review"></a>review</h5><p>略</p>
<h4 id="api使用"><a href="#api使用" class="headerlink" title="api使用"></a>api使用</h4><p>安装 <code>pygerrit2</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">from pygerrit2 import GerritRestAPI, HTTPBasicAuth</span><br><span class="line">auth = HTTPBasicAuth(&apos;gerrit&apos;, &apos;2X8XonAccDXFY7mLFfFcadHMuS1QIA2FHfPQyIXUvg&apos;)</span><br><span class="line">#auth = HTTPBasicAuth(&apos;gerrit&apos;, &apos;gerrit&apos;)</span><br><span class="line">print(auth)</span><br><span class="line">rest = GerritRestAPI(url=&apos;http://192.168.1.66:8088&apos;, auth=auth)</span><br><span class="line">changes = rest.get(&quot;/access/?project=All-Projects&quot;)</span><br><span class="line"></span><br><span class="line">print(changes)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 注意使用的是基本认证还是摘要认证，还有版本 2.14 前后区别,见官网</span><br></pre></td></tr></table></figure>
<p>详见<a href="https://github.com/dpursehouse/pygerrit2" target="_blank" rel="noopener">https://github.com/dpursehouse/pygerrit2</a></p>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> gerrit </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[nginx+lua获取get和post参数]]></title>
      <url>/2019/05/15/nginx-lua%E8%8E%B7%E5%8F%96get%E5%92%8Cpost%E5%8F%82%E6%95%B0/</url>
      <content type="html"><![CDATA[<p><img src="/images/nginx-lua.png" alt="nginx-lua" align="center"></p>
<p>nginx 获取GET参数，或者POST参数，进行动态的转发等</p>
<a id="more"></a>
<p>mkdir /opt/packages</p>
<h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 安装依赖</span><br><span class="line">yum -y install gcc gcc-c++ glib* make autoconf openssl openssl-devel \</span><br><span class="line">libxslt-devel gd gd-devel pcre pcre-devel  readline-devel  wget curl</span><br><span class="line"></span><br><span class="line">cd /opt/packages</span><br><span class="line">wget http://nginx.org/download/nginx-1.12.2.tar.gz</span><br><span class="line"></span><br><span class="line">#新建用户，如果不新建，configure时则不要指定用户</span><br><span class="line">useradd -M -s /sbin/nologin nginx </span><br><span class="line"></span><br><span class="line">#编译，此时可以不编译安装，因为后续需添加模块到nginx</span><br><span class="line">./configure --user=nginx --group=nginx --prefix=/usr/local/nginx --with-file-aio \</span><br><span class="line">--with-http_ssl_module --with-http_realip_module --with-http_addition_module \</span><br><span class="line">--with-http_xslt_module --with-http_image_filter_module --with-http_sub_module \</span><br><span class="line">--with-http_dav_module --with-http_flv_module --with-http_mp4_module \</span><br><span class="line">--with-http_gunzip_module --with-http_gzip_static_module \</span><br><span class="line">--with-http_auth_request_module --with-http_random_index_module \</span><br><span class="line">--with-http_secure_link_module --with-http_degradation_module \</span><br><span class="line">--with-http_stub_status_module</span><br><span class="line"></span><br><span class="line">#安装</span><br><span class="line">make -j2 &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<h4 id="安装LuaJIT"><a href="#安装LuaJIT" class="headerlink" title="安装LuaJIT"></a>安装LuaJIT</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/packages</span><br><span class="line">wget http://luajit.org/download/LuaJIT-2.0.5.tar.gz</span><br><span class="line">tar -zxvf  LuaJIT-2.0.5.tar.gz</span><br><span class="line">cd LuaJIT-2.0.5</span><br><span class="line">make install PREFIX=/usr/local/LuaJIT</span><br></pre></td></tr></table></figure>
<p>输出 以下内容则成功</p>
<p><code>==== Successfully installed LuaJIT 2.0.5 to /usr/local/LuaJIT ====</code></p>
<p>修改环境变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export LUAJIT_LIB=/usr/local/LuaJIT/lib</span><br><span class="line">export LUAJIT_INC=/usr/local/LuaJIT/include/luajit-2.0</span><br><span class="line"></span><br><span class="line">#退出后</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>
<h4 id="ngx-devel-kit"><a href="#ngx-devel-kit" class="headerlink" title="ngx_devel_kit"></a>ngx_devel_kit</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/packages</span><br><span class="line">wget https://github.com/simplresty/ngx_devel_kit/archive/v0.3.0.tar.gz</span><br><span class="line">tar zxvf v0.3.0.tar.gz</span><br><span class="line"></span><br><span class="line">#放着，一会编译ngxin时导入。</span><br></pre></td></tr></table></figure>
<h4 id="安装lua-nginx-module"><a href="#安装lua-nginx-module" class="headerlink" title="安装lua-nginx-module"></a>安装lua-nginx-module</h4> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/packages</span><br><span class="line">wget https://github.com/openresty/lua-nginx-module/archive/v0.10.13.tar.gz</span><br><span class="line">tar zxvf v0.10.13.tar.gz</span><br><span class="line"></span><br><span class="line">#放着，一会编译ngxin时导入。</span><br></pre></td></tr></table></figure>
<h4 id="编译模块至nginx"><a href="#编译模块至nginx" class="headerlink" title="编译模块至nginx"></a>编译模块至nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#如果nginx已经安装 执行nginx -V 可查看编译参数</span><br><span class="line"></span><br><span class="line">./configure --user=nginx --group=nginx --prefix=/usr/local/nginx --with-file-aio \</span><br><span class="line">--with-http_ssl_module --with-http_realip_module --with-http_addition_module \</span><br><span class="line">--with-http_xslt_module --with-http_image_filter_module --with-http_sub_module \</span><br><span class="line">--with-http_dav_module --with-http_flv_module --with-http_mp4_module \</span><br><span class="line">--with-http_gunzip_module --with-http_gzip_static_module \</span><br><span class="line">--with-http_auth_request_module --with-http_random_index_module \</span><br><span class="line">--with-http_secure_link_module --with-http_degradation_module \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--with-ld-opt=-Wl,-rpath,/usr/local/LuaJIT/lib \</span><br><span class="line">--add-module=/opt/packages/ngx_devel_kit-0.3.0 \</span><br><span class="line">--add-module=/opt/packages/lua-nginx-module-0.10.13</span><br><span class="line"></span><br><span class="line">make -j2 &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<p>编译主要添加的是 这三条数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--with-ld-opt=-Wl,-rpath,/usr/local/LuaJIT/lib \</span><br><span class="line">--add-module=/opt/packages/ngx_devel_kit-0.3.0 \</span><br><span class="line">--add-module=/opt/packages/lua-nginx-module-0.10.13</span><br></pre></td></tr></table></figure>
<h4 id="测试lua模块"><a href="#测试lua模块" class="headerlink" title="测试lua模块"></a>测试lua模块</h4><p>修改<code>nginx.conf</code> 的<code>server</code> 添加如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location /lua &#123; </span><br><span class="line">    default_type &apos;text/plain&apos;; </span><br><span class="line">    content_by_lua &apos;ngx.say(&quot;lua install success&quot;)&apos;; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 重加载nginx</span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line">curl http://127.0.0.1/lua</span><br><span class="line">#返回 ： lua install success</span><br></pre></td></tr></table></figure>
<p>lua 模块安装完毕。</p>
<h4 id="安装-cjson"><a href="#安装-cjson" class="headerlink" title="安装 cjson"></a>安装 cjson</h4><p>如果需要lua解析json，可安装此模块</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/packages</span><br><span class="line">http://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz</span><br><span class="line">make</span><br></pre></td></tr></table></figure>
<p>如若报错如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cc -c -O3 -Wall -pedantic -DNDEBUG  -I/usr/local/include -fpic -o lua_cjson.o lua_cjson.c</span><br><span class="line">lua_cjson.c:43:17: 致命错误：lua.h：没有那个文件或目录</span><br><span class="line"> #include &lt;lua.h&gt;</span><br><span class="line">                 ^</span><br><span class="line">编译中断。</span><br><span class="line">make: *** [lua_cjson.o] 错误 1</span><br></pre></td></tr></table></figure>
<p>修改<code>Makefile</code> 这两处 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PREFIX =            /usr/local/LuaJIT</span><br><span class="line">LUA_INCLUDE_DIR =   $(PREFIX)/include/luajit-2.0</span><br></pre></td></tr></table></figure>
<p>复制<code>cjson.so</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp cjson.so /usr/local/LuaJIT/lib/lua/5.1/</span><br><span class="line">chmod 755 /usr/local/LuaJIT/lib/lua/5.1/cjson.so</span><br></pre></td></tr></table></figure>
<h4 id="使用lua-去rewrite路由"><a href="#使用lua-去rewrite路由" class="headerlink" title="使用lua 去rewrite路由"></a>使用lua 去rewrite路由</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">location /zili &#123;</span><br><span class="line">	# 请求体的size大于nginx配置里的client_body_buffer_size</span><br><span class="line">	# 则会导致请求体被缓冲到磁盘临时文件里，client_body_buffer_size默认是8k或者16k</span><br><span class="line">	# 如果考虑性能，可以使用ngx.req.get_body_file()，见后续</span><br><span class="line">	</span><br><span class="line">	client_max_body_size  100m ;</span><br><span class="line">    client_body_buffer_size  100m ;</span><br><span class="line">    set $proxy &apos;&apos;;</span><br><span class="line">        rewrite_by_lua_block &#123;</span><br><span class="line">            local request_method = ngx.var.request_method</span><br><span class="line">            if request_method == &quot;GET&quot; then</span><br><span class="line">                local arg = ngx.req.get_uri_args()[&quot;proxy&quot;] or 0</span><br><span class="line">                ngx.var.proxy = arg</span><br><span class="line">            elseif request_method == &quot;POST&quot; then</span><br><span class="line">                ngx.req.read_body()</span><br><span class="line">                local jkdata = ngx.req.get_body_data()</span><br><span class="line">                --ngx.print(jkdata)</span><br><span class="line">                if jkdata then</span><br><span class="line">                	--如果传进来的是 json 通过这种方式解析，</span><br><span class="line">                    --cjson = require &quot;cjson&quot;</span><br><span class="line">                    --jkval = cjson.decode(jkdata)</span><br><span class="line">                    --ngx.var.proxy = valp[&quot;proxy&quot;]</span><br><span class="line">                    </span><br><span class="line">                    --这里比较糙，使用正则去匹配了需要的ip字符串</span><br><span class="line">                    ngx.var.proxy = jkdata:match(&quot;(%d+%.%d+%.%d+%.%d+)&quot;)</span><br><span class="line">                    --ngx.var.proxy = jkval[&quot;proxy&quot;]</span><br><span class="line">                end</span><br><span class="line">            end</span><br><span class="line">        &#125;</span><br><span class="line">    include     /usr/local/nginx/conf/uwsgi_params;</span><br><span class="line">    proxy_pass  $proxy:18001;</span><br><span class="line">    access_log logs/aaa_access.log zili;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ngx.req.get_body_file()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ngx.req.read_body()</span><br><span class="line">body_data = ngx.req.get_body_data()</span><br><span class="line">if not body_data then</span><br><span class="line">    local datafile = ngx.req.get_body_file()</span><br><span class="line">    if not datafile then</span><br><span class="line">        error_code = 1</span><br><span class="line">        error_msg = &quot;no request body found&quot;</span><br><span class="line">    else</span><br><span class="line">        local fh, err = io.open(datafile, &quot;r&quot;)</span><br><span class="line">        if not fh then</span><br><span class="line">            error_code = 2</span><br><span class="line">            error_msg = &quot;failed to open &quot; .. tostring(datafile) .. &quot;for reading: &quot; .. tostring(err)</span><br><span class="line">        else</span><br><span class="line">            fh:seek(&quot;set&quot;)</span><br><span class="line">            body_data = fh:read(&quot;*a&quot;)</span><br><span class="line">            fh:close()</span><br><span class="line">            if body_data == &quot;&quot; then</span><br><span class="line">                error_code = 3</span><br><span class="line">                error_msg = &quot;request body is empty&quot;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line"> end</span><br></pre></td></tr></table></figure>
<h4 id="相关包"><a href="#相关包" class="headerlink" title="相关包"></a>相关包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">链接: https://pan.baidu.com/s/1nq9pOQO7uj88DwfHaT0EDg 提取码: p3fh</span><br></pre></td></tr></table></figure>
<p>完</p>
<hr>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nginx </tag>
            
            <tag> lua </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[django RESTful API]]></title>
      <url>/2018/10/21/django-RESTful-API/</url>
      <content type="html"><![CDATA[<p><a href="https://www.django-rest-framework.org/" target="_blank" rel="noopener">django RESTful API 官网</a><br>开发中经常遇到前后端分离,实现就要借助API.<br>API简单说就是开发人员提供编程接口被其他人调用,他们调用之后会返回数据供其使用<br>API的类型有多种，但是现在比较主流且实用的就是RESTful API.<br>本文用作个人记录<br><img src="/images/drf-api-docs.png" alt="drf-api-docs" align="center"><br><a id="more"></a></p>
<h4 id="依赖环境"><a href="#依赖环境" class="headerlink" title="依赖环境"></a>依赖环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Django (1.11.11)</span><br><span class="line">django-filter (1.1.0)</span><br><span class="line">djangorestframework (3.8.2)</span><br></pre></td></tr></table></figure>
<p>我的项目如下,<code>myproject</code>是项目 , <code>api</code>应用,<code>data</code>是主应用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">├── myproject</span><br><span class="line">│   ├── wsgi.py</span><br><span class="line">│   ├── urls.py</span><br><span class="line">│   ├── settings.py</span><br><span class="line">│   └── __init__.py</span><br><span class="line">├── manage.py</span><br><span class="line">└── api</span><br><span class="line">    ├── views.py</span><br><span class="line">    ├── urls.py</span><br><span class="line">    ├── tests.py</span><br><span class="line">    ├── serializer.py</span><br><span class="line">    ├── models.py</span><br><span class="line">    ├── migrations</span><br><span class="line">    │   └── __init__.py</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── apps.py</span><br><span class="line">    └── admin.py</span><br><span class="line">└── data</span><br><span class="line">    ├── views.py</span><br><span class="line">    ├── tests.py</span><br><span class="line">    ├── models.py</span><br><span class="line">    ├── migrations</span><br><span class="line">    │   └── __init__.py</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── apps.py</span><br><span class="line">    └── admin.py</span><br></pre></td></tr></table></figure>
<h4 id="注入应用"><a href="#注入应用" class="headerlink" title="注入应用"></a>注入应用</h4><p>修改<code>setting</code>文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...</span><br><span class="line">    &apos;data&apos;,</span><br><span class="line">    &apos;rest_framework&apos;,</span><br><span class="line">    &apos;api&apos;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h5 id="全局渲染"><a href="#全局渲染" class="headerlink" title="全局渲染"></a>全局渲染</h5><p>其实渲染有多种类型,局部的全局的等</p>
<p>这里设置的是全局的</p>
<p>在项目<code>setting</code> 追加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    &apos;DEFAULT_RENDERER_CLASSES&apos;: (</span><br><span class="line">        &apos;rest_framework.renderers.JSONRenderer&apos;,</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="使用模型序列器"><a href="#使用模型序列器" class="headerlink" title="使用模型序列器"></a>使用模型序列器</h4><p>ModelSerializers</p>
<p><code>api</code>项目下新建文件<code>serializer.py</code>和<code>urls.py</code></p>
<p>内如参考如下</p>
<h5 id="serializer-py"><a href="#serializer-py" class="headerlink" title="serializer.py"></a>serializer.py</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">from rest_framework import serializers</span><br><span class="line">from data.models import * #导入data下的models</span><br><span class="line"></span><br><span class="line">class OsInfoSerializer(serializers.ModelSerializer):</span><br><span class="line">    class Meta:</span><br><span class="line">        model =OsInfo</span><br><span class="line">        #fields = &apos;__all__&apos;  # 所有</span><br><span class="line">        fields =(&apos;id&apos;,&apos;host_ip&apos;,&apos;os_sys&apos;,&apos;os_version&apos;,等等)</span><br><span class="line"></span><br><span class="line">#定义了针对数据库表数据的过滤筛选类</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#=================第二种，post 推荐======================</span><br><span class="line"></span><br><span class="line">class FetchOsInfoSerializer(serializers.Serializer):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    获取操作系统信息参数序列化</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    ip = serializers.CharField(min_length=7, max_length=15, label=&quot;主机ip&quot;,help_text=&apos;操作系统ip&apos;)</span><br></pre></td></tr></table></figure>
<h5 id="urls-py"><a href="#urls-py" class="headerlink" title="urls.py"></a>urls.py</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">from django.conf.urls import url, include</span><br><span class="line">from rest_framework.routers import DefaultRouter</span><br><span class="line">from api import views as api_views</span><br><span class="line"></span><br><span class="line">router = DefaultRouter()</span><br><span class="line"></span><br><span class="line"># os </span><br><span class="line">router.register(&apos;osinfo/one&apos;,api_views.OsInfoOne,base_name=&apos;os_info_one&apos;)</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^&apos;, include(router.urls)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h5 id="views-py"><a href="#views-py" class="headerlink" title="views.py"></a>views.py</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># data db</span><br><span class="line">from data.models import *</span><br><span class="line">#serializer</span><br><span class="line">from serializer import * </span><br><span class="line">#rest framework</span><br><span class="line">import django_filters</span><br><span class="line">from rest_framework import viewsets, filters</span><br><span class="line">from rest_framework.response import Response</span><br><span class="line"></span><br><span class="line">class OsInfoOne(viewsets.ViewSet):</span><br><span class="line">    def list(self,request):</span><br><span class="line">        ip = request.GET[&apos;ip&apos;]</span><br><span class="line">        if ip is not None:</span><br><span class="line">            try:</span><br><span class="line">                queryset = OsInfo.objects.filter(host_ip=ip)</span><br><span class="line">                serializer_class = OsInfoSerializer</span><br><span class="line"></span><br><span class="line">                serializer = OsInfoSerializer(queryset, many=True)</span><br><span class="line">            except:</span><br><span class="line">                return Response(&apos;OsInfoOne serializer error&apos;)</span><br><span class="line">        else:</span><br><span class="line">            return Response(&apos;missing parameter ip=xxx&apos;)</span><br><span class="line"></span><br><span class="line">        if serializer.data == []:</span><br><span class="line">            return Response(&apos;None&apos;)</span><br><span class="line">        else:</span><br><span class="line">            return Response(serializer.data)</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">#=================第二种，post 推荐======================</span><br><span class="line"></span><br><span class="line">class OsInfoOne(mixins.CreateModelMixin,viewsets.GenericViewSet):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    这里是接口描述</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    serializer_class = FetchOsInfoSerializer</span><br><span class="line">    </span><br><span class="line">    def create(self,request):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        根据ip获取主机信息</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        serializer = self.get_serializer(data=request.data)</span><br><span class="line">        serializer.is_valid(raise_exception=True)</span><br><span class="line">        post_data = serializer.validated_data</span><br><span class="line">        # print(post_data[&apos;ip&apos;])</span><br><span class="line"></span><br><span class="line">        if post_data[&quot;ip&quot;]:</span><br><span class="line">            try:</span><br><span class="line">                queryset = OsInfo.objects.filter(host_ip=post_data[&quot;ip&quot;])</span><br><span class="line">                serializer = serializers.OsInfoSerializer(queryset, many=True)</span><br><span class="line">            except Exception as e:</span><br><span class="line">                return Response(&#123;&quot;status&quot;:&quot;failed&quot;,&quot;message&quot;:str(e)&#125;)</span><br><span class="line">        else:</span><br><span class="line">            try:</span><br><span class="line">                queryset = OsInfo.objects.all()</span><br><span class="line">                serializer = serializers.OsInfoSerializer(queryset, many=True)</span><br><span class="line">            except Exception as e:</span><br><span class="line">                return Response(&#123;&quot;status&quot;:&quot;failed&quot;,&quot;message&quot;:str(e)&#125;)</span><br><span class="line">        if serializer.data == []:</span><br><span class="line">            return Response(&#123;&quot;status&quot;:&quot;failed&quot;,&quot;message&quot;:&apos;Data is empty&apos;&#125;)</span><br><span class="line">        else:</span><br><span class="line">            return Response(serializer.data)</span><br></pre></td></tr></table></figure>
<h5 id="urls-py-project下"><a href="#urls-py-project下" class="headerlink" title="urls.py(project下)"></a>urls.py(project下)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^admin/&apos;, admin.site.urls),</span><br><span class="line">    url(r&apos;^api/&apos;, include(&apos;api.urls&apos;)),</span><br><span class="line">    ....</span><br></pre></td></tr></table></figure>
<p>到这里整个流程基本走完了.</p>
<p>运行程序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver 0.0.0.0:8888</span><br></pre></td></tr></table></figure></p>
<p>浏览器访问<br><a href="http://ipaddress:8888/api/osinfo/one/?ip=192.168.1.55" target="_blank" rel="noopener">http://ipaddress:8888/api/osinfo/one/?ip=192.168.1.55</a></p>
<p>返回结果:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    id: 30,</span><br><span class="line">    host_ip: &quot;192.168.1.55&quot;,</span><br><span class="line">    os_sys: &quot;GNU/Linux&quot;,</span><br><span class="line">    os_version: &quot;CentOS Linux release 7.2.1511 (Core) &quot;,</span><br><span class="line">    os_kernel: &quot;3.10.0-327.el7.x86_64&quot;,</span><br><span class="line">    cpu_model: &quot; Intel(R) Xeon(R) CPU E5-2643 v2 @ 3.50GHz&quot;,</span><br><span class="line">    cpu_num: &quot;2&quot;,</span><br><span class="line">    cpu_core: &quot; 1&quot;,</span><br><span class="line">    mem_total: &quot;4096&quot;,</span><br><span class="line">    disk_total: &quot;100 GB&quot;,</span><br><span class="line">    product_id: &quot; VMware-42 1a 0e 57 54 30 bc a6-67 a5 f7 63 41 dd ed db&quot;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p><a href="https://blog.csdn.net/ppppfly/article/details/51077433#t7" target="_blank" rel="noopener">更多方法的使用见官网或参考这里</a></p>
<hr>
]]></content>
      
        <categories>
            
            <category> web </category>
            
            <category> django </category>
            
        </categories>
        
        
        <tags>
            
            <tag> django </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[k8s探针配置]]></title>
      <url>/2018/10/18/k8s%E6%8E%A2%E9%92%88%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h4 id="1、Liveness-探针：-命令类型"><a href="#1、Liveness-探针：-命令类型" class="headerlink" title="1、Liveness 探针： 命令类型"></a>1、Liveness 探针： 命令类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    test: liveness</span><br><span class="line">  name: liveness-exec</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: liveness</span><br><span class="line">    image: k8s.gcr.io/busybox</span><br><span class="line">    args:</span><br><span class="line">    - /bin/sh</span><br><span class="line">    - -c</span><br><span class="line">    - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600</span><br><span class="line">    livenessProbe:</span><br><span class="line">      exec:</span><br><span class="line">        command:</span><br><span class="line">        - cat</span><br><span class="line">        - /tmp/healthy</span><br><span class="line">      initialDelaySeconds: 5</span><br><span class="line">      periodSeconds: 5</span><br></pre></td></tr></table></figure>
<h4 id="2、Liveness-探针-HTTP-请求类型"><a href="#2、Liveness-探针-HTTP-请求类型" class="headerlink" title="2、Liveness 探针 : HTTP 请求类型"></a>2、Liveness 探针 : HTTP 请求类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    test: liveness</span><br><span class="line">  name: liveness-http</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: liveness</span><br><span class="line">    image: k8s.gcr.io/liveness</span><br><span class="line">    args:</span><br><span class="line">    - /server</span><br><span class="line">    livenessProbe:</span><br><span class="line">      httpGet:</span><br><span class="line">        path: /healthz</span><br><span class="line">        port: 8080</span><br><span class="line">        httpHeaders:</span><br><span class="line">        - name: X-Custom-Header</span><br><span class="line">          value: Awesome</span><br><span class="line">      initialDelaySeconds: 3</span><br><span class="line">      periodSeconds: 3</span><br></pre></td></tr></table></figure>
<h4 id="3、Liveness-探针-TCP连接类型"><a href="#3、Liveness-探针-TCP连接类型" class="headerlink" title="3、Liveness 探针 : TCP连接类型"></a>3、Liveness 探针 : TCP连接类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: goproxy</span><br><span class="line">  labels:</span><br><span class="line">    app: goproxy</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: goproxy</span><br><span class="line">    image: k8s.gcr.io/goproxy:0.1</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 8080</span><br><span class="line">    readinessProbe:</span><br><span class="line">      tcpSocket:</span><br><span class="line">        port: 8080</span><br><span class="line">      initialDelaySeconds: 5</span><br><span class="line">      periodSeconds: 10</span><br><span class="line">    livenessProbe:</span><br><span class="line">      tcpSocket:</span><br><span class="line">        port: 8080</span><br><span class="line">      initialDelaySeconds: 15</span><br><span class="line">      periodSeconds: 20</span><br></pre></td></tr></table></figure>
<h4 id="4、配置-Readiness-探针：和上述Liveness配置相同"><a href="#4、配置-Readiness-探针：和上述Liveness配置相同" class="headerlink" title="4、配置 Readiness 探针：和上述Liveness配置相同"></a>4、配置 Readiness 探针：和上述Liveness配置相同</h4>]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[二进制安装kubernetes集群]]></title>
      <url>/2018/09/18/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85kubernetes%E9%9B%86%E7%BE%A4/</url>
      <content type="html"><![CDATA[<p>kubernetes集群部署</p>
<p><img src="/images/k8s-web-ui.png" alt="k8s-web-ui" align="center"></p>
<a id="more"></a>
<h4 id="集群规划"><a href="#集群规划" class="headerlink" title="集群规划"></a>集群规划</h4><p>一主二从</p>
<p>master:192.168.1.245(k8s)</p>
<table>
<thead>
<tr>
<th>组件</th>
<th style="text-align:left">版本</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>etcd</td>
<td style="text-align:left">3.3.8</td>
<td>/usr/bin</td>
</tr>
<tr>
<td>flannel</td>
<td style="text-align:left">0.10.0</td>
<td>/opt/flannel/</td>
</tr>
<tr>
<td>cni</td>
<td style="text-align:left">0.7.1</td>
<td>/opt/cni/</td>
</tr>
<tr>
<td>kubernetes</td>
<td style="text-align:left">1.10.7</td>
<td>/usr/bin/kube-apiserver,kube-controller-manager,kube-scheduler</td>
</tr>
</tbody>
</table>
<p>node-1:192.168.1.161(k8s01)<br>node-2:192.168.1.162(k8s02)</p>
<table>
<thead>
<tr>
<th>组件</th>
<th style="text-align:left">版本</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>docker</td>
<td style="text-align:left">18.03.1-ce</td>
<td>/usr/bin</td>
</tr>
<tr>
<td>etcd</td>
<td style="text-align:left">3.3.8</td>
<td>/usr/bin</td>
</tr>
<tr>
<td>flannel</td>
<td style="text-align:left">0.10.0</td>
<td>/opt/flannel/</td>
</tr>
<tr>
<td>cni</td>
<td style="text-align:left">0.7.1</td>
<td>/opt/cni/</td>
</tr>
<tr>
<td>kubernetes</td>
<td style="text-align:left">1.10.7</td>
<td>/usr/bin/kubelet,kube-proxy</td>
</tr>
</tbody>
</table>
<h4 id="安装包下载"><a href="#安装包下载" class="headerlink" title="安装包下载"></a>安装包下载</h4><p>  etcd：<a href="https://github.com/coreos/etcd/releases/" target="_blank" rel="noopener">https://github.com/coreos/etcd/releases/</a></p>
<p>  flannel：<a href="https://github.com/coreos/flannel/releases/" target="_blank" rel="noopener">https://github.com/coreos/flannel/releases/</a></p>
<p>  cni：<a href="https://github.com/containernetworking/plugins/releases" target="_blank" rel="noopener">https://github.com/containernetworking/plugins/releases</a> </p>
<p>  kubernetes：<a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.10.md#v1107" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.10.md#v1107</a></p>
<p>前提,docker已安装  <strong>docker安装不赘述.</strong></p>
<h4 id="服务安装"><a href="#服务安装" class="headerlink" title="服务安装"></a>服务安装</h4><h5 id="前置工作"><a href="#前置工作" class="headerlink" title="前置工作"></a>前置工作</h5><p><strong>主机名解析是必须的! </strong></p>
<p>设置好三台主机的主机名</p>
<p><code>hostnamectl --static set-hostname k8s/k8s01/k8s02</code></p>
<p>修改三台机器的<code>/etc/hosts</code> 添加修改如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4 k8s</span><br><span class="line">#127的修改是自己的主机名,在最后添加即可</span><br><span class="line"></span><br><span class="line">192.168.1.245 k8s</span><br><span class="line">192.168.1.161 k8s01</span><br><span class="line">192.168.1.162 k8s02</span><br></pre></td></tr></table></figure>
<p><strong>关闭防火墙和selinux </strong></p>
<p><strong>关闭SWAP分区</strong></p>
<p>如果不关闭,kubelet将无法启动</p>
<p><code>swapoff -a</code> 关闭. 然后<code>vi /etc/fsta</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#/dev/mapper/centos-swap swap                    swap    defaults        0 0</span><br><span class="line"># 注释此行</span><br></pre></td></tr></table></figure>
<p><strong>同步时间</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntpdate</span><br><span class="line">ntpdate 0.cn.pool.ntp.org</span><br></pre></td></tr></table></figure>
<h5 id="安装etcd集群"><a href="#安装etcd集群" class="headerlink" title="安装etcd集群"></a>安装etcd集群</h5><p><a href="yum install iptables-services">etcd入门</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf etcd-v3.3.8-linux-amd64.tar.gz</span><br><span class="line">cp etcd etcdctl /usr/bin</span><br><span class="line"></span><br><span class="line">mkdir -p /var/lib/etcd /etc/etcd   #创建相关文件夹</span><br></pre></td></tr></table></figure>
<p>以上操作,三台机器都要做.</p>
<h6 id="etcd配置文件"><a href="#etcd配置文件" class="headerlink" title="etcd配置文件"></a>etcd配置文件</h6><p>三台机器都要有，略有不同,主要是两个文件</p>
<p><code>/usr/lib/systemd/system/etcd.service</code> 和 <code>/etc/etcd/etcd.conf</code></p>
<p>etcd集群的主从节点关系与kubernetes集群的主从节点关系不是同的</p>
<p>etcd的配置文件只是表示三个etcd节点,etcd集群在启动和运行过程中会选举出主节点</p>
<p>因此，配置文件中体现的只是三个节点etcd-i，etcd-ii，etcd-iii</p>
<p>配置好三个节点的配置文件后,便可以启动etcd集群了</p>
<p><strong>ndoe1</strong></p>
<p>/usr/lib/systemd/system/etcd.service</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">WorkingDirectory=/var/lib/etcd/</span><br><span class="line">EnvironmentFile=/etc/etcd/etcd.conf</span><br><span class="line">ExecStart=/usr/bin/etcd</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p> /etc/etcd/etcd.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># [member]</span><br><span class="line"># 节点名称</span><br><span class="line">ETCD_NAME=etcd-i</span><br><span class="line"># 数据存放位置</span><br><span class="line">ETCD_DATA_DIR=&quot;/var/lib/etcd/default.etcd&quot;</span><br><span class="line"># 监听其他Etcd实例的地址</span><br><span class="line">ETCD_LISTEN_PEER_URLS=&quot;http://192.168.1.245:2380&quot;</span><br><span class="line"># 监听客户端地址</span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=&quot;http://192.168.1.245:2379,http://127.0.0.1:2379&quot;</span><br><span class="line"> </span><br><span class="line">#[cluster]</span><br><span class="line"># 通知其他Etcd实例地址</span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://192.168.1.245:2380&quot;</span><br><span class="line"># 初始化集群内节点地址</span><br><span class="line">ETCD_INITIAL_CLUSTER=&quot;etcd-i=http://192.168.1.245:2380,etcd-ii=http://192.168.1.161:2380,etcd-iii=http://192.168.1.162:2380&quot;</span><br><span class="line"># 初始化集群状态，new表示新建</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;</span><br><span class="line"># 初始化集群token</span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster-token&quot;</span><br><span class="line"># 通知客户端地址</span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=&quot;http://192.168.1.245:2379,http://127.0.0.1:2379&quot;</span><br></pre></td></tr></table></figure>
<p><strong>node2</strong></p>
<p>/usr/lib/systemd/system/etcd.service</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">WorkingDirectory=/var/lib/etcd/</span><br><span class="line">EnvironmentFile=/etc/etcd/etcd.conf</span><br><span class="line">ExecStart=/usr/bin/etcd</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p> /etc/etcd/etcd.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># [member]</span><br><span class="line"># 节点名称</span><br><span class="line">ETCD_NAME=etcd-ii</span><br><span class="line"># 数据存放位置</span><br><span class="line">ETCD_DATA_DIR=&quot;/var/lib/etcd/default.etcd&quot;</span><br><span class="line"># 监听其他Etcd实例的地址</span><br><span class="line">ETCD_LISTEN_PEER_URLS=&quot;http://192.168.1.161:2380&quot;</span><br><span class="line"># 监听客户端地址</span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=&quot;http://192.168.1.161:2379,http://127.0.0.1:2379&quot;</span><br><span class="line"> </span><br><span class="line">#[cluster]</span><br><span class="line"># 通知其他Etcd实例地址</span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://192.168.1.161:2380&quot;</span><br><span class="line"># 初始化集群内节点地址</span><br><span class="line">ETCD_INITIAL_CLUSTER=&quot;etcd-i=http://192.168.1.245:2380,etcd-ii=http://192.168.1.161:2380,etcd-iii=http://192.168.1.162:2380&quot;</span><br><span class="line"># 初始化集群状态，new表示新建</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;</span><br><span class="line"># 初始化集群token</span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster-token&quot;</span><br><span class="line"># 通知客户端地址</span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=&quot;http://192.168.1.161:2379,http://127.0.0.1:2379&quot;</span><br></pre></td></tr></table></figure>
<p><strong>node3</strong></p>
<p>/usr/lib/systemd/system/etcd.service</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">WorkingDirectory=/var/lib/etcd/</span><br><span class="line">EnvironmentFile=/etc/etcd/etcd.conf</span><br><span class="line">ExecStart=/usr/bin/etcd</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p> /etc/etcd/etcd.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># [member]</span><br><span class="line"># 节点名称</span><br><span class="line">ETCD_NAME=etcd-iii</span><br><span class="line"># 数据存放位置</span><br><span class="line">ETCD_DATA_DIR=&quot;/var/lib/etcd/default.etcd&quot;</span><br><span class="line"># 监听其他Etcd实例的地址</span><br><span class="line">ETCD_LISTEN_PEER_URLS=&quot;http://192.168.1.162:2380&quot;</span><br><span class="line"># 监听客户端地址</span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=&quot;http://192.168.1.162:2379,http://127.0.0.1:2379&quot;</span><br><span class="line"> </span><br><span class="line">#[cluster]</span><br><span class="line"># 通知其他Etcd实例地址</span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://192.168.1.162:2380&quot;</span><br><span class="line"># 初始化集群内节点地址</span><br><span class="line">ETCD_INITIAL_CLUSTER=&quot;etcd-i=http://192.168.1.245:2380,etcd-ii=http://192.168.1.161:2380,etcd-iii=http://192.168.1.162:2380&quot;</span><br><span class="line"># 初始化集群状态，new表示新建</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;</span><br><span class="line"># 初始化集群token</span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster-token&quot;</span><br><span class="line"># 通知客户端地址</span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=&quot;http://192.168.1.162:2379,http://127.0.0.1:2379&quot;</span><br></pre></td></tr></table></figure>
<p><strong>启动etcd集群</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start etcd.service</span><br></pre></td></tr></table></figure>
<p><strong>检查集群状态</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s ~]# etcdctl member list</span><br><span class="line">29c11a00212167fb: name=etcd-iii peerURLs=http://192.168.1.162:2380 clientURLs=http://127.0.0.1:2379,http://192.168.1.162:2379 isLeader=false</span><br><span class="line">393b6040645f784e: name=etcd-ii peerURLs=http://192.168.1.161:2380 clientURLs=http://127.0.0.1:2379,http://192.168.1.161:2379 isLeader=false</span><br><span class="line">9d56a160db6a1fd1: name=etcd-i peerURLs=http://192.168.1.245:2380 clientURLs=http://127.0.0.1:2379,http://192.168.1.245:2379 isLeader=true</span><br><span class="line"></span><br><span class="line">[root@k8s ~]# etcdctl cluster-health</span><br><span class="line">member 29c11a00212167fb is healthy: got healthy result from http://127.0.0.1:2379</span><br><span class="line">member 393b6040645f784e is healthy: got healthy result from http://127.0.0.1:2379</span><br><span class="line">member 9d56a160db6a1fd1 is healthy: got healthy result from http://127.0.0.1:2379</span><br><span class="line">cluster is healthy</span><br><span class="line">[root@k8s ~]#</span><br></pre></td></tr></table></figure>
<h5 id="安装flannel"><a href="#安装flannel" class="headerlink" title="安装flannel"></a>安装flannel</h5><p>集群机器均需操作</p>
<p>flannel服务依赖etcd，必须先安装好etcd，并配置etcd服务地址-etcd-endpoints</p>
<p>-etcd-prefix是etcd存储的flannel网络配置的键前缀</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/flannel/bin/</span><br><span class="line">tar -xzvf flannel-v0.10.0-linux-amd64.tar.gz -C /opt/flannel/bin/</span><br></pre></td></tr></table></figure>
<h6 id="flannel配置文件"><a href="#flannel配置文件" class="headerlink" title="flannel配置文件"></a>flannel配置文件</h6><p>/usr/lib/systemd/system/flannel.service</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Flanneld overlay address etcd agent</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">After=etcd.service</span><br><span class="line">Before=docker.service</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">ExecStart=/opt/flannel/bin/flanneld -etcd-endpoints=http://192.168.1.245:2379,http://192.168.1.161:2379,http://192.168.1.162:2379 -etcd-prefix=coreos.com/network</span><br><span class="line">ExecStartPost=/opt/flannel/bin/mk-docker-opts.sh -d /etc/docker/flannel_net.env -c</span><br><span class="line">Restart=on-failure</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">RequiredBy=docker.service</span><br></pre></td></tr></table></figure>
<p>执行一下命令设置flannel网络配置.(ip等信息可修改)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">etcdctl mk /coreos.com/network/config &apos;&#123;&quot;Network&quot;:&quot;172.18.0.0/16&quot;, &quot;SubnetMin&quot;: &quot;172.18.1.0&quot;, &quot;SubnetMax&quot;: &quot;172.18.254.0&quot;,  &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;vxlan&quot;&#125;&#125;&apos;</span><br><span class="line"></span><br><span class="line">#删除  etcdctl rm /coreos.com/network/config</span><br></pre></td></tr></table></figure>
<h6 id="下载flannel"><a href="#下载flannel" class="headerlink" title="下载flannel"></a>下载flannel</h6><p>flannel服务依赖flannel镜像，所以要先下载flannel镜像，执行以下命令从阿里云下载，并创建镜像tag：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-beijing.aliyuncs.com/k8s_images/flannel:v0.10.0-amd64</span><br><span class="line">docker tag registry.cn-beijing.aliyuncs.com/k8s_images/flannel:v0.10.0-amd64 quay.io/coreos/flannel:v0.10.0</span><br></pre></td></tr></table></figure>
<h6 id="配置docker"><a href="#配置docker" class="headerlink" title="配置docker"></a>配置docker</h6><p>flannel配置中有一项</p>
<p><code>ExecStartPost=/opt/flannel/bin/mk-docker-opts.sh -d /etc/docker/flannel_net.env -c</code></p>
<p>flannel启动后执行mk-docker-opts.sh，并生成/etc/docker/flannel_net.env文件</p>
<p>flannel会修改docker网络,flannel_net.env是flannel生成的docker配置参数,因此,还要修改docker配置项</p>
<p>/usr/lib/systemd/system/docker.service</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line"># After=network-online.target firewalld.service</span><br><span class="line">After=network-online.target flannel.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"># the default is not to use systemd for cgroups because the delegate issues still</span><br><span class="line"># exists and systemd currently does not support the cgroup feature set required</span><br><span class="line"># for containers run by docker</span><br><span class="line">EnvironmentFile=/etc/docker/flannel_net.env</span><br><span class="line">#ExecStart=/usr/bin/dockerd $DOCKER_OPTS</span><br><span class="line">ExecStart=/usr/bin/dockerd</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecStartPost=/usr/sbin/iptables -P FORWARD ACCEPT</span><br><span class="line"># Having non-zero Limit*s causes performance problems due to accounting overhead</span><br><span class="line"># in the kernel. We recommend using cgroups to do container-local accounting.</span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line"># Uncomment TasksMax if your systemd version supports it.</span><br><span class="line"># Only systemd 226 and above support this version.</span><br><span class="line">#TasksMax=infinity</span><br><span class="line">TimeoutStartSec=0</span><br><span class="line"># set delegate yes so that systemd does not reset the cgroups of docker containers</span><br><span class="line">Delegate=yes</span><br><span class="line"># kill only the docker process, not all processes in the cgroup</span><br><span class="line">KillMode=process</span><br><span class="line"># restart the docker process if it exits prematurely</span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p>After：flannel启动之后再启动docker</p>
<p>EnvironmentFile：配置docker的启动参数，由flannel生成</p>
<p>ExecStart：增加docker启动参数</p>
<p>ExecStartPost：在docker启动之后执行,会修改主机的iptables路由规则。    </p>
<h6 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start flannel.service</span><br><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure>
<h5 id="CNI配置"><a href="#CNI配置" class="headerlink" title="CNI配置"></a>CNI配置</h5><p>集群机器均需操作</p>
<p>CNI(Container Network Interface)容器网络接口，是Linux容器网络配置的一组标准和库，用户需要根据这些标准和库来开发自己的容器网络插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/cni/bin /etc/cni/net.d</span><br><span class="line">tar -xzvf cni-plugins-amd64-v0.7.1.tgz -C /opt/cni/bin</span><br></pre></td></tr></table></figure>
<p>/etc/cni/net.d/10-flannel.conflist</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;:&quot;cni0&quot;,</span><br><span class="line">  &quot;cniVersion&quot;:&quot;0.3.1&quot;,</span><br><span class="line">  &quot;plugins&quot;:[</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;type&quot;:&quot;flannel&quot;,</span><br><span class="line">      &quot;delegate&quot;:&#123;</span><br><span class="line">        &quot;forceAddress&quot;:true,</span><br><span class="line">        &quot;isDefaultGateway&quot;:true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;type&quot;:&quot;portmap&quot;,</span><br><span class="line">      &quot;capabilities&quot;:&#123;</span><br><span class="line">        &quot;portMappings&quot;:true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="安装k8s集群"><a href="#安装k8s集群" class="headerlink" title="安装k8s集群"></a>安装k8s集群</h5><h6 id="CA证书"><a href="#CA证书" class="headerlink" title="CA证书"></a>CA证书</h6><p>证书生成漏了一个,然后后续补上的.命令并不一定正确!!!  还未验证</p>
<p>建议去网上搜索其他ca生成教程.</p>
<table>
<thead>
<tr>
<th>证书用途</th>
<th>命名</th>
</tr>
</thead>
<tbody>
<tr>
<td>根证书和私钥</td>
<td>ca.crt、ca.key</td>
</tr>
<tr>
<td>kube-apiserver证书和私钥</td>
<td>server.crt、server.key</td>
</tr>
<tr>
<td>kube-controller-manager/kube-scheduler证书和私钥</td>
<td>cs_client.crt、cs_client.key</td>
</tr>
<tr>
<td>kubelet/kube-proxy证书和私钥</td>
<td>kubelet_client.crt、kubelet_client.key</td>
</tr>
</tbody>
</table>
<p><strong>master</strong></p>
<p><strong>创建证书目录</strong></p>
<p><code>mkdir -p /etc/kubernetes/ca</code></p>
<p><strong>生成根证书和私钥</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out ca.key 2048</span><br><span class="line">openssl req -x509 -new -nodes -key ca.key -subj &quot;/CN=k8s&quot; -days 5000 -out ca.crt</span><br><span class="line"></span><br><span class="line">#/CN=主机名</span><br></pre></td></tr></table></figure>
<p><strong>生成kube-apiserver证书和私钥</strong></p>
<p>新建master_ssl.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[req]</span><br><span class="line">req_extensions = v3_req</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line">[req_distinguished_name]</span><br><span class="line">[ v3_req ]</span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line">[alt_names]</span><br><span class="line">DNS.1 = kubernetes</span><br><span class="line">DNS.2 = kubernetes.default</span><br><span class="line">DNS.3 = kubernetes.default.svc</span><br><span class="line">DNS.4 = kubernetes.default.svc.cluster.local</span><br><span class="line">DNS.5 = k8s                     #master hostname</span><br><span class="line">IP.1 = 172.18.0.1                   #master clusterip 可通过kubectl get service获取</span><br><span class="line">IP.2 = 192.168.1.245                #master ip</span><br></pre></td></tr></table></figure>
<p>生成</p>
<p>这里的生成经网友提醒后添加的,刚开始忘记写了.时间悠久也忘记了当时的命令</p>
<p>所以这个生成命令可能并不正确.- .. 有空再去验证记录把,这里记录下.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 生成 apiserver 私钥</span><br><span class="line">openssl genrsa -out server.key 2048</span><br><span class="line"># 生成签署请求</span><br><span class="line">openssl req -new -key server.key -out server.csr -subj &quot;/CN=k8s&quot; -days 5000 -config master_ssl.conf</span><br><span class="line"># 使用自建 CA 签署</span><br><span class="line">openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt -days 5000 -extensions v3_req -extfile master_ssl.cnf</span><br><span class="line"></span><br><span class="line"> #/CN=主机名</span><br></pre></td></tr></table></figure>
<p><strong>生成kube-controller-manager/kube-scheduler证书和私钥</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out cs_client.key 2048</span><br><span class="line">openssl req -new -key cs_client.key -subj &quot;/CN=k8s&quot; -out cs_client.csr</span><br><span class="line">openssl x509 -req -in cs_client.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out cs_client.crt -days 5000</span><br><span class="line"></span><br><span class="line"> #/CN=主机名</span><br></pre></td></tr></table></figure>
<p><strong>node1</strong></p>
<p>其他node同! IP据情况而定</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/kubernetes/ca</span><br><span class="line"># 将master节点的根证书和私钥拷贝到该目录下，执行以下命令生成证书和私钥：</span><br><span class="line"></span><br><span class="line">openssl genrsa -out kubelet_client.key 2048</span><br><span class="line">    openssl req -new -key kubelet_client.key -subj &quot;/CN=192.168.1.161&quot; -out kubelet_client.csr</span><br><span class="line">    openssl x509 -req -in kubelet_client.csr  -CA ca.crt -CAkey ca.key -CAcreateserial -out kubelet_client.crt -days 5000</span><br></pre></td></tr></table></figure>
<h6 id="安装-master"><a href="#安装-master" class="headerlink" title="安装(master)"></a>安装(master)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#解压</span><br><span class="line">tar -zxvf kubernetes-server-linux-amd64.tar.gz -C /opt</span><br><span class="line"></span><br><span class="line">#复制bin文件</span><br><span class="line">cd /opt/kubernetes/server/bin</span><br><span class="line">cp -a `ls |egrep -v &quot;*.tar|*_tag&quot;` /usr/bin</span><br><span class="line"></span><br><span class="line">#创建日志文件路径</span><br><span class="line">mkdir -p /var/log/kubernetes</span><br></pre></td></tr></table></figure>
<h6 id="配置kube-apiserver"><a href="#配置kube-apiserver" class="headerlink" title="配置kube-apiserver"></a>配置kube-apiserver</h6><p> /usr/lib/systemd/system/kube-apiserver.service</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=etcd.service</span><br><span class="line">Wants=etcd.service</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/etc/kubernetes/apiserver.conf</span><br><span class="line">ExecStart=/usr/bin/kube-apiserver $KUBE_API_ARGS</span><br><span class="line">Restart=on-failure</span><br><span class="line">Type=notify</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p>/etc/kubernetes/apiserver.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">KUBE_API_ARGS=&quot;\</span><br><span class="line">    --storage-backend=etcd3 \</span><br><span class="line">    --etcd-servers=http://192.168.1.245:2379,http://192.168.1.161:2379,http://192.168.1.162:2379 \</span><br><span class="line">    --bind-address=0.0.0.0 \</span><br><span class="line">    --secure-port=6443  \</span><br><span class="line">    --service-cluster-ip-range=172.18.0.0/16 \</span><br><span class="line">    --service-node-port-range=1-65535 \</span><br><span class="line">    --kubelet-port=10250 \</span><br><span class="line">    --advertise-address=192.168.1.245 \</span><br><span class="line">    --allow-privileged=false \</span><br><span class="line">    --anonymous-auth=false \</span><br><span class="line">    --client-ca-file=/etc/kubernetes/ca/ca.crt \</span><br><span class="line">    --tls-private-key-file=/etc/kubernetes/ca/server.key \</span><br><span class="line">    --tls-cert-file=/etc/kubernetes/ca/server.crt \</span><br><span class="line">    --enable-admission-plugins=NamespaceLifecycle,LimitRanger,NamespaceExists,SecurityContextDeny,ServiceAccount,DefaultStorageClass,ResourceQuota \</span><br><span class="line">    --logtostderr=true \</span><br><span class="line">    --log-dir=/var/log/kubernets \</span><br><span class="line">    --v=2&quot;</span><br><span class="line"></span><br><span class="line">#############################</span><br><span class="line">#解释说明</span><br><span class="line">--etcd-servers  #连接到etcd集群</span><br><span class="line">--secure-port  #开启安全端口6443</span><br><span class="line">--client-ca-file、--tls-private-key-file、--tls-cert-file配置CA证书</span><br><span class="line">--enable-admission-plugins  #开启准入权限</span><br><span class="line">--anonymous-auth=false #不接受匿名访问,若为true,则表示接受,此处设置为false,便于dashboard访问</span><br></pre></td></tr></table></figure>
<h6 id="配置kube-controller-manager"><a href="#配置kube-controller-manager" class="headerlink" title="配置kube-controller-manager"></a>配置kube-controller-manager</h6><p>server 引用conf ,conf 里引用yaml</p>
<p>/etc/kubernetes/kube-controller-config.yaml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Config</span><br><span class="line">users:</span><br><span class="line">- name: controller</span><br><span class="line">  user:</span><br><span class="line">    client-certificate: /etc/kubernetes/ca/cs_client.crt</span><br><span class="line">    client-key: /etc/kubernetes/ca/cs_client.key</span><br><span class="line">clusters:</span><br><span class="line">- name: local</span><br><span class="line">  cluster:</span><br><span class="line">    certificate-authority: /etc/kubernetes/ca/ca.crt</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: local</span><br><span class="line">    user: controller</span><br><span class="line">  name: default-context</span><br><span class="line">current-context: default-context</span><br></pre></td></tr></table></figure>
<p>/usr/lib/systemd/system/kube-controller-manager.service</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=kube-apiserver.service</span><br><span class="line">Requires=kube-apiserver.service</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/etc/kubernetes/controller-manager.conf</span><br><span class="line">ExecStart=/usr/bin/kube-controller-manager $KUBE_CONTROLLER_MANAGER_ARGS</span><br><span class="line">Restart=on-failure</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p>/etc/kubernetes/controller-manager.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">KUBE_CONTROLLER_MANAGER_ARGS=&quot;\</span><br><span class="line">    --master=https://192.168.1.245:6443 \</span><br><span class="line">    --service-account-private-key-file=/etc/kubernetes/ca/server.key \</span><br><span class="line">    --root-ca-file=/etc/kubernetes/ca/ca.crt \</span><br><span class="line">    --cluster-signing-cert-file=/etc/kubernetes/ca/ca.crt \</span><br><span class="line">    --cluster-signing-key-file=/etc/kubernetes/ca/ca.key \</span><br><span class="line">    --kubeconfig=/etc/kubernetes/kube-controller-config.yaml \</span><br><span class="line">    --logtostderr=true \</span><br><span class="line">    --log-dir=/var/log/kubernetes \</span><br><span class="line">    --v=2&quot;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">#######################</span><br><span class="line">master连接到master节点</span><br><span class="line">service-account-private-key-file、root-ca-file、cluster-signing-cert-file、cluster-signing-key-file配置CA证书</span><br><span class="line"></span><br><span class="line">kubeconfig是配置文件</span><br></pre></td></tr></table></figure>
<h6 id="配置kube-scheduler"><a href="#配置kube-scheduler" class="headerlink" title="配置kube-scheduler"></a>配置kube-scheduler</h6><p>/etc/kubernetes/kube-scheduler-config.yaml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Config</span><br><span class="line">users:</span><br><span class="line">- name: scheduler</span><br><span class="line">  user:</span><br><span class="line">    client-certificate: /etc/kubernetes/ca/cs_client.crt</span><br><span class="line">    client-key: /etc/kubernetes/ca/cs_client.key</span><br><span class="line">clusters:</span><br><span class="line">- name: local</span><br><span class="line">  cluster:</span><br><span class="line">    certificate-authority: /etc/kubernetes/ca/ca.crt</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: local</span><br><span class="line">    user: scheduler</span><br><span class="line">  name: default-context</span><br><span class="line">current-context: default-context</span><br></pre></td></tr></table></figure>
<p>/usr/lib/systemd/system/kube-scheduler.service</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Scheduler</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=kube-apiserver.service</span><br><span class="line">Requires=kube-apiserver.service</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">EnvironmentFile=/etc/kubernetes/scheduler.conf</span><br><span class="line">ExecStart=/usr/bin/kube-scheduler $KUBE_SCHEDULER_ARGS</span><br><span class="line">Restart=on-failure</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p>/etc/kubernetes/scheduler.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">KUBE_SCHEDULER_ARGS=&quot;\</span><br><span class="line">    --master=https://192.168.1.245:6443 \</span><br><span class="line">    --kubeconfig=/etc/kubernetes/kube-scheduler-config.yaml \</span><br><span class="line">    --logtostderr=true \</span><br><span class="line">    --log-dir=/var/log/kubernetes \</span><br><span class="line">    --v=2&quot;</span><br></pre></td></tr></table></figure>
<h6 id="启动master"><a href="#启动master" class="headerlink" title="启动master"></a>启动master</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-apiserver.service</span><br><span class="line">systemctl start kube-controller-manager.service</span><br><span class="line">systemctl start kube-scheduler.service</span><br></pre></td></tr></table></figure>
<p> 日志查看.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">journalctl -xeu kube-apiserver --no-pager</span><br><span class="line">journalctl -xeu kube-controller-manager --no-pager</span><br><span class="line">journalctl -xeu kube-scheduler --no-pager</span><br><span class="line"></span><br><span class="line"># 实时查看加 -f</span><br></pre></td></tr></table></figure>
<h6 id="安装-node"><a href="#安装-node" class="headerlink" title="安装(node)"></a>安装(node)</h6><p>server 包中已包含了节点二进制文件.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#解压</span><br><span class="line">tar -zxvf kubernetes-server-linux-amd64.tar.gz -C /opt</span><br><span class="line"></span><br><span class="line">#复制bin文件</span><br><span class="line">cd /opt/kubernetes/server/bin</span><br><span class="line">cp -a kubectl kubelet kube-proxy /usr/bin/</span><br><span class="line"></span><br><span class="line">#创建日志文件路径</span><br><span class="line">mkdir -p /var/log/kubernetes</span><br></pre></td></tr></table></figure>
<p>touch /etc/sysctl.d/k8s.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line"></span><br><span class="line"># 修改内核参数,iptables过滤规则生效.如果未用到可忽略.</span><br><span class="line"># sysctl -p #配置生效</span><br></pre></td></tr></table></figure>
<h6 id="配置kubelet"><a href="#配置kubelet" class="headerlink" title="配置kubelet"></a>配置kubelet</h6><p>/etc/kubernetes/kubelet-config.yaml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Config</span><br><span class="line">users:</span><br><span class="line">- name: kubelet</span><br><span class="line">  user:</span><br><span class="line">    client-certificate: /etc/kubernetes/ca/kubelet_client.crt</span><br><span class="line">    client-key: /etc/kubernetes/ca/kubelet_client.key</span><br><span class="line">clusters:</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority: /etc/kubernetes/ca/ca.crt</span><br><span class="line">    server: https://192.168.1.245:6443</span><br><span class="line">  name: local</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: local</span><br><span class="line">    user: kubelet</span><br><span class="line">  name: default-context</span><br><span class="line">current-context: default-context</span><br><span class="line">preferences: &#123;&#125;</span><br></pre></td></tr></table></figure>
<p>/usr/lib/systemd/system/kubelet.service</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Kubelet Server</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=docker.service</span><br><span class="line">Requires=docker.service</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/etc/kubernetes/kubelet.conf</span><br><span class="line">ExecStart=/usr/bin/kubelet $KUBELET_ARGS</span><br><span class="line">Restart=on-failure</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p>/etc/kubernetes/kubelet.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">KUBELET_ARGS=&quot;\</span><br><span class="line">    --kubeconfig=/etc/kubernetes/kubelet-config.yaml \</span><br><span class="line">    --pod-infra-container-image=registry.aliyuncs.com/archon/pause-amd64:3.0 \</span><br><span class="line">    --hostname-override=192.168.1.161 \</span><br><span class="line">    --network-plugin=cni \</span><br><span class="line">    --cni-conf-dir=/etc/cni/net.d \</span><br><span class="line">    --cni-bin-dir=/opt/cni/bin \</span><br><span class="line">    --logtostderr=true \</span><br><span class="line">    --log-dir=/var/log/kubernetes \</span><br><span class="line">    --v=2&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###################</span><br><span class="line">--hostname-override  #配置node名称 建议使用node节点的IP</span><br><span class="line">#--pod-infra-container-image=gcr.io/google_containers/pause-amd64:3.0 \</span><br><span class="line">--pod-infra-container-image #指定pod的基础镜像 默认是google的,建议改为国内,或者FQ</span><br><span class="line">或者 下载到本地重新命名镜像</span><br><span class="line"></span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google-containers/pause-amd64:3.0</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google-containers/pause-amd64:3.0 gcr.io/google_containers/pause-amd64:3.0</span><br><span class="line"></span><br><span class="line">--kubeconfig #为配置文件</span><br></pre></td></tr></table></figure>
<h6 id="配置kube-proxy"><a href="#配置kube-proxy" class="headerlink" title="配置kube-proxy"></a>配置kube-proxy</h6><p>/etc/kubernetes/proxy-config.yaml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Config</span><br><span class="line">users:</span><br><span class="line">- name: proxy</span><br><span class="line">  user:</span><br><span class="line">    client-certificate: /etc/kubernetes/ca/kubelet_client.crt</span><br><span class="line">    client-key: /etc/kubernetes/ca/kubelet_client.key</span><br><span class="line">clusters:</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority: /etc/kubernetes/ca/ca.crt</span><br><span class="line">    server: https://192.168.1.245:6443</span><br><span class="line">  name: local</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: local</span><br><span class="line">    user: proxy</span><br><span class="line">  name: default-context</span><br><span class="line">current-context: default-context</span><br><span class="line">preferences: &#123;&#125;</span><br></pre></td></tr></table></figure>
<p>/usr/lib/systemd/system/kube-proxy.service</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Kube-Proxy Server</span><br><span class="line">Documentation=https://github.com/GoogleCloudPlatform/kubernetes</span><br><span class="line">After=network.target</span><br><span class="line">Requires=network.service</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/etc/kubernetes/proxy.conf</span><br><span class="line">ExecStart=/usr/bin/kube-proxy $KUBE_PROXY_ARGS</span><br><span class="line">Restart=on-failure</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p>/etc/kubernetes/proxy.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">KUBE_PROXY_ARGS=&quot;\</span><br><span class="line">    --master=https://192.168.1.245:6443 \</span><br><span class="line">    --hostname-override=192.168.1.161 \</span><br><span class="line">    --kubeconfig=/etc/kubernetes/proxy-config.yaml \</span><br><span class="line">    --logtostderr=true \</span><br><span class="line">    --log-dir=/var/log/kubernetes \</span><br><span class="line">    --v=2&quot;</span><br><span class="line">    </span><br><span class="line">######################</span><br><span class="line">--hostname-override  #配置node名称,要与kubelet对应，kubelet配置了，则kube-proxy也要配置</span><br><span class="line">--master  #连接master服务</span><br><span class="line">--kubeconfig #为配置文件</span><br></pre></td></tr></table></figure>
<h6 id="启动node"><a href="#启动node" class="headerlink" title="启动node"></a>启动node</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kubelet.service</span><br><span class="line">systemctl start kube-proxy.service</span><br></pre></td></tr></table></figure>
<p>日志查看</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">journalctl -xeu kubelet --no-pager</span><br><span class="line">journalctl -xeu kube-proxy --no-pager</span><br><span class="line"></span><br><span class="line"># 实时查看加 -f</span><br></pre></td></tr></table></figure>
<h6 id="查看节点"><a href="#查看节点" class="headerlink" title="查看节点"></a>查看节点</h6><p>全部安装完成后.可在master上查看node</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s bin]# kubectl get nodes</span><br><span class="line">NAME            STATUS    ROLES     AGE       VERSION</span><br><span class="line">192.168.1.161   Ready     &lt;none&gt;    55m       v1.10.7</span><br><span class="line">192.168.1.162   Ready     &lt;none&gt;    15s       v1.10.7</span><br></pre></td></tr></table></figure>
<h5 id="集群测试"><a href="#集群测试" class="headerlink" title="集群测试"></a>集群测试</h5><p>配置nginx 测试文件 (master)</p>
<p>nginx-rc.yaml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ReplicationController</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-rc</span><br><span class="line">  labels:</span><br><span class="line">    name: nginx-rc</span><br><span class="line">spec:</span><br><span class="line">  replicas: 2</span><br><span class="line">  selector:</span><br><span class="line">    name: nginx-pod</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels: </span><br><span class="line">        name: nginx-pod</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: nginx</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br></pre></td></tr></table></figure>
<p>nginx-svc.yaml </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-service</span><br><span class="line">  labels: </span><br><span class="line">    name: nginx-service</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 30081</span><br><span class="line">  selector:</span><br><span class="line">    name: nginx-pod</span><br></pre></td></tr></table></figure>
<p>启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f nginx-rc.yaml</span><br><span class="line">kubectl create -f nginx-svc.yaml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查看pod创建情况：</span><br><span class="line">kubectl get pod -o wide</span><br><span class="line"></span><br><span class="line">http://node-ip:30081/</span><br></pre></td></tr></table></figure>
<h5 id="WEB-UI"><a href="#WEB-UI" class="headerlink" title="WEB UI"></a>WEB UI</h5><h6 id="下载dashboard-yaml"><a href="#下载dashboard-yaml" class="headerlink" title="下载dashboard yaml"></a>下载dashboard yaml</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml</span><br></pre></td></tr></table></figure>
<p>修改文件 kubernetes-dashboard.yaml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">image 那里 要修改下.默认的地址被墙了</span><br><span class="line"></span><br><span class="line">#image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0</span><br><span class="line">image: mirrorgooglecontainers/kubernetes-dashboard-amd64:v1.8.3</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">##############修改后#############</span><br><span class="line"></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">      nodePort: 30000</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">添加type:NodePort</span><br><span class="line">暴露端口  ：30000</span><br></pre></td></tr></table></figure>
<h6 id="创建权限控制yaml"><a href="#创建权限控制yaml" class="headerlink" title="创建权限控制yaml"></a>创建权限控制yaml</h6><p>dashboard-admin.yaml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1  </span><br><span class="line">kind: ClusterRoleBinding  </span><br><span class="line">metadata:  </span><br><span class="line">  name: kubernetes-dashboard  </span><br><span class="line">  labels:  </span><br><span class="line">    k8s-app: kubernetes-dashboard  </span><br><span class="line">roleRef:  </span><br><span class="line">  apiGroup: rbac.authorization.k8s.io  </span><br><span class="line">  kind: ClusterRole  </span><br><span class="line">  name: cluster-admin  </span><br><span class="line">subjects:  </span><br><span class="line">- kind: ServiceAccount  </span><br><span class="line">  name: kubernetes-dashboard  </span><br><span class="line">  namespace: kube-system</span><br></pre></td></tr></table></figure>
<p>创建</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f kubernetes-dashboard.yaml</span><br><span class="line">kubectl create -f dashboard-admin.yaml</span><br></pre></td></tr></table></figure>
<p>查看</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s test]# kubectl  get pods --all-namespaces -o wide</span><br><span class="line">NAMESPACE     NAME                                    READY     STATUS    RESTARTS   AGE       IP             NODE</span><br><span class="line">kube-system   kubernetes-dashboard-66c9d98865-78r5h   1/1       Running   0          6s        172.18.100.7   192.168.1.161</span><br></pre></td></tr></table></figure>
<p>访问</p>
<p>成功后可以直接访问 <a href="https://NODE_IP:配置的端口" target="_blank" rel="noopener">https://NODE_IP:配置的端口</a> 访问</p>
<p>我这边是 <a href="https://192.168.1.162:30000" target="_blank" rel="noopener">https://192.168.1.162:30000</a></p>
<p>访问会提示登录.我们采取token登录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk &apos;&#123;print $1&#125;&apos;) | grep token</span><br></pre></td></tr></table></figure>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s test]# kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk &apos;&#123;print $1&#125;&apos;) | grep token</span><br><span class="line">Name:         admin-user-token-rlmgn</span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9..(很多字符)</span><br><span class="line"></span><br><span class="line">####</span><br><span class="line">#将这些字符复制到前端登录即可.</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[nginx自签证书]]></title>
      <url>/2018/08/02/nginx%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6/</url>
      <content type="html"><![CDATA[<h4 id="证书生成"><a href="#证书生成" class="headerlink" title="证书生成"></a>证书生成</h4><p>生成RSA的密钥，需填密码，后续会使用到</p>
<p><code>openssl genrsa -des3 -out jkstack.key 1024</code></p>
<p>生成一个不需要密码的密钥文件，要给nginx使用，若有密码，每次reload nginx配置时候都要你验证这个PAM密码的</p>
<p><code>openssl rsa -in jkstack.key -out jkstack_nopass.key</code></p>
<p>生成一个证书请求 </p>
<p><code>openssl req -new -key jkstack.key -out jkstack.csr</code> </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Enter pass phrase for domain.key:                           # 之前设置的密码</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN                        # 国家</span><br><span class="line">State or Province Name (full name) []:ShangHai                 # 地区或省份</span><br><span class="line">Locality Name (eg, city) [Default City]:ShangHai           # 地区局部名</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:JK # 机构名称</span><br><span class="line">Organizational Unit Name (eg, section) []:JK            # 组织单位名称</span><br><span class="line">Common Name (eg, your name or your server&apos;s hostname) []:jk.com # 网站域名</span><br><span class="line">Email Address []:jk@jk.com                             # 邮箱</span><br><span class="line">A challenge password []:                                    # 私钥保护密码,可直接回车</span><br><span class="line">An optional company name []:                                # 可直接回车</span><br></pre></td></tr></table></figure>
<p>使用上面的密钥和CSR对证书签名<br><code>openssl x509 -req -days 3650 -in jkstack.csr -signkey jkstack.key -out jkstack.crt</code></p>
<h4 id="Ngx配置"><a href="#Ngx配置" class="headerlink" title="Ngx配置"></a>Ngx配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx需编译模块 </span><br><span class="line">--with-http_ssl_module --with-http_stub_status_module</span><br><span class="line"></span><br><span class="line">nginx -V  # 查看当前模块</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen 443 ssl;                # 监听443端口, 开启ssl(必须)</span><br><span class="line">    server_name domain.com;</span><br><span class="line">    </span><br><span class="line">    # ssl on;     # 不建议使用， 该指令与listen中ssl参数功能相同.</span><br><span class="line">    # 引用ssl证书(必须,如果放在nginx/conf/ssl下可以用相对路径,其他位置必须用绝对路径)</span><br><span class="line">    ssl_certificate      /home/user/domain.com/conf/ssl/domain.crt;</span><br><span class="line">    ssl_certificate_key  /home/user/domain.com/conf/ssl/domain_nopass.key;</span><br><span class="line"></span><br><span class="line">    # 协议优化(可选,优化https协议,增强安全性)</span><br><span class="line">    ssl_protocols        TLSv1 TLSv1.1 TLSv1.2</span><br><span class="line">    ssl_ciphers          ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">    ssl_prefer_server_ciphers  on;</span><br><span class="line">    ssl_session_cache    shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout  10m;</span><br><span class="line"></span><br><span class="line">    # 自动跳转到HTTPS</span><br><span class="line">    if ($server_port = 80) &#123;</span><br><span class="line">        rewrite ^(.*)$ https://$host$1 permanent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 其他配置信息...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[django-celery]]></title>
      <url>/2018/08/02/django-celery/</url>
      <content type="html"><![CDATA[<p>Celery 是一个 基于python开发的分布式异步消息任务队列，通过它可以轻松的实现任务的异步处理.执行发生连接中断,自动尝试重新执行.<br>使用场景:<br>1: 比如对大量器执行一条批量命令，需要长时间等待的情况下<br>2: 大量的定时任务,执行相关脚本,检测信息等.<br><a id="more"></a></p>
<p>流程:</p>
<p>任务(异步任务,定时任务) —&gt;消息中间件(broker) —&gt;执行(celery worker)—&gt;存储(backend)</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><code>pip install celery</code> 即可.</p>
<p>个人环境</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Django==1.11.11</span><br><span class="line">celery==3.1.26.post2</span><br><span class="line">django-celery==3.2.2</span><br></pre></td></tr></table></figure>
<p>celery 默认使用RabbitMQ为broker.当然使用redis也可以.具体支持哪些可以去官网查看<br>以redis为例,redis安装不赘述,基本开箱即用,活使用docker run 一个.<br>本地还需要安装celery的redis组件<br><code>pip install -U &quot;celery[redis]&quot;</code></p>
<p>配置也很简单<br>格式为: redis://:password@hostname:port/db_number</p>
<p>参开如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">broker = &apos;redis://:123qweASD@localhost:6379/0&apos;</span><br><span class="line">backend = &apos;redis://:123qweASD@localhost:6379/0&apos;</span><br></pre></td></tr></table></figure></p>
<p>无密码格式如下:<br>redis://localhost:6379/0</p>
<h4 id="单脚本使用"><a href="#单脚本使用" class="headerlink" title="单脚本使用"></a>单脚本使用</h4><p>新建文件就叫tasks.py吧</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">from celery import Celery</span><br><span class="line"></span><br><span class="line">broker = &apos;redis://:123qweASD@192.168.1.xxx:6379/1&apos;</span><br><span class="line">backend = &apos;redis://:123qweASD@192.168.1.xxx:6379/2&apos;</span><br><span class="line"></span><br><span class="line">app = Celery(&apos;tasks&apos;, broker=broker, backend=backend)</span><br><span class="line"></span><br><span class="line">@app.task</span><br><span class="line">def add(x,y):</span><br><span class="line">    print &quot;running.....&quot;,x,y</span><br><span class="line">    return x+y</span><br></pre></td></tr></table></figure>
<p>当前目录下执行<br><code>celery -A tasks worker --loglevel=info</code><br>此时celery worker运行,终端可看到类似如下信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">...</span><br><span class="line">[tasks]</span><br><span class="line">  . tasks.add</span><br><span class="line"></span><br><span class="line">[2018-08-02 09:04:26,974: INFO/MainProcess] Connected to redis://:**@192.168.1.244:6379/5</span><br><span class="line">[2018-08-02 09:04:26,980: INFO/MainProcess] mingle: searching for neighbors</span><br><span class="line">[2018-08-02 09:04:28,000: INFO/MainProcess] mingle: all alone</span><br><span class="line">[2018-08-02 09:04:28,019: INFO/MainProcess] celery@zili-test ready.</span><br></pre></td></tr></table></figure>
<p>我们在新开个终端,或者同级目录下新建文件就叫get.py吧</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">from tasks import add</span><br><span class="line"></span><br><span class="line">res = add.delay(5,11)</span><br><span class="line"></span><br><span class="line"># 这里可加上判断</span><br><span class="line"># res.ready() # 任务执行返回true,反之false.</span><br><span class="line"># res.status #执行状态</span><br><span class="line"># 具体的结果方面的方法可在官方查看</span><br><span class="line"># http://docs.celeryproject.org/en/latest/reference/celery.result.html</span><br><span class="line"></span><br><span class="line">print res.get()</span><br><span class="line"></span><br><span class="line"># 执行可看到返回结果为16</span><br><span class="line"></span><br><span class="line">[root@zili-test celery]# python test.py </span><br><span class="line">16</span><br><span class="line"></span><br><span class="line"># 同时,在worker终端可看到如下信息</span><br><span class="line">[2018-08-02 09:10:09,805: WARNING/ForkPoolWorker-1] running.....</span><br><span class="line">[2018-08-02 09:10:09,805: WARNING/ForkPoolWorker-1] 5</span><br><span class="line">[2018-08-02 09:10:09,805: WARNING/ForkPoolWorker-1] 11</span><br><span class="line">[2018-08-02 09:10:09,811: INFO/ForkPoolWorker-1] Task tasks.add[34f964fd-afa9-45d8-845e-4b19c7d19b73] succeeded in 0.00624344032258s: 16</span><br></pre></td></tr></table></figure>
<h4 id="项目方式使用"><a href="#项目方式使用" class="headerlink" title="项目方式使用"></a>项目方式使用</h4><p>项目结构如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">test</span><br><span class="line">├── celeryconfig.py</span><br><span class="line">├── celery.py</span><br><span class="line">├── __init__.py</span><br><span class="line">├── tasks.py</span><br></pre></td></tr></table></figure>
<h5 id="celeryconfig-py"><a href="#celeryconfig-py" class="headerlink" title="celeryconfig.py"></a>celeryconfig.py</h5><p>celery配置文件,<a href="http://docs.celeryproject.org/en/latest/userguide/configuration.html#configuration" target="_blank" rel="noopener">具体参考官网</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 使用Redis作为消息代理</span><br><span class="line">BROKER_URL = &apos;redis://192.168.1.xxx:6379/1&apos;</span><br><span class="line"> </span><br><span class="line"># 把任务结果保存在Redis中</span><br><span class="line">CELERY_RESULT_BACKEND = &apos;redis://192.168.1.xxx:6379/2&apos;</span><br><span class="line"> </span><br><span class="line"># 任务序列化和反序列化使用msgpack方案</span><br><span class="line">CELERY_TASK_SERIALIZER = &apos;msgpack&apos;</span><br><span class="line"> </span><br><span class="line"># 读取任务结果一般性能要求不高，所以使用了可读性更好的JSON</span><br><span class="line">CELERY_RESULT_SERIALIZER = &apos;json&apos;</span><br><span class="line"> </span><br><span class="line"># 任务过期时间，这样写更加明显</span><br><span class="line">CELERY_TASK_RESULT_EXPIRES = 60 * 60 * 24</span><br><span class="line"> </span><br><span class="line"># 指定接受的内容类型</span><br><span class="line">CELERY_ACCEPT_CONTENT = [&apos;json&apos;, &apos;msgpack&apos;]</span><br></pre></td></tr></table></figure></p>
<h5 id="celery-py"><a href="#celery-py" class="headerlink" title="celery.py"></a>celery.py</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">from __future__ import absolute_import, unicode_literals</span><br><span class="line"></span><br><span class="line">from celery import Celery</span><br><span class="line">#import Celery</span><br><span class="line"></span><br><span class="line">broker = &apos;redis://:123qweASD@192.168.1.244:6379/1&apos;</span><br><span class="line">backend = &apos;redis://:123qweASD@192.168.1.244:6379/2&apos;</span><br><span class="line"></span><br><span class="line">app = Celery(&apos;test&apos;, broker=broker, backend=backend, include=[&apos;test.tasks&apos;])</span><br><span class="line"></span><br><span class="line"># Optional configuration, see the application user guide.</span><br><span class="line">app.conf.update(</span><br><span class="line">    result_expires=3600,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># app.config_from_object(&apos;celery.celeryconfig&apos;) </span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    app.start()</span><br></pre></td></tr></table></figure>
<h5 id="tasks-py"><a href="#tasks-py" class="headerlink" title="tasks.py"></a>tasks.py</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">from __future__ import absolute_import</span><br><span class="line">from .celery import app</span><br><span class="line"> </span><br><span class="line">@app.task</span><br><span class="line">def add(x, y):</span><br><span class="line">    return x+y</span><br></pre></td></tr></table></figure>
<p>启动 <code>celery -A test worker --loglevel=info</code><br>注意test为项目名,启动命令与项目同级</p>
<p>在项目同级下新建脚本调用即可使用celery,注意同级,不要再项目内调用.否则会报错.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from test.tasks import add</span><br><span class="line">res = add.delay(5,11)</span><br><span class="line">print res.get()</span><br></pre></td></tr></table></figure>
<h4 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h4><p>celery支持定时任务,设定好任务的执行时间,celery就会定时自动帮你执行,这个定时任务模块叫celery beat.<br>两种方式 1: 在配置文件中指定  2: 在程序中指定</p>
<p>新建脚本 <code>crontab_task.py</code></p>
<p><code>程序中指定</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">from celery import Celery</span><br><span class="line">from celery.schedules import crontab</span><br><span class="line"></span><br><span class="line">broker = &apos;redis://:123qweASD@192.168.1.244:6379/1&apos;</span><br><span class="line">backend = &apos;redis://:123qweASD@192.168.1.244:6379/2&apos;</span><br><span class="line"></span><br><span class="line">app = Celery(&apos;tasks&apos;, broker=broker, backend=backend)</span><br><span class="line"></span><br><span class="line">@app.on_after_configure.connect</span><br><span class="line">def set_crontab_task(sender, **kwargs):</span><br><span class="line">    sender.add_periodic_task(3.0, test.s(&apos;hello&apos;),name=&apos;add every 3s&apos;)</span><br><span class="line">    sender.add_periodic_task(5.0, test.s(&apos;world&apos;), expires=10)</span><br><span class="line">    sender.add_periodic_task(</span><br><span class="line">        crontab(hour=7, minute=30, day_of_week=1),</span><br><span class="line">        test.s(&apos;Happy Mondays!&apos;),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">#编写test函数.定时任务调用</span><br><span class="line">@app.task</span><br><span class="line">def test(args):</span><br><span class="line">    print args</span><br></pre></td></tr></table></figure>
<p>新建脚本 <code>crontab_task_2.py</code></p>
<p><code>配置文件中指定</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">from celery import Celery</span><br><span class="line">from celery.schedules import crontab</span><br><span class="line"></span><br><span class="line">broker = &apos;redis://:123qweASD@192.168.1.244:6379/1&apos;</span><br><span class="line">backend = &apos;redis://:123qweASD@192.168.1.244:6379/2&apos;</span><br><span class="line"></span><br><span class="line">app = Celery(&apos;tasks&apos;, broker=broker, backend=backend)</span><br><span class="line"></span><br><span class="line">@app.task</span><br><span class="line">def send(message):</span><br><span class="line">    print message</span><br><span class="line">    return message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.conf.beat_schedule = &#123;</span><br><span class="line">    &apos;send-every-10-seconds&apos;: &#123;</span><br><span class="line">        &apos;task&apos;: &apos;crontab_task2.send&apos;,</span><br><span class="line">        #&apos;schedule&apos;: 3.0,</span><br><span class="line">        &apos;schedule&apos;: crontab(minute=&apos;*/1&apos;),</span><br><span class="line">        &apos;args&apos;: (&apos;Hello World&apos;,)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.conf.timezone = &apos;UTC&apos;</span><br></pre></td></tr></table></figure>
<p><code>crontab</code> 定时配置示例</p>
<table>
<thead>
<tr>
<th>格式</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>crontab()</td>
<td>每分钟执行</td>
</tr>
<tr>
<td>crontab(minute=0, hour=0)</td>
<td>每天零点</td>
</tr>
<tr>
<td>crontab(minute=0, hour=’*/3’)</td>
<td>每三小时执行一次</td>
</tr>
<tr>
<td>crontab(minute=’*/15’)</td>
<td>每15分钟执行一次</td>
</tr>
<tr>
<td>crontab(day_of_week=’sunday’)</td>
<td>周日开始每分钟执行</td>
</tr>
<tr>
<td>crontab(<br>minute=’*/10’,<br>hour=’3,17’,<br>day_of_week=’thu,fri’)</td>
<td>每周四周五的3-4,点17-18点,<br>每十分钟执行一次</td>
</tr>
<tr>
<td>crontab(0, 0,day_of_month=’11’,month_of_year=’5’)</td>
<td>每年的五月十一日</td>
</tr>
</tbody>
</table>
<p>1: 在脚本同级目录执行<code>celery -A tasks worker -B</code> 即启动worker和beat服务<br>2: 或者先用<code>celery -A proj worker –loglevel=INFO</code>启动worker<br>再用<code>celery -A tasks beat -s /tmp/celerybeat-schedule</code></p>
<p>这里的<code>-s /tmp/celerybeat-schedule</code> 指定一个记录文件  </p>
<p>测试脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from test.tasks import add</span><br><span class="line">res = add.delay(5,11)</span><br><span class="line">print res.get()</span><br></pre></td></tr></table></figure></p>
<h4 id="后台启动"><a href="#后台启动" class="headerlink" title="后台启动"></a>后台启动</h4><p>目前我们所有的操作其实都是在shell中前台运行的.关闭终端worker就结束了.<br>所以我们需要后台的方式来运行程序.目前知道的方法有两个,supervisor和init-script</p>
<p>以init-scritp为例<br>首先去<a href="https://github.com/celery/celery/tree/3.1/extra/generic-init.d" target="_blank" rel="noopener">celery官方github</a> 下载相关的启动脚本.一个是异步任务,一个是周期任务的</p>
<p>将<code>celeryd</code>复制到<code>/etc/init.d/celeryd</code> 文件中并赋予可执行的权限<br>然后在 <code>/etc/default/</code> 文件夹下创建 <code>celeryd</code> 配置文件：</p>
<p>需要更改<code>CELERY_BIN</code> <code>CELERY_APP</code> <code>CELERYD_CHDIR</code> <code>CELERYD_USER</code> <code>CELERYD_GROUP</code><br>根据实际项目情况更改(用户和组可选择已有的或者新建,注意相关项目权限要给到)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># Names of nodes to start</span><br><span class="line">#   most people will only start one node:</span><br><span class="line">CELERYD_NODES=&quot;worker1&quot;</span><br><span class="line">#   but you can also start multiple and configure settings</span><br><span class="line">#   for each in CELERYD_OPTS</span><br><span class="line">#CELERYD_NODES=&quot;worker1 worker2 worker3&quot;</span><br><span class="line">#   alternatively, you can specify the number of nodes to start:</span><br><span class="line">#CELERYD_NODES=10</span><br><span class="line"># Absolute or relative path to the &apos;celery&apos; command:</span><br><span class="line">CELERY_BIN=&quot;/usr/bin/celery&quot;</span><br><span class="line">#CELERY_BIN=&quot;/virtualenvs/def/bin/celery&quot;</span><br><span class="line"># App instance to use</span><br><span class="line"># comment out this line if you don&apos;t use an app</span><br><span class="line">CELERY_APP=&quot;test&quot;</span><br><span class="line"># or fully qualified:</span><br><span class="line">#CELERY_APP=&quot;test.tasks:app&quot;</span><br><span class="line"># Where to chdir at start.</span><br><span class="line">CELERYD_CHDIR=&quot;/root/celery&quot;</span><br><span class="line"># Extra command-line arguments to the worker</span><br><span class="line">CELERYD_OPTS=&quot;--time-limit=300 --concurrency=8&quot;</span><br><span class="line"># Configure node-specific settings by appending node name to arguments:</span><br><span class="line">#CELERYD_OPTS=&quot;--time-limit=300 -c 8 -c:worker2 4 -c:worker3 2 -Ofair:worker1&quot;</span><br><span class="line"># Set logging level to DEBUG</span><br><span class="line">#CELERYD_LOG_LEVEL=&quot;DEBUG&quot;</span><br><span class="line"># %n will be replaced with the first part of the nodename.</span><br><span class="line">CELERYD_LOG_FILE=&quot;/var/log/celery/%n%I.log&quot;</span><br><span class="line">CELERYD_PID_FILE=&quot;/var/run/celery/%n.pid&quot;</span><br><span class="line"># Workers should run as an unprivileged user.</span><br><span class="line">#   You need to create this user manually (or you can choose</span><br><span class="line">#   a user/group combination that already exists (e.g., nobody).</span><br><span class="line">CELERYD_USER=&quot;root&quot;</span><br><span class="line">CELERYD_GROUP=&quot;root&quot;</span><br><span class="line"># If enabled pid and log directories will be created if missing,</span><br><span class="line"># and owned by the userid/group configured.</span><br><span class="line">CELERY_CREATE_DIRS=1</span><br></pre></td></tr></table></figure>
<p><code>/etc/init.d/celerybeat {start|stop|restart|create-paths|status}</code></p>
<p>如果要运行周期性的任务:</p>
<p>下载<code>celerybeat</code> 其余同上,可使用同一个配置文件.</p>
<h4 id="django中使用-异步"><a href="#django中使用-异步" class="headerlink" title="django中使用(异步)"></a>django中使用(异步)</h4><p>Celery 4.0支持django1.8及以上的版本，低于1.8的项目使用Celery 3.1</p>
<p>安装 <code>django-celery</code></p>
<h5 id="项目设置"><a href="#项目设置" class="headerlink" title="项目设置"></a>项目设置</h5><p>修改<code>项目settings.py</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import djcelery</span><br><span class="line"></span><br><span class="line">djcelery.setup_loader() </span><br><span class="line">CELERY_TIMEZONE=&apos;Asia/Shanghai&apos; #与下面TIME_ZONE应该一致</span><br><span class="line">BROKER_URL=&apos;redis://:123qweASD@192.168.1.xxx:6379/1&apos;   #消息队列</span><br><span class="line">CELERY_RESULT_BACKEND = &apos;redis://:123qweASD@192.168.1.xxx:6379/2&apos; #任务结果</span><br><span class="line">CELERYBEAT_SCHEDULER = &apos;djcelery.schedulers.DatabaseScheduler&apos;  #使用djcelery默认的数据库调度模型,任务执行周期都被存在你指定的orm数据库中</span><br><span class="line">CELERY_TASK_SERIALIZER = &apos;json&apos; #任务序列化</span><br><span class="line">CELERY_RESULT_SERIALIZER = &apos;json&apos; # 结果序列化</span><br><span class="line">CELERY_ACCEPT_CONTENT = [&apos;json&apos;] # 指定接受的内容类型</span><br><span class="line">CELERYD_MAX_TASKS_PER_CHILD = 3 #  每个worker最多执行3个任务就会被销毁，可防止内存泄露</span><br><span class="line">#CELERY_ENABLE_UTC = False</span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...</span><br><span class="line">    &apos;djcelery&apos;,</span><br><span class="line">    ... </span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p><code>settings.py</code>同级目录下<code>__init__.py</code>修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from __future__ import absolute_import</span><br><span class="line"></span><br><span class="line"># This will make sure the app is always imported when</span><br><span class="line"># Django starts so that shared_task will use this app.</span><br><span class="line">from .celery import app as celery_app</span><br><span class="line">__all__ = [&apos;celery_app&apos;]</span><br></pre></td></tr></table></figure>
<p>在项目下新建<code>celery.py</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">from __future__ import absolute_import</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">from celery import Celery</span><br><span class="line"></span><br><span class="line">os.environ.setdefault(&apos;DJANGO_SETTINGS_MODULE&apos;, &apos;zlcelery.settings&apos;) #项目视情况</span><br><span class="line"></span><br><span class="line">from django.conf import settings</span><br><span class="line"></span><br><span class="line">app = Celery(&apos;zlcelery&apos;) #项目视情况</span><br><span class="line"></span><br><span class="line">app.config_from_object(&apos;django.conf:settings&apos;)</span><br><span class="line"></span><br><span class="line">app.autodiscover_tasks(lambda: settings.INSTALLED_APPS)</span><br><span class="line"></span><br><span class="line">@app.task(bind=True)</span><br><span class="line">def debug_task(self):</span><br><span class="line">    print(&apos;Request: &#123;0!r&#125;&apos;.format(self.request))  #dumps its own request information</span><br></pre></td></tr></table></figure>
<h5 id="app设置"><a href="#app设置" class="headerlink" title="app设置"></a>app设置</h5><p>在需要定时的app下新建<code>tasks.py</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from __future__ import absolute_import</span><br><span class="line"></span><br><span class="line">from celery import shared_task</span><br><span class="line">import time</span><br><span class="line"># 这里写定时的方法即可</span><br><span class="line"></span><br><span class="line">@shared_task</span><br><span class="line">def add(x, y):</span><br><span class="line">    time.sleep(10)</span><br><span class="line">    return x + y</span><br></pre></td></tr></table></figure>
<p>然后在<code>views.py</code> 就可以调用此方法了. </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">def celery_test(request):</span><br><span class="line">    x = request.GET[&apos;x&apos;]</span><br><span class="line">    y = request.GET[&apos;y&apos;]</span><br><span class="line"></span><br><span class="line">    from .tasks import add   #调用异步方法</span><br><span class="line">    </span><br><span class="line">    #delay函数实现异步</span><br><span class="line">    result = add.delay(x,y)</span><br><span class="line"></span><br><span class="line">    res = &#123;&apos;code&apos;:200, &apos;message&apos;:&apos;ok&apos;, &apos;data&apos;:[&#123;&apos;x&apos;:x, &apos;y&apos;:y&#125;]&#125;</span><br><span class="line">    #result = add(2,5)</span><br><span class="line"></span><br><span class="line">    #return result</span><br><span class="line">    return render(request, &apos;zl/return_value.html&apos;, &#123;&apos;return_value&apos;: json.dumps(res)&#125;)</span><br><span class="line">    </span><br><span class="line">    #此时请求可直接返回定义的结果.然后继续下下去.而不需要等待执行结果出来再继续了.</span><br></pre></td></tr></table></figure>
<h6 id="同步数据库"><a href="#同步数据库" class="headerlink" title="同步数据库"></a>同步数据库</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line"></span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure>
<h6 id="创建admin"><a href="#创建admin" class="headerlink" title="创建admin"></a>创建admin</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createsuperuser</span><br><span class="line"></span><br><span class="line">Username (leave blank to use &apos;work&apos;): admin</span><br><span class="line">Email address: </span><br><span class="line">Password: </span><br><span class="line">Password (again): </span><br><span class="line">Superuser created successfully.</span><br></pre></td></tr></table></figure>
<p><code>celery -A zlcelery worker -l info -B</code> 启动worker和beat</p>
<p>默认启动后celery不能多进程,所以当有其余进程任务是,不会运行.<br>比如我们用celery调用了ansible.ansible其实并不会执行,返回为空.<br>那么使用这个命令启动,即可.</p>
<p><code>export PYTHONOPTIMIZE=1 &amp;&amp; celery -A zlcelery worker -l info -B</code> </p>
<p>动态增减 <a href="https://blog.csdn.net/vintage_1/article/details/47664297" target="_blank" rel="noopener">参考</a></p>
<p><code>export PYTHONOPTIMIZE=1 &amp;&amp; celery -A zlcelery worker --autoreload -l info -B</code></p>
<p>还有一种方法.未作真实性验证:</p>
<p>2.disable python packet multiprocessing process.py line 102:<br>assert not _current_process._config.get(‘daemon’), \ ‘daemonic processes are not allowed to have children’<br>注释掉python包multiprocessing下面process.py中102行，关闭assert</p>
<p>然后我们访问到<code>ip:port/admin</code>登录即可看到相关的celery定时任务配置前端页面.</p>
<p><code>tasks.py</code>是可以调用其他库的,比如ansible </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">from zl.ansible_api.get_sys_info import GetSysInfoL</span><br><span class="line"></span><br><span class="line">@shared_task</span><br><span class="line">def get_date(ip,user,pwd):</span><br><span class="line">    ip = ip</span><br><span class="line">    user = user</span><br><span class="line">    pwd = pwd</span><br><span class="line">    get_res = GetSysInfoL(username=user,password=pwd,ip=ip)</span><br><span class="line">    res=get_res.get_info()</span><br><span class="line"></span><br><span class="line">    return res</span><br><span class="line"></span><br><span class="line"># @shared_task 装饰器</span><br><span class="line"># ip user pwd等信息是前端页面传来的 格式djcelery规定好的</span><br><span class="line"># [&quot;192.168.1.xx&quot;,&quot;root&quot;,&quot;xxxxxxx&quot;]</span><br></pre></td></tr></table></figure>
<h5 id="调用DB"><a href="#调用DB" class="headerlink" title="调用DB"></a>调用DB</h5><p>相关的定制化,其实就是操作djcelery的数据库.不再从admin页面进入.<br>自己设计页面通过django-celery 的数据库CURD来设置任务计划</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#导入先关的 模块</span><br><span class="line"></span><br><span class="line">from djcelery.models import PeriodicTask, CrontabSchedule</span><br><span class="line">from djcelery.schedulers import ModelEntry, DatabaseScheduler</span><br><span class="line">from djcelery import loaders</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> web </category>
            
            <category> django </category>
            
        </categories>
        
        
        <tags>
            
            <tag> django </tag>
            
            <tag> celery </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[docker-lnmp-java]]></title>
      <url>/2018/07/31/docker-lnmp-java/</url>
      <content type="html"><![CDATA[<p>java 项目,前端nginx.<br><a id="more"></a></p>
<p>涉及知识点较多,本文主要写的是容器化的部分.<br>其余的知识点并不会做过多的解释.主要是容器相关的配置文件解释.<br>阅读前提,熟悉linux系统,具有一定docker知识.对compose编排有了解.熟悉zabbix,nginx的编译安装.清楚相关配置参数,依赖等.<br>如果对以上提到的几点有不清楚的,那么不建议阅读.</p>
<h4 id="构建rpm包"><a href="#构建rpm包" class="headerlink" title="构建rpm包"></a>构建rpm包</h4><p>由于在容器内编译是需要很多组件以及依赖和工具.所以导致生成的容器以及镜像体积非常大.</p>
<p>所以,建议下载相关的源码包,构建完毕后在容器内安装,这样整个包体积就缩小非常多!</p>
<p>当然如果对整个编译依赖<code>非常非常清楚</code>,也可以在容器内编译,然后编译完毕后删除不需要的依赖包以及缓存等.</p>
<p>具体rpm构建方式不赘述了.有兴趣可以<a href="http://blog.dl1548.site/2018/02/28/rpm%E6%89%93%E5%8C%85/" target="_blank" rel="noopener">点此阅读 </a>,相关的rpm构建配置文档如下</p>
<h5 id="nginx-rpm包构建"><a href="#nginx-rpm包构建" class="headerlink" title="nginx rpm包构建"></a>nginx rpm包构建</h5><p>nginx.spec 文件配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">Name:   nginx                              </span><br><span class="line">Version:     1.12.2                           </span><br><span class="line">Release:    1%&#123;?dist&#125;                       </span><br><span class="line">Summary:    nginx-1.12.2                   </span><br><span class="line">Group:      nginx                          </span><br><span class="line">License:    GPL</span><br><span class="line"></span><br><span class="line">URL:        http://blog.dl1548.site</span><br><span class="line"></span><br><span class="line">Source0:    nginx-1.12.2.tar.gz</span><br><span class="line">Source1:    nginx.conf</span><br><span class="line">Source2:    fastcgi_params</span><br><span class="line">Source3:    index.php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BuildRequires:  openssl,openssl-devel,pcre,pcre-devel         </span><br><span class="line">#制作rpm包时，所依赖的基本库,很多,并未写完,具体的在dockerfile体现</span><br><span class="line"></span><br><span class="line">Requires:   openssl,openssl-devel,pcre,pcre-devel</span><br><span class="line"></span><br><span class="line">#BuildRoot: %&#123;_tmpdir&#125;/%&#123;name&#125;-%&#123;version&#125;</span><br><span class="line"></span><br><span class="line">%description                                </span><br><span class="line">creata by lizili</span><br><span class="line"></span><br><span class="line">%pre                                        </span><br><span class="line">grep nginx /etc/passwd &gt; /dev/null</span><br><span class="line">if [ $? != 0 ] </span><br><span class="line">then useradd nginx -M -s /sbin/nologin</span><br><span class="line">fi</span><br><span class="line">[ -d /usr/local/zabbix ]||rm -rf /usr/local/nginx*</span><br><span class="line"></span><br><span class="line">%post                                       </span><br><span class="line"></span><br><span class="line">%preun                                      </span><br><span class="line">/usr/local/nginx/sbin/nginx -s stop</span><br><span class="line"></span><br><span class="line">%postun                                     </span><br><span class="line">userdel  nginx</span><br><span class="line">rm -rf /usr/local/nginx</span><br><span class="line"></span><br><span class="line">%prep</span><br><span class="line">%setup -q                                   </span><br><span class="line"></span><br><span class="line">#这里就是nginx编译安装的相关配置信息</span><br><span class="line">%build                                      </span><br><span class="line">./configure --user=nginx --group=nginx --prefix=/usr/local/%&#123;name&#125; --with-file-aio --with-http_ssl_module \</span><br><span class="line">--with-http_realip_module --with-http_addition_module --with-http_xslt_module --with-http_image_filter_module \</span><br><span class="line">--with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module \</span><br><span class="line">--with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module \</span><br><span class="line">--with-http_degradation_module --with-http_stub_status_module</span><br><span class="line">make -j8 %&#123;?_smp_mflags&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%install                                    </span><br><span class="line">test -L %&#123;buildroot&#125;/usr/local/%&#123;name&#125; &amp;&amp; rm -f %&#123;buildroot&#125;/usr/local/%&#123;name&#125;</span><br><span class="line">make install DESTDIR=%&#123;buildroot&#125;</span><br><span class="line"></span><br><span class="line">install -p -D -m 0755 %&#123;SOURCE1&#125;        %&#123;buildroot&#125;/usr/local/%&#123;name&#125;/conf/nginx.conf</span><br><span class="line">install -p -D -m 0755 %&#123;SOURCE2&#125;        %&#123;buildroot&#125;/usr/local/%&#123;name&#125;/conf/fastcgi_params</span><br><span class="line">install -p -D -m 0755 %&#123;SOURCE3&#125;        %&#123;buildroot&#125;/usr/local/%&#123;name&#125;/html/index.php</span><br><span class="line"></span><br><span class="line">%files</span><br><span class="line">%defattr (-,root,root,0755)                                      </span><br><span class="line"></span><br><span class="line">/usr/local/%&#123;name&#125;/*</span><br><span class="line"></span><br><span class="line">%changelog                                  </span><br><span class="line">#主要用于软件的变更日志。该选项可有可无</span><br><span class="line"></span><br><span class="line">%clean </span><br><span class="line">rm -rf %&#123;buildroot&#125;                         </span><br><span class="line">#清理临时文件</span><br></pre></td></tr></table></figure>
<h5 id="zabbix-server-rpm包构建"><a href="#zabbix-server-rpm包构建" class="headerlink" title="zabbix_server rpm包构建"></a>zabbix_server rpm包构建</h5><p>zabbxi_server.spec</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">%define zabbix_user zabbix                  </span><br><span class="line">Name:   zabbix                              </span><br><span class="line">Version:    3.0.5                          </span><br><span class="line">Release:    1%&#123;?dist&#125;                       </span><br><span class="line">Summary:    zabbix_server                 </span><br><span class="line">Group:      zabbix                          </span><br><span class="line">License:    GPL</span><br><span class="line">URL:        http://blog.dl1548.site</span><br><span class="line">Source0:    zabbix-3.0.5.tar.gz</span><br><span class="line">BuildRequires: unixODBC </span><br><span class="line">#制作rpm包时，所依赖的基本库,依赖很多,简单写一个</span><br><span class="line"></span><br><span class="line">Requires: unixODBC</span><br><span class="line"></span><br><span class="line">#BuildRoot: %&#123;_tmpdir&#125;/%&#123;name&#125;-%&#123;version&#125;-%&#123;release&#125;</span><br><span class="line"></span><br><span class="line">%description                                </span><br><span class="line">Zabbix server 3.0.5</span><br><span class="line">creata by lizili</span><br><span class="line"></span><br><span class="line">%pre                                        </span><br><span class="line">grep zabbix /etc/passwd &gt; /dev/null</span><br><span class="line">if [ $? != 0 ] </span><br><span class="line">then useradd zabbix -M -s /sbin/nologin</span><br><span class="line">fi</span><br><span class="line">[ -d /usr/local/zabbix ]||rm -rf /usr/local/zabbix*</span><br><span class="line">rm -rf /etc/zabbix*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%post                                       </span><br><span class="line">#修改启动文件路径</span><br><span class="line">sed -i &quot;/BASEDIR=\/usr\/local/c\BASEDIR=\/usr\/local\/%&#123;name&#125;&quot; /etc/init.d/zabbix_agentd</span><br><span class="line">sed -i &quot;/BASEDIR=\/usr\/local/c\BASEDIR=\/usr\/local\/%&#123;name&#125;&quot; /etc/init.d/zabbix_server</span><br><span class="line"></span><br><span class="line">%preun                                      </span><br><span class="line">/etc/init.d/zabbix_server stop</span><br><span class="line"></span><br><span class="line">%postun                                     </span><br><span class="line">userdel  zabbix</span><br><span class="line">rm -rf /usr/local/zabbix*</span><br><span class="line"></span><br><span class="line">%prep</span><br><span class="line"></span><br><span class="line">%setup -q                                   </span><br><span class="line"></span><br><span class="line">%build                                      </span><br><span class="line">#定义编译软件包时的操作</span><br><span class="line">./configure --prefix=/usr/local/%&#123;name&#125; --enable-server --enable-agent --enable-ipv6 --with-mysql --with-net-snmp  --with-libcurl --with-openipmi --with-ldap --with-ssh2 --enable-java --with-libxml2</span><br><span class="line">make -j8 %&#123;?_smp_mflags&#125;</span><br><span class="line"></span><br><span class="line">%install                                    </span><br><span class="line">test -L %&#123;buildroot&#125;/usr/local/%&#123;name&#125; &amp;&amp; rm -f %&#123;buildroot&#125;/usr/local/%&#123;name&#125;</span><br><span class="line">install -d %&#123;buildroot&#125;/etc/profile.d</span><br><span class="line">install -d %&#123;buildroot&#125;/etc/init.d</span><br><span class="line">make install DESTDIR=%&#123;buildroot&#125;</span><br><span class="line"></span><br><span class="line">#复制启动脚本</span><br><span class="line">cp %&#123;_builddir&#125;/%&#123;name&#125;-%&#123;version&#125;/misc/init.d/fedora/core/zabbix_agentd  %&#123;buildroot&#125;/etc/init.d/zabbix_agentd</span><br><span class="line">cp %&#123;_builddir&#125;/%&#123;name&#125;-%&#123;version&#125;/misc/init.d/fedora/core/zabbix_server  %&#123;buildroot&#125;/etc/init.d/zabbix_server</span><br><span class="line"></span><br><span class="line">%files</span><br><span class="line">%defattr (-,root,root,0755)                                      </span><br><span class="line">#定义rpm包安装时创建的相关目录及文件</span><br><span class="line">/usr/local/%&#123;name&#125;/*</span><br><span class="line">/etc/init.d/zabbix_agentd</span><br><span class="line">/etc/init.d/zabbix_server</span><br><span class="line"></span><br><span class="line">%changelog                                  </span><br><span class="line">#主要用于软件的变更日志。该选项可有可无</span><br><span class="line"></span><br><span class="line">%clean </span><br><span class="line">rm -rf %&#123;buildroot&#125;                         </span><br><span class="line">#清理临时文件</span><br></pre></td></tr></table></figure>
<p>事后会得到两个编译好的rpm包. 保存下来,给容器使用.</p>
<h4 id="编排"><a href="#编排" class="headerlink" title="编排"></a>编排</h4><p>本文使用的docker官网的编排工具docker-compose</p>
<p>编排的前提是,先要创建一个私有网络<code>docker network create -d bridge --subnet 172.1.0.0/16 jk</code>  </p>
<p>这样,可以不用映射某些不必要的端口.<code>容器内可直接访问相关的地址</code>.</p>
<p>当然,也可以配置通过映射访问.那么需要更改几个文件.</p>
<p>建议容器内互联,这样,可不用进入容器内更改配置.而且不必要的端口不用曝露出来,增加安全性</p>
<p>编排结构如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">├── docker-compose.yml</span><br><span class="line">├── monitor</span><br><span class="line">│   └── apache-tomcat-8.5.24.tar.gz</span><br><span class="line">│   └── Dockerfile                  </span><br><span class="line">│   └── jdk-8u45-linux-x64.tar.gz</span><br><span class="line">│   └── monitor.war</span><br><span class="line">├── mysql</span><br><span class="line">│   ├── cnf</span><br><span class="line">│   │   ├── 3.0.5</span><br><span class="line">│   │   │   ├── data.sql</span><br><span class="line">│   │   │   ├── images.sql</span><br><span class="line">│   │   │   ├── monitor.sql</span><br><span class="line">│   │   │   └── schema.sql</span><br><span class="line">│   │   ├── init_database.sql</span><br><span class="line">│   │   ├── init_db.sh</span><br><span class="line">│   │   └── mysqld.cnf</span><br><span class="line">│   ├── datadir</span><br><span class="line">│   └── Dockerfile</span><br><span class="line">├── nginx</span><br><span class="line">│   ├── Dockerfile</span><br><span class="line">│   ├── nginx-1.12.2-1.el7.centos.x86_64.rpm</span><br><span class="line">│   ├── nginx.conf</span><br><span class="line">│   └── zabbix</span><br><span class="line">│       ├── 3.0.5</span><br><span class="line">│       │   ├── logs</span><br><span class="line">│       │   │   └── zabbix_server.log</span><br><span class="line">│       │   ├── web</span><br><span class="line">│       │   │   └── zabbix.conf.php</span><br><span class="line">│       │   └── zabbix_server.conf</span><br><span class="line">│       └── zabbix-3.0.5-1.el7.centos.x86_64.rpm</span><br><span class="line">└── readme</span><br></pre></td></tr></table></figure>
<p><code>monitor</code> 此文件夹下是monitor项目的Dockerfile需要的文件以及配置</p>
<p><code>mysql</code> 此文件夹下是mysql项目的Dockerfile需要的文件以及配置</p>
<p><code>nginx</code> 此文件夹下是nginx项目的Dockerfile需要的文件以及配置(包括zabbix)</p>
<p><code>docker-compose.yml</code> 是编排文件,通过它来构建整个monitor的容器化</p>
<h5 id="monitor"><a href="#monitor" class="headerlink" title="monitor"></a>monitor</h5><p>此文件夹下的先关配置用来构建公司monitor项目.</p>
<p>Dockerfile如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">ADD jdk-8u45-linux-x64.tar.gz /usr/local</span><br><span class="line"></span><br><span class="line">ENV RUN_AS_USER=root</span><br><span class="line">ENV JAVA_HOME /usr/local/jdk1.8.0_45</span><br><span class="line">ENV CLASS_HOME=/usr/local/jdk1.8.0_45/lib:$JAVA_HOME/jre/lib</span><br><span class="line">ENV CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH</span><br><span class="line">ENV PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line"></span><br><span class="line">ADD apache-tomcat-8.5.24.tar.gz /usr/local</span><br><span class="line"></span><br><span class="line">EXPOSE 8080</span><br><span class="line">ENTRYPOINT [&quot;/usr/local/apache-tomcat-8.5.24/bin/catalina.sh&quot;, &quot;run&quot;]</span><br></pre></td></tr></table></figure>
<h5 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h5><p><code>cnf文件夹</code> 数据库相关配置文件.数据库配置就是<code>mysqld.cnf</code> Dockerfile 将此文件进行映射并赋权.</p>
<p>这样在生成镜像的时候,相关的数据库配置就能生效了.不用去容器内修改.注意权限!</p>
<p><code>3.0.5</code>  针对的是zabbix版本,存放的也是zabbix需要预先生成并导入的表.</p>
<p><code>init_database.sql</code> 初始化数据的文件 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS zabbix default charset utf8 COLLATE utf8_general_ci;</span><br><span class="line">CREATE DATABASE IF NOT EXISTS monitor default charset utf8 COLLATE utf8_general_ci;</span><br></pre></td></tr></table></figure>
<p><code>init_db.sh</code> 初始化数据库的脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#init db</span><br><span class="line">mysql -uroot -p$MYSQL_ROOT_PASSWORD &lt;&lt; EOF</span><br><span class="line">source $WORK_PATH/$FILE_0;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># init zbx</span><br><span class="line">mysql -uroot -p$MYSQL_ROOT_PASSWORD zabbix &lt;&lt; EOF</span><br><span class="line">source $WORK_PATH/$FILE_1;</span><br><span class="line">source $WORK_PATH/$FILE_2;</span><br><span class="line">source $WORK_PATH/$FILE_3;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">#init monitor</span><br><span class="line">mysql -uroot -p$MYSQL_ROOT_PASSWORD monitor &lt;&lt; EOF</span><br><span class="line">source $WORK_PATH/$FILE_4;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p><code>datadir</code> 用来做数据持久化使用</p>
<p>Dockerfile如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">FROM mysql:5.7.21</span><br><span class="line"></span><br><span class="line">MAINTAINER lizili(blog.dl1548.site)</span><br><span class="line"></span><br><span class="line">ENV WORK_PATH /usr/local/work</span><br><span class="line"></span><br><span class="line">#此目录下的脚本在生成容器是会自动执行.用来做初始化使用</span><br><span class="line">ENV AUTO_RUN_DIR /docker-entrypoint-initdb.d</span><br><span class="line"></span><br><span class="line">#定义sql文件名</span><br><span class="line">ENV FILE_0 init_database.sql </span><br><span class="line">ENV FILE_1 schema.sql</span><br><span class="line">ENV FILE_2 images.sql</span><br><span class="line">ENV FILE_3 data.sql</span><br><span class="line">ENV FILE_4 monitor.sql</span><br><span class="line">#定义shell文件名</span><br><span class="line">ENV INSTALL_DB_SHELL init_db.sh</span><br><span class="line"></span><br><span class="line">#把数据库初始化数据的文件复制到工作目录下</span><br><span class="line">COPY cnf/$FILE_0 $WORK_PATH/</span><br><span class="line">COPY cnf/3.0.5/$FILE_1 $WORK_PATH/</span><br><span class="line">COPY cnf/3.0.5/$FILE_2 $WORK_PATH/</span><br><span class="line">COPY cnf/3.0.5/$FILE_3 $WORK_PATH/</span><br><span class="line">COPY cnf/3.0.5/$FILE_4 $WORK_PATH/</span><br><span class="line">#把要执行的shell文件放到/docker-entrypoint-initdb.d/目录下，容器会自动执行这个shell</span><br><span class="line">COPY cnf/$INSTALL_DB_SHELL $AUTO_RUN_DIR/</span><br><span class="line"></span><br><span class="line">#mysql配置文件</span><br><span class="line">COPY cnf/mysqld.cnf /etc/mysql/mysql.conf.d/mysqld.cnf</span><br><span class="line"></span><br><span class="line">#给执行文件增加可执行权限.权限一定要更改.否则配置不生效.这个权限困扰我一段时间..有点坑.</span><br><span class="line">RUN mkdir -p $WORK_PATH \</span><br><span class="line">    &amp;&amp; chown mysql:mysql /etc/mysql/mysql.conf.d/mysqld.cnf \</span><br><span class="line">    &amp;&amp; chmod 600 /etc/mysql/mysql.conf.d/mysqld.cnf \</span><br><span class="line">    &amp;&amp; chmod a+x $AUTO_RUN_DIR/$INSTALL_DB_SHELL</span><br></pre></td></tr></table></figure>
<h5 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h5><p><code>nginx-1.12.2-1.el7.centos.x86_64.rpm</code> 前面构建的rpm安装包.</p>
<p><code>nginx.conf</code> nginx配置文件,需要注意这里的nginx路径是由构建rpm是决定的.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line">worker_processes  auto;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections 51200;</span><br><span class="line">    multi_accept on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    client_max_body_size  500m;</span><br><span class="line"></span><br><span class="line">    tcp_nopush     on;</span><br><span class="line">    tcp_nodelay on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    fastcgi_connect_timeout 300;</span><br><span class="line">    fastcgi_send_timeout 300;</span><br><span class="line">    fastcgi_read_timeout 300;</span><br><span class="line">    fastcgi_buffer_size 64k;</span><br><span class="line">    fastcgi_buffers 4 64k;</span><br><span class="line">    fastcgi_busy_buffers_size 128k;</span><br><span class="line">    fastcgi_temp_file_write_size 256k;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_min_length  1k;</span><br><span class="line">    gzip_buffers     4 16k;</span><br><span class="line">    gzip_http_version 1.1;</span><br><span class="line">    gzip_comp_level 2;</span><br><span class="line">    gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;</span><br><span class="line">    gzip_vary on;</span><br><span class="line">    gzip_proxied   expired no-cache no-store private auth;</span><br><span class="line">    gzip_disable   &quot;MSIE [1-6]\.&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line">        root /usr/local/nginx/html;</span><br><span class="line"></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ [^/]\.php(/|$) &#123;</span><br><span class="line">            #try_files $uri =404;</span><br><span class="line">            root           /usr/local/nginx/html;</span><br><span class="line">            fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            #fastcgi_param  SCRIPT_FILENAME  /usr/local/nginx/html/$fastcgi_script_name;</span><br><span class="line">            include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?$ &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /\. &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        access_log logs/php_access.log;</span><br><span class="line">        error_log  logs/php_error.log  notice;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>zabbix</code> 此文件夹是用来搭建监控服务.</p>
<p><code>3.0.5</code> 是为了zabbix版本分类使用</p>
<p><code>web</code> 存放的是zabbix官方提供的监控前端php等文件.</p>
<p><code>zabbix.conf.php</code> zabbix前端的配置文件.主要是指定连接的数据库地址,以及监控server地址</p>
<p>此文件可直接在官网提供的前端文件中,复制,重命名,然后更改.</p>
<p>注意我指定的数据库地址,就是容器内地址,可不通过端口映射访问,一定程度上讲,访问速度也有所提升.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// Zabbix GUI configuration file.</span><br><span class="line">global $DB;</span><br><span class="line"></span><br><span class="line">$DB[&apos;TYPE&apos;]     = &apos;MYSQL&apos;;</span><br><span class="line">$DB[&apos;SERVER&apos;]   = &apos;172.1.0.33&apos;;</span><br><span class="line">$DB[&apos;PORT&apos;]     = &apos;3306&apos;;</span><br><span class="line">$DB[&apos;DATABASE&apos;] = &apos;zabbix&apos;;</span><br><span class="line">$DB[&apos;USER&apos;]     = &apos;root&apos;;</span><br><span class="line">$DB[&apos;PASSWORD&apos;] = &apos;123qweASD&apos;;</span><br><span class="line"></span><br><span class="line">// Schema name. Used for IBM DB2 and PostgreSQL.</span><br><span class="line">$DB[&apos;SCHEMA&apos;] = &apos;&apos;;</span><br><span class="line"></span><br><span class="line">$ZBX_SERVER      = &apos;192.168.1.244&apos;;</span><br><span class="line">$ZBX_SERVER_PORT = &apos;10051&apos;;</span><br><span class="line">$ZBX_SERVER_NAME = &apos;&apos;;</span><br><span class="line">$IMAGE_FORMAT_DEFAULT = IMAGE_FORMAT_PNG;</span><br></pre></td></tr></table></figure>
<p><code>zabbix_server.conf</code>  zabbix_server服务配置.</p>
<p>这个文件主要是要指定数据库为远程数据库.以及配置相关库和账户密码等</p>
<p>主要更改的几个点</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DBHost=172.1.0.33  #这里指定的也是容器内的地址.如果是端口映射,那么指定os地址.</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=root</span><br><span class="line">DBPassword=123qweASD</span><br></pre></td></tr></table></figure>
<p><code>zabbix-3.0.5-1.el7.centos.x86_64.rpm</code>  前面构建的rpm安装包.</p>
<p>Dockerfile 配置如下:</p>
<p>这个dockerfile是最复杂的,安装了nginx,zabbix,php-fpm的运行环境以及依赖.</p>
<p>安装了容器中文语言环境支持,用来支持zabbix的中文语言环境(需要做相关配置.具体公司操作文档有.可直接在web内的前端文件修改,docker会自动映射到容器内部),修改了一下配置文件,使zabbix可正常运行.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">MAINTAINER zili.li(blog.dl1548.site)</span><br><span class="line"></span><br><span class="line">COPY nginx-1.12.2-1.el7.centos.x86_64.rpm /tmp/nginx-1.12.2-1.el7.centos.x86_64.rpm</span><br><span class="line">COPY zabbix/zabbix-3.0.5-1.el7.centos.x86_64.rpm /tmp/zabbix-3.0.5-1.el7.centos.x86_64.rpm</span><br><span class="line">#zabbix rpm</span><br><span class="line"></span><br><span class="line">WORKDIR /tmp</span><br><span class="line"></span><br><span class="line">#install server</span><br><span class="line">RUN nginxDeps=&apos;glib* autoconf openssl openssl-devel libxslt-devel gd gd-devel pcre pcre-devel &apos; \</span><br><span class="line">    &amp;&amp; phpDeps=&apos;php php-mysql php-common php-fpm php-gd php-ldap \</span><br><span class="line">            php-odbc php-pear php-xml php-mcrypt php-xmlrpc php-devel \</span><br><span class="line">            php-mbstring php-snmp php-soap curl curl-devel php-bcmath mod_ssl&apos; \</span><br><span class="line">    &amp;&amp; zbxDeps=&apos;fping mysql-connector-odbc mysql-devel libdbi-dbd-mysql \</span><br><span class="line">            libssh2 libxml2 libxml2-devel libssh2-devel unixODBC unixODBC-devel \</span><br><span class="line">            pam-devel net-snmp-devel net-snmp-utils  OpenIPMI OpenIPMI-devel rpm-build \</span><br><span class="line">            openldap openldap-devel libcurl-devel  java java-devel&apos; \</span><br><span class="line">    &amp;&amp; useradd -M -s /sbin/nologin nginx \</span><br><span class="line">    &amp;&amp; useradd -M -s /sbin/nologin php \</span><br><span class="line">    &amp;&amp; yum -y install epel-release \</span><br><span class="line">    &amp;&amp; yum clean all \</span><br><span class="line">    &amp;&amp; yum -y install $nginxDeps $phpDeps $zbxDeps kde-l10n-Chinese \ </span><br><span class="line">    &amp;&amp; rpm -ivh nginx-1.12.2-1.el7.centos.x86_64.rpm \</span><br><span class="line">    &amp;&amp; rpm -ivh zabbix-3.0.5-1.el7.centos.x86_64.rpm \</span><br><span class="line">    &amp;&amp; rm -rf /tmp/* \</span><br><span class="line">    &amp;&amp; rm -rf /var/cache/* \</span><br><span class="line">    &amp;&amp; sed -i &apos;s/upload_max_filesize = 2M/upload_max_filesize = 50M/g&apos; /etc/php.ini \</span><br><span class="line">    &amp;&amp; sed -i &apos;s/;date.timezone =/date.timezone =PRC/&apos; /etc/php.ini \</span><br><span class="line">    &amp;&amp; sed -i &apos;s/max_execution_time = 30/max_execution_time = 600/g&apos; /etc/php.ini \</span><br><span class="line">    &amp;&amp; sed -i &apos;s/max_input_time = 60/max_input_time = 600/g&apos; /etc/php.ini \</span><br><span class="line">    &amp;&amp; sed -i &apos;s/memory_limit = 128M/memory_limit = 256M/g&apos; /etc/php.ini \</span><br><span class="line">    &amp;&amp; sed -i &apos;s/post_max_size = 8M/post_max_size = 16M/g&apos; /etc/php.ini \</span><br><span class="line">    &amp;&amp; rm -rf /etc/localtime &amp;&amp; ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \</span><br><span class="line">    &amp;&amp; localedef -c -f UTF-8 -i zh_CN zh_CN.utf8</span><br><span class="line"></span><br><span class="line">#ENV TIME_ZONE Asia/Shanghai</span><br><span class="line">ENV PATH /usr/local/nginx/sbin:$PATH                </span><br><span class="line">ENV LC_ALL zh_CN.utf8</span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line">#ENTRYPOINT [&quot;nginx&quot;]</span><br><span class="line"></span><br><span class="line">CMD /usr/local/nginx/sbin/nginx &amp;&amp; /etc/init.d/zabbix_server start &amp;&amp; /etc/init.d/zabbix_agentd start &amp;&amp; /usr/sbin/php-fpm</span><br></pre></td></tr></table></figure>
<h5 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line">services:</span><br><span class="line">  backserver:</span><br><span class="line">    hostname: MonitorBack</span><br><span class="line">    build: ./nginx</span><br><span class="line">    volumes:</span><br><span class="line">      - ./nginx/nginx.conf:/usr/local/nginx/conf/nginx.conf:rw</span><br><span class="line">      - ./nginx/zabbix/3.0.5/web/:/usr/local/nginx/html/monitor:rw</span><br><span class="line">      - ./nginx/zabbix/3.0.5/zabbix_server.conf:/usr/local/zabbix/etc/zabbix_server.conf:rw</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">      - 10050:10050 </span><br><span class="line">      - 10051:10051</span><br><span class="line">    networks:</span><br><span class="line">      jk:</span><br><span class="line">        ipv4_address: 172.1.0.80</span><br><span class="line">    restart: always</span><br><span class="line">    depends_on:</span><br><span class="line">      - dbserver</span><br><span class="line">      - webserver</span><br><span class="line"></span><br><span class="line">  webserver:</span><br><span class="line">    hostname: JKMonitor</span><br><span class="line">    build: ./monitor</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - ./monitor/monitor.war:/usr/local/apache-tomcat-8.5.24/webapps/monitor.war</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8080</span><br><span class="line">    networks:</span><br><span class="line">      jk:</span><br><span class="line">        ipv4_address: 172.1.0.88</span><br><span class="line">    depends_on:</span><br><span class="line">      - dbserver</span><br><span class="line"></span><br><span class="line">  dbserver:</span><br><span class="line">    hostname: MonitorDB</span><br><span class="line">    build: ./mysql</span><br><span class="line">    volumes:</span><br><span class="line">      #- ./my.cnf:/etc/my.cnf.d/zili.cnf:rw #在dockerfile中配置并赋权</span><br><span class="line">      - ./mysql/datadir:/var/lib/mysql:rw</span><br><span class="line">    #ports:</span><br><span class="line">    #  - 3306:3306</span><br><span class="line">    networks:</span><br><span class="line">      jk:</span><br><span class="line">        ipv4_address: 172.1.0.33</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: &apos;123qweASD&apos;</span><br><span class="line">      MYSQL_ROOT_HOST: &apos;%&apos;</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  jk:</span><br><span class="line">    external: true</span><br></pre></td></tr></table></figure>
<p>进入jk下 执行<code>docker-compose up --build</code> 即可,后台加<code>-d</code></p>
<p>完.</p>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[uWSGI+Nginx部署Django项目]]></title>
      <url>/2018/06/22/uWSGI-Nginx%E9%83%A8%E7%BD%B2Django%E9%A1%B9%E7%9B%AE/</url>
      <content type="html"><![CDATA[<p>nginx + uwsgi socket 的方式来部署 Django<br>请求流程:<br>the web client &lt;-&gt; the web server &lt;-&gt; the socket &lt;-&gt; uwsgi &lt;-&gt; Django<br>nginx是可选的.<br><a id="more"></a></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><code>yum install python-devel</code><br>如果没有,先安装 <code>epel-release</code>.或下载源码安装.</p>
<p>安装 <a href="http://blog.dl1548.site/2017/02/20/nginx-tomcat-redis%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E4%B8%8Esession/" target="_blank" rel="noopener">nginx</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">具体参数,按需添加</span><br><span class="line"></span><br><span class="line">./configure --prefix=/usr/local/nginx/ --with-http_v2_module --with-http_ssl_module --with-http_sub_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre</span><br></pre></td></tr></table></figure></p>
<p>安装 <code>pip install uwsgi --upgrade</code></p>
<h4 id="uwsgi"><a href="#uwsgi" class="headerlink" title="uwsgi"></a>uwsgi</h4><p>uWSGI是一个Web服务器，它实现了WSGI协议、uwsgi、http等协议。uWSGI支持许多不同的语言，因此也支持许多Web应用程序,Nginx中HttpUwsgiModule的作用是与uWSGI服务器进行交换.</p>
<p>测试uWSGI是否能正常运行<br>新建文件<code>uwsgi_test.py</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def application(env, start_response):</span><br><span class="line">        start_response(&apos;200 OK&apos;,[(&apos;Content-Type&apos;, &apos;text/html&apos;)])</span><br><span class="line">        return [&apos;Hello world&apos;] # Python2</span><br><span class="line">        #return [b&apos;Hello world&apos;] # Python3</span><br></pre></td></tr></table></figure></p>
<p>在文件目录下执行<code>uwsgi --http 0.0.0.0:8001 --wsgi-file uwsgi_test.py</code><br>使用浏览器访问 ip:8001返回hello world 即表示,uwsgi是可运行的</p>
<p>使用uWSGI运行django项目</p>
<p><code>uwsgi --http 0.0.0.0:8001 --chdir /path/to/project --home=/path/to/env --module project.wsgi --master --processes 4 --threads 2</code></p>
<p>–home 指定virtualenv 路径，如果没有可以去掉<br>project.wsgi 指的是 project/wsgi.py 文件(比如项目叫test,那就是test.wsgi)<br>或者直接指定入口文件</p>
<p><code>uwsgi --http 0.0.0.0:8001 --chdir /path/to/project --wsgi-file project/wsgi.py --master --processes 4 --threads 2</code></p>
<p>执行这个命令会产生4个uwsgi进程（每个进程2个线程），1个master进程，当有子进程死掉时再产生子进程，1个 the HTTP router进程，共6  个进程。<br>这个Http route进程的地位有点类似nginx，(可以认为与nginx同一层)负责路由http请求给worker, Http route进程和worker之间使用的是uwsgi协议</p>
<p>访问ip:8001 可正常访问,表明项目已通过uwsgi启动成功</p>
<h5 id="编写uwsgi配置文件"><a href="#编写uwsgi配置文件" class="headerlink" title="编写uwsgi配置文件"></a>编写uwsgi配置文件</h5><p>参数过多,可以通过ini配置文件来解决.</p>
<p>通过配置文件启动django项目,<br>此配置是,通过uwsgi来启动django项目 <code>uwsgi django.ini</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line">#绑定地址</span><br><span class="line">http=0.0.0.0:8001</span><br><span class="line">#项目路径,不是应用路径</span><br><span class="line">chdir=/opt/cmdb</span><br><span class="line">#后台启动,输出log</span><br><span class="line">#daemonize=/var/log/uwsgi.log </span><br><span class="line">master=true</span><br><span class="line">#processes=4</span><br><span class="line">#threads=2</span><br><span class="line"></span><br><span class="line">#并发处理进程</span><br><span class="line">work=20 </span><br><span class="line"></span><br><span class="line"># 并发的socket 连接数。默认为100,具体视情况</span><br><span class="line">listen=2048 # 和系统配置有关,系统配置见后</span><br><span class="line">socket-timeout=60</span><br><span class="line">die-on-term = true</span><br><span class="line"></span><br><span class="line">module=cmdb.wsgi</span><br><span class="line"></span><br><span class="line">#指定pid和status路径,目录需新建</span><br><span class="line">stats=%(chdir)/uwsgi/uwsgi.status</span><br><span class="line">pidfile=%(chdir)/uwsgi/uwsgi.pid</span><br></pre></td></tr></table></figure>
<h5 id="其他建议"><a href="#其他建议" class="headerlink" title="其他建议"></a>其他建议</h5><p>通过配置文件,我们开启了多进程,多并发连接.但是这些还受限于其他的配置.比如nginx 和系统自身</p>
<p>系统配置<br><code>vim /etc/sysctl.conf</code> 添加如下<br><code>net.core.somaxconn = 2048</code>net.core.somaxconn是Linux中的一个kernel参数，表示socket监听（listen）的backlog上限<br>backlog就是socket的监听队列，当一个请求（request）尚未被处理或建立时，他会进入backlog。而socket server可以一次性处理backlog中的所有请求，处理后的请求不再位于监听队列中。当server处理请求较慢，以至于监听队列被填满后，新来的请求会被拒绝。默认 128 </p>
<p><code>vim /etc/security/limits.conf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* soft nofile 65535</span><br><span class="line">* hard nofile 65535</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">“*”表示所有用户都生效</span><br><span class="line">soft（应用软件）级别限制的最大可打开文件数的限制</span><br><span class="line">hard表示操作系统级别限制的最大可打开文件数的限制</span><br><span class="line">重启成效</span><br><span class="line"></span><br><span class="line">或者 </span><br><span class="line"></span><br><span class="line">ulimit -n 65535 临时性生效</span><br></pre></td></tr></table></figure>
<p>nginx 配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">worker_processes  xx;  #可以设置成cpu个数，或者auto</span><br><span class="line">worker_rlimit_nofile 65535; #worker进程打开最大连接数 和系统配置有关</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections  9000;  # 不可超过worker_rlimit_nofile</span><br><span class="line">    multi_accept on;    #告诉nginx收到一个新连接通知后接受尽可能多的连接</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>uwsgi --ini uwsgin.ini</code> 启动<br><code>uwsgi --reload uwsgi/uwsgi.pid</code> 重启<br><code>uwsgi --stop uwsgi/uwsgi.pid</code> 停止<br><code>uwsgi --connect-and-read uwsgi/uwsgi.status</code> 查看状态</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">常用选项：</span><br><span class="line"></span><br><span class="line">http ： 协议类型和端口号</span><br><span class="line"></span><br><span class="line">processes ： 开启的进程数量</span><br><span class="line"></span><br><span class="line">workers ： 开启的进程数量，等同于processes（官网的说法是spawn the specified number of workers / processes）</span><br><span class="line"></span><br><span class="line">chdir ： 指定运行目录（chdir to specified directory before apps loading）</span><br><span class="line"></span><br><span class="line">wsgi-file ： 载入wsgi-file（load .wsgi file）</span><br><span class="line"></span><br><span class="line">stats ： 在指定的地址上，开启状态服务（enable the stats server on the specified address）</span><br><span class="line"></span><br><span class="line">threads ： 运行线程。由于GIL的存在，觉得这个真心没啥用。（run each worker in prethreaded mode with the specified number of threads）</span><br><span class="line"></span><br><span class="line">master ： 允许主进程存在（enable master process）</span><br><span class="line"></span><br><span class="line">daemonize ： 使进程在后台运行，并将日志打到指定的日志文件或者udp服务器（daemonize uWSGI）。实际上最常用的，还是把运行记录输出到一个本地文件上。</span><br><span class="line"></span><br><span class="line">pidfile ： 指定pid文件的位置，记录主进程的pid号。</span><br><span class="line"></span><br><span class="line">vacuum ： 当服务器退出的时候自动清理环境，删除unix socket文件和pid文件（try to remove all of the generated file/sockets）</span><br><span class="line"></span><br><span class="line">max-requests=500  #为每个工作进程设置请求数的上限。当一个工作进程处理的请求数达到这个值，那么该工作进程就会被回收重用（重启）。你可以使用这个选项来默默地对抗内存泄漏</span><br><span class="line"></span><br><span class="line">daemonize : 日志</span><br><span class="line"></span><br><span class="line">socket-timeout #为所有的socket操作设置内部超时时间（默认4秒）。</span><br></pre></td></tr></table></figure>
<p>至此,项目已经可正常运行.下面要做的是与nginx结合.</p>
<h4 id="nginx-uwsgi-django"><a href="#nginx-uwsgi-django" class="headerlink" title="nginx+uwsgi+django"></a>nginx+uwsgi+django</h4><p>通过sock文件或者http都是可以的.不同方式,nginx配置有所改变.</p>
<p><code>tuoch uwsgi_http.ini</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line">#这里不要使用http了,否则访问nginx会出现502.</span><br><span class="line">socket=0.0.0.0:18001</span><br><span class="line">chdir = /opt/cmdb</span><br><span class="line">wsgi-file = cmdb/wsgi.py</span><br><span class="line">daemonize = /opt/cmdb/uwsgi/cmdb.log</span><br><span class="line">touch-reload = /opt/cmdb/uwsgi/reload</span><br><span class="line">#processes = 2</span><br><span class="line">#threads = 4</span><br><span class="line">workers=20</span><br><span class="line">listen=2048</span><br><span class="line">stats=%(chdir)/uwsgi/uwsgi.status</span><br><span class="line">pidfile=%(chdir)/uwsgi/uwsgi.pid</span><br><span class="line">socket-timeout=60</span><br><span class="line">die-on-term=true</span><br><span class="line"></span><br><span class="line">-------------------</span><br><span class="line">建议使用此配置.将ini文件当到项目下,与manage.py同级</span><br><span class="line"></span><br><span class="line">[uwsgi]</span><br><span class="line">socket=0.0.0.0:18001</span><br><span class="line">chdir=%d</span><br><span class="line">#virtualenv=%d../venv/</span><br><span class="line">module=cmdb.wsgi:application</span><br><span class="line">master=True</span><br><span class="line">pidfile=%(chdir)/uwsgi/uwsgi.pid</span><br><span class="line">touch-reload=%(chdir)/uwsgi/reload</span><br><span class="line">enable-threads=True</span><br><span class="line">vacuum=True</span><br><span class="line">max-requests=500</span><br><span class="line">daemonize=%(chdir)/uwsgi/cmdb.log</span><br><span class="line">processes=%k</span><br><span class="line">threads=2</span><br><span class="line">buffer-size=32768</span><br><span class="line">#socket-timeout=60</span><br></pre></td></tr></table></figure>
<p><code>touch-reload</code>是指,reload文件被修改就重新加载进程.项目下新建reload文件,只要touch下这个文件（touch reload) 项目就会重启</p>
<h5 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h5><p>新建nginx配置文件比如.<code>cmdb.conf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen      8008;</span><br><span class="line">    server_name cmdb;</span><br><span class="line">    charset     utf-8; </span><br><span class="line">    client_max_body_size 75M;</span><br><span class="line">    </span><br><span class="line">    proxy_connect_timeout 300;</span><br><span class="line">    proxy_read_timeout 300;</span><br><span class="line">    proxy_send_timeout 300;</span><br><span class="line">    proxy_buffer_size 64k;</span><br><span class="line">    proxy_buffers   4 32k;</span><br><span class="line">    proxy_busy_buffers_size 64k;</span><br><span class="line">    proxy_temp_file_write_size 64k;</span><br><span class="line"></span><br><span class="line">    error_log  logs/cmdb_error.log;</span><br><span class="line">    access_log logs/cmdb_access.log; </span><br><span class="line"> </span><br><span class="line">    location /media  &#123;</span><br><span class="line">        alias /opt/cmdb/media;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    location /static &#123;</span><br><span class="line">        alias /opt/cmdb/static;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    location / &#123;</span><br><span class="line">        #uwsgi_pass的意思动态内容请求都通过名为django的upstream传递给uWSGI</span><br><span class="line">        uwsgi_pass  0.0.0.0:8001;</span><br><span class="line">        uwsgi_send_timeout 600; # 指定向uWSGI传送请求的超时时间，完成握手后向uWSGI传送请求的超时时间。</span><br><span class="line">        uwsgi_connect_timeout 600; # 指定连接到后端uWSGI的超时时间。</span><br><span class="line">        uwsgi_read_timeout 600;        # 指定接收uWSGI应答的超时时间，完成握手后接收uWSGI应答的超时时间。</span><br><span class="line">        #uwsgi_params文件是Nginx向uWSGI传递的参数</span><br><span class="line">        include     /usr/local/nginx-1.12.2/conf/uwsgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="服务自启"><a href="#服务自启" class="headerlink" title="服务自启"></a>服务自启</h4><h5 id="nginx自启"><a href="#nginx自启" class="headerlink" title="nginx自启"></a>nginx自启</h5><h6 id="centos6"><a href="#centos6" class="headerlink" title="centos6"></a>centos6</h6><p><code>vim /etc/init.d/nginx</code></p>
<p>参考官网<a href="https://www.nginx.com/resources/wiki/start/topics/examples/redhatnginxinit/" target="_blank" rel="noopener">Red Hat NGINX Init Script</a><br>修改的地方:<br>nginx=”/usr/local/nginx-1.12.2/sbin/nginx” #修改成nginx执行程序的路径。<br>NGINX_CONF_FILE=”/usr/local/nginx-1.12.2/conf/nginx.conf” #修改成nginx.conf文件的路径。</p>
<p>chmod a+x /etc/init.d/nginx<br>chkconfig –add /etc/init.d/nginx<br>chkconfig nginx on</p>
<h6 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h6><p><code>vi /lib/systemd/system/nginx.service</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line">  </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/nginx-1.12.2/sbin/nginx</span><br><span class="line">ExecReload=/usr/local/nginx-1.12.2/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/local/nginx-1.12.2/sbin/nginx -s quit</span><br><span class="line">PrivateTmp=true</span><br><span class="line">  </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p><code>systemctl enable nginx.service</code></p>
<h5 id="uwsgi自启"><a href="#uwsgi自启" class="headerlink" title="uwsgi自启"></a>uwsgi自启</h5><p>chmod +x /etc/rc.d/rc.local<br>追加内容如下:(路径根据实际情况设置)<br><code>cd /opt/cmdb/uwsgi &amp;&amp; /usr/bin/uwsgi --ini uwsgi_http.ini</code></p>
<p>需要注意的是,ini的配置要设置下后台<code>daemonize = /opt/cmdb/uwsgi/uwsgi_http.log</code><br>`</p>
<p>看起来是完美了.重启的时候会发现,界面一直卡着…<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ *] A stop job is running for /etc/rc.d...........Compatibility</span><br></pre></td></tr></table></figure></p>
<p>是因为没有配置<code>rc-local.service</code> 导致</p>
<p><code>vim /etc/systemd/system/rc-local.service</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#  This file is part of systemd.</span><br><span class="line">#</span><br><span class="line">#  systemd is free software; you can redistribute it and/or modify it</span><br><span class="line">#  under the terms of the GNU Lesser General Public License as published by</span><br><span class="line">#  the Free Software Foundation; either version 2.1 of the License, or</span><br><span class="line">#  (at your option) any later version.</span><br><span class="line"></span><br><span class="line"># This unit gets pulled automatically into multi-user.target by</span><br><span class="line"># systemd-rc-local-generator if /etc/rc.d/rc.local is executable.</span><br><span class="line">[Unit]</span><br><span class="line">Description=/etc/rc.d/rc.local Compatibility</span><br><span class="line">ConditionFileIsExecutable=/etc/rc.d/rc.local</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/etc/rc.d/rc.local start</span><br><span class="line">TimeoutSec=5</span><br><span class="line">RemainAfterExit=yes</span><br></pre></td></tr></table></figure>
<p>systemctl daemon-reload     #重新加载systemctl<br>systemctl enable rc-local   #开机自启</p>
]]></content>
      
        <categories>
            
            <category> web </category>
            
            <category> django </category>
            
        </categories>
        
        
        <tags>
            
            <tag> django </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[docker学习]]></title>
      <url>/2018/05/15/docker%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p>docker<br><a id="more"></a></p>
<p>Docker三个基本概念</p>
<ul>
<li>镜像（image）</li>
<li>容器（container）</li>
<li>仓库（rrepository)</li>
</ul>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>不同系统安装方式不同，<a href="https://github.com/yeasy/docker_practice/blob/master/install/README.md" target="_blank" rel="noopener">详见</a><br>以<code>centos</code>为例(仅支持64位kernel &gt;=3.10)建议使用国内源<br><strong>卸载原有版本</strong><br><code>yum remove docker docker-common docker-selinux docker-engine</code><br>yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖<br><code>yum install -y yum-utils device-mapper-persistent-data lvm2</code><br><strong>添加yum源</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 阿里源</span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">#中科大</span><br><span class="line">sudo yum-config-manager --add-repo https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"># 官方源</span><br><span class="line"># sudo yum-config-manager  --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></p>
<p>查看版本<br><code>yum list docker-ce --showduplicates | sort -r</code><br>可选择版本进行安装。默认仓库只开放稳定版<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce #默认安装最新稳定版</span><br><span class="line">sudo yum install docker-ce-17.12.0.ce #安装指定版本</span><br></pre></td></tr></table></figure></p>
<p>然后启动并开机启动，<code>docker version</code>即可查看版本</p>
<h4 id="创建用户组"><a href="#创建用户组" class="headerlink" title="创建用户组"></a>创建用户组</h4><p>为了安全起见，docker只允许root和docker用户组的用户进行访问<br><code>groupadd docker</code><br><code>usermod -G docker username</code></p>
<h4 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h4><p>若文件不存在,则手动创建<br><code>vim /etc/docker/daemon.json</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#docker国内镜像加速应该是挂了</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#阿里云镜像加速</span><br><span class="line">登陆[阿里云](https://cr.console.aliyun.com),获取专属加速地址</span><br><span class="line">类似 https://xxxx.mirror.aliyuncs.com 替换上面的地址</span><br></pre></td></tr></table></figure></p>
<p>systemctl daemon-reload<br>systemctl restart docker</p>
<h4 id="image"><a href="#image" class="headerlink" title="image"></a>image</h4><p>获取镜像<br><code>docker pull [选项] [ 仓库地址]  仓库名/标签</code> 默认从<code>docker hub</code> 中拉取<br>例如 ： docker pull centos #默认就是从docker hub下载最新的<br>如果需要下载制定tag的，可去官网查询<br><code>docker search xxxx</code> 不显示tag<br><code>docker pull centos:7.4.1708</code> 下载指定版本</p>
<p><code>docker images -a</code>  列出镜像 (显示包括中间层镜像)<br>中间层镜像：是其他镜像所依赖的镜像，不能删除，否则会导致上层镜像因为依赖丢失报错，事实上也无需删除，相同的层只会存储一遍。</p>
<p><code>docker system df</code>  查看镜像,容器,数据卷占用空间</p>
<p><code>docker images -f since(或before)=image name</code> 列出某个image之前(之后)的镜像</p>
<p><code>docker image prune</code>删除虚悬镜像(dangling)<br> 虚悬镜像：也就是新旧镜像重名而导致的，pull和build都可能会出现这种情况，<code>docker image ls -f dangling=true</code>可 查看，虚悬镜像都是无价值的，可删除</p>
<p><code>docker rmi $(docker images -q -f dangling=true)</code>  批量删除dangling</p>
<p><code>docker run --name webserver -d -p 80:80 nginx</code>  以nginx镜像为基础，运行容器，也就是新建个容器</p>
<h5 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h5><h5 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$   mkdir   mynginx</span><br><span class="line">$   cd  mynginx</span><br><span class="line">$   touch   Dockerfile</span><br><span class="line">cat Dockerfile</span><br><span class="line">FROM nginx</span><br><span class="line">RUN echo &apos;&lt;h1&gt;Dockerfile&lt;/h1&gt;&apos; &gt;    &gt; /usr/share/nginx/html/index.html</span><br></pre></td></tr></table></figure>
<p><code>FROM image</code><br>必写,定制镜像也是以镜像为基础的.这里就是选定一个基础镜像,可以以相关服务镜像为基础(nginx,mysql等),也可是是系统(ubuntu,centos等).<br>另外,dicker还提供<code>FROM scratch</code> 意味不以任何镜像为基础.</p>
<p><code>RUN</code><br>shell格式 : 用来执行命令行命令.<br>exec格式: <code>RUN [&quot;可执行文件&quot;,&quot;参数1&quot;,    &quot;参数2&quot;]</code>这像是函数调用<br><code>RUN</code>命令常用来安装软件包</p>
<h6 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h6><p><code>docker build [选项] &lt;上下文路径/URL/-&gt;</code><br>在文件目录下执行<code>docker build -t nginx:v3   .</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@docker docker]# docker build -t nginx:v3 .</span><br><span class="line">Sending build context to Docker daemon  2.048kB</span><br><span class="line">Step 1/2 : FROM nginx</span><br><span class="line"> ---&gt; b8efb18f159b</span><br><span class="line">Step 2/2 : RUN echo &apos;&lt;h1&gt; Dockerfile!&lt;/h1&gt;&apos; &gt;&gt; /usr/share/nginx/html/index.html</span><br><span class="line"> ---&gt; Running in 8b921720af4c</span><br><span class="line"> ---&gt; 2cd0174a0aea</span><br><span class="line">Removing intermediate container 8b921720af4c</span><br><span class="line">Successfully built 2cd0174a0aea</span><br><span class="line">Successfully tagged nginx:v3</span><br></pre></td></tr></table></figure></p>
<h6 id="实例解析"><a href="#实例解析" class="headerlink" title="实例解析"></a>实例解析</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FROM    debian:jessie</span><br><span class="line">RUN apt-get update</span><br><span class="line">RUN apt-get install -y  gcc libc6-dev   make</span><br><span class="line">RUN wget    -O  redis.tar.gz    &quot;http://download.redis.io/releases/redis-3.2.5.tar.gz&quot;</span><br><span class="line">RUN mkdir   -p  /usr/src/redis</span><br><span class="line">RUN tar -xzf    redis.tar.gz    -C  /usr/src/redis  --strip-components=1</span><br><span class="line">RUN make    -C  /usr/src/redis</span><br><span class="line">RUN make    -C  /usr/src/redis  install</span><br></pre></td></tr></table></figure>
<p>Dockerfile中一个RUN指令,就会建立一层.就和cimmit类似,一层层的叠加然后生成新的image.这样没有意义,很多无用的东西都装进了image.编译环境,软件包等.而且UnionFS是有层数限制的的.<br>所以,正确的写法应该是这样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">FROM    debian:jessie</span><br><span class="line">RUN buildDeps=&apos;gcc  libc6-dev   make&apos;   \</span><br><span class="line">                &amp;&amp;  apt-get update  \</span><br><span class="line">                &amp;&amp;  apt-get install -y  $buildDeps  \</span><br><span class="line">                &amp;&amp;  wget    -O  redis.tar.gz    &quot;http://download.redis.io/releases/redis-3.2.5.tar.gz&quot;  \</span><br><span class="line">                &amp;&amp;  mkdir   -p  /usr/src/redis  \</span><br><span class="line">                &amp;&amp;  tar -xzf    redis.tar.gz    -C  /usr/src/redis  --strip-components=1    \</span><br><span class="line">                &amp;&amp;  make    -C  /usr/src/redis  \</span><br><span class="line">                &amp;&amp;  make    -C  /usr/src/redis  install \</span><br><span class="line">                &amp;&amp;  rm  -rf /var/lib/apt/lists/*    \</span><br><span class="line">                &amp;&amp;  rm  redis.tar.gz    \</span><br><span class="line">                &amp;&amp;  rm  -r  /usr/src/redis  \</span><br><span class="line">                &amp;&amp;  apt-get purge   -y  --auto-remove   $buildDeps</span><br></pre></td></tr></table></figure></p>
<p>一层一个目的,而不是一层一条命令,我们是在构建image并不是在写shell脚本.并且要记得做相关清理工作.</p>
<h6 id="build中的点"><a href="#build中的点" class="headerlink" title="build中的点."></a>build中的点<code>.</code></h6><p>docker build 命令最后有个点<code>.</code>,它表示当前目录,而Dockerfile就在当前目录.所以会让人认为点<code>.</code>指的就是Dockerfile的路径,其实是不准确的.如果对照bulid格式,会发现,这里的点其实指的是上下文.<br>理解上下文要理解下docker工作原理,docker运行时,分为server和client.我们其实是使用client控制docker服务端,所有的操作其实是服务端完成的.也就是C/S结构.<br>所以我们构建image的时候,可以使用ADD.COPY等指令,将本地文件复制进镜像.构建是在服务端.服务端如何获取本地文件呢?这里就用到了上下文.用户指定了上下文路径,build的时候就会将路径下的内容打包.然后上传到Docker server.当Docker server收到后展开就能获得所需的一切文件<br>比如<br><code>COPY ./package.json /app</code><br>这并不是要复制执行docker build命令所在的目录下的package.json   ,也不是复制Dockerfile所在目录下的package.json而是复制上下文(context)目录下的p<br>ackage.json<br>所以,这里的路径是相对的,   <code>COPY   ../package.json /app</code>或者<code>COPY    /opt/xxxx   /app</code> 其实都已经超出了上下文的范围.那当我们需要context范围外的文件怎么办?很简单,先把文件cp到上下文目录中.<br>默认情况下,Dockerfile会将上下文目录下的Dockerfile文件作为Dockerfile.所以很多人会误认为 <code>.</code>就是指Dockerfile所在目录<br>通常习惯上我们也不会去更改.</p>
<h5 id="Dockerfile其他指令"><a href="#Dockerfile其他指令" class="headerlink" title="Dockerfile其他指令"></a>Dockerfile其他指令</h5><h6 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">COPY    &lt;源路径&gt;...    &lt;目标路径&gt;  </span><br><span class="line">COPY    [&quot;&lt;源路径1&gt;&quot;,...   &quot;&lt;目标路径&gt;&quot;]</span><br></pre></td></tr></table></figure>
<p>源路径可以指定多个,也可以是还是用通配符.<br>此COPY 自带 -p.会保留源文件的属性.</p>
<h6 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h6><p>基本和COPY是一致的.但是他俩的使用建议遵守一个原则<br>文件复制使用<code>COPY</code>,需要解压缩使用<code>ADD</code></p>
<h6 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h6><p>此命令类似<code>RUN</code> 支持两种格式 <code>shell</code> 和 <code>exec</code><br>shell    格式: <code>CMD   &lt;命令&gt;</code><br>exec格式: <code>CMD    [&quot;可执行文件&quot;,   &quot;参数1&quot;,  &quot;参数2&quot;...]</code><br>参数列表格式: <code>CMD[&quot;参数1&quot;, &quot;参数2&quot;...]</code>在指定了  <code>ENTRYPOINT</code>        指令后,用    CMD指定具体的参数。</p>
<p>Docker不是虚拟机,容器是进程.所以容器的启动需要指定运行程序和参数.<code>CMD</code> 就是用于指定默认容易主进程的启动命令<br>或者这样理解,<code>CMD</code> 执行的是默认容器启动后执行的命令以及参数.一般<code>只允许使用一次CMD,常用于文件最后</code></p>
<p>命令格式上推荐使用<code>exec</code> , 默认情况下 shell 是会被封装成为<code>sh -c</code><br>如:<br><code>CMD echo $HOME</code> –&gt; <code>CMD [&quot;sh&quot;, &quot;-c&quot;, &quot;echo $HOME&quot;]</code><br>注意! <code>exec</code>格式 一定要用双引号!因为在解析时会被解析成<code>json</code></p>
<p>docker不是虚拟机,容器的应用也应该是以前台执行的,容器不存在后台的概念.不能以虚拟机的方式去执行后台服务等<br>所以 <code>CMD  service nginx start</code>肯定是错误的.会转换为 <code>CMD [&quot;sh&quot;, &quot;-c&quot;, &quot;service nginx start&quot;]</code> 显而易见,主进程是<code>sh</code>,所以这种格式的命令,会导致容器退出.<br>正确的方式 是<code>CMD [&quot;nginx&quot;,&quot;-g&quot;,&quot;daemon off&quot;]</code></p>
<h6 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h6><p>同样支持两种格式: <code>exec</code> 和<code>shell</code></p>
<p>当指定了<code>ENTRYPOINT</code>后<code>CMD</code>的含义就发生了变化,它不在直接运行命令,而是将内容传送给<code>ENTYRPOINT</code>运行<br>同<code>CMD</code>,一个文件只写一次.</p>
<h6 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h6><p>环境变量<br><code>ENV KEY VALUE</code> <code>ENV KEY=VALUE</code> 两种方式都可以<br>下列指令可以支持环境变量展开：<br><code>ADD、COPY、ENV、EXPOSE、LABEL、USER、WORKDIR、VOLUME、STOPSIGNAL、ONBUILD</code><br>例:(node官方)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ENV NODE_VERSION 7.2.0</span><br><span class="line"></span><br><span class="line">RUN curl -SLO &quot;https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz&quot; \</span><br><span class="line">  &amp;&amp; curl -SLO &quot;https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc&quot; \</span><br><span class="line">  &amp;&amp; gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \</span><br><span class="line">  &amp;&amp; grep &quot; node-v$NODE_VERSION-linux-x64.tar.xz\$&quot; SHASUMS256.txt | sha256sum -c - \</span><br><span class="line">  &amp;&amp; tar -xJf &quot;node-v$NODE_VERSION-linux-x64.tar.xz&quot; -C /usr/local --strip-components=1 \</span><br><span class="line">  &amp;&amp; rm &quot;node-v$NODE_VERSION-linux-x64.tar.xz&quot; SHASUMS256.txt.asc SHASUMS256.txt \</span><br><span class="line">  &amp;&amp; ln -s /usr/local/bin/node /usr/local/bin/nodejs</span><br></pre></td></tr></table></figure></p>
<h6 id="ARG变量"><a href="#ARG变量" class="headerlink" title="ARG变量"></a>ARG变量</h6><p><code>ARG key</code>  <code>ARG key=value</code><br>ARG指令定义的参数，在docker build命令中以–build-arg  key=value形式赋值。<br>ARG变量不像ENV变量始终存在于镜像中。不过ARG变量会以类似的方式对构建缓存产生影响。如果Dockerfile中定义的ARG变量的值与之前定义的变量值不一样，那么就有可能产生“cache miss”。比如RUN指令使用ARG定义的变量时，ARG变量的值变了之后，就会导致缓存失效。</p>
<h6 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h6><p><code>VOLUME path</code> <code>VOLUME [&quot;path1&quot;,&quot;path2&quot;]</code><br>容器运行,尽量让存储层不发生写操作,通常数据都存放在卷中,此命令可实现指定挂载某目录,以防用户忘记将动态文件目录挂载为卷.这样可以保证容器的正常运行,并且不会向存储写数据</p>
<h6 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h6><p><code>EXPOSE 80</code><br><code>EXPOSE 22</code><br>声明运行容器时提供服务端口,单单只是声明,并不会真的去开启这个端口.当使用<code>docker run -P</code>时,会自动随机映射EXPOSE的端口</p>
<h6 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h6><p>指定工作目录<br><code>WORKDIR dir</code><br>用来指定工作目录,WORKDIR类似命令cd。<br>WORKDIR参数后可以是相对路径或者带/的绝对路径，使用相对路径就依据上一个WORKDIR参数决定下面的Dockerfile工作目录。<br>可以重复定义，以切换Dockerfile的工作目录。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RUN cd  /app</span><br><span class="line">RUN echo    &quot;hello&quot; &gt;   world.txt</span><br></pre></td></tr></table></figure>
<p>两个RUN 其实是运行了两个容器.第一个RUN并不会对第二个产生任何影响.所以第二个将会找不到路径,此时就需要设置工作目录 <code>WORKDIR /app</code></p>
<h6 id="ONBUILD"><a href="#ONBUILD" class="headerlink" title="ONBUILD"></a>ONBUILD</h6><p>该命令实际上是个触发器,其参数是任意一个Dockerfile 指令<br><code>ONBUILD RUN mkdir /testdir</code><br>当我们在一个Dockerfile文件中加上ONBUILD指令，该指令对利用该Dockerfile构建镜像（比如为A镜像）不会产生实质性影响。<br>但是当我们编写一个新的Dockerfile文件来基于A镜像构建一个镜像（比如为B镜像）时，这时构造A镜像的Dockerfile文件中的ONBUILD指令就生效了.</p>
<h6 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h6><p><code>USER username</code><br><code>USER</code>会改变以后命令的执行用户.或者说,他就是切换用户的.前提,用户是存在的,否则失败.</p>
<p>如果以 root 执行的脚本，在执行期间希望改变身份，比如希望以某个已经建立好的用户来运行某个服务进程<br>不要使用 su 或者 sudo，这些都需要比较麻烦的配置，而且在 TTY 缺失的环境下经常出错。建议使用 gosu。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 建立 redis 用户，并使用 gosu 换另一个用户执行命令</span><br><span class="line">RUN groupadd -r redis &amp;&amp; useradd -r -g redis redis</span><br><span class="line"># 下载 gosu</span><br><span class="line">RUN wget -O /usr/local/bin/gosu &quot;https://github.com/tianon/gosu/releases/download/1.7/gosu-amd64&quot; \</span><br><span class="line">    &amp;&amp; chmod +x /usr/local/bin/gosu \</span><br><span class="line">    &amp;&amp; gosu nobody true</span><br><span class="line"># 设置 CMD，并以另外的用户执行</span><br><span class="line">CMD [ &quot;exec&quot;, &quot;gosu&quot;, &quot;redis&quot;, &quot;redis-server&quot; ]</span><br></pre></td></tr></table></figure></p>
<h6 id="HEALTHCHECK"><a href="#HEALTHCHECK" class="headerlink" title="HEALTHCHECK"></a>HEALTHCHECK</h6><p><code>HEALTHCHECK [option] CMD &lt;command&gt;</code><br><code>HEALTHCHECK NONE</code> 可屏蔽基础镜像的健康检测指令</p>
<p>其命令和ENTTYPOINT类似.<br><code>--interval</code> 间隔时间,两次检测时间间隔,默认30s<br><code>--timeout</code> 超时.健康检测运行超时时间.默认30s<br><code>--retries</code> 重试.默认3次.<br>返回值:<code>0</code>:成功,<code>1</code>:失败 <code>2</code>:保留</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM    nginx</span><br><span class="line">RUN apt-get update  &amp;&amp;  apt-get install -y  curl    &amp;&amp;  rm  -rf /var/lib/apt/lists/*</span><br><span class="line">HEALTHCHECK --interval=15s  --timeout=5s    \</span><br><span class="line">        CMD curl    -fs http://localhost/   ||  exit    1</span><br></pre></td></tr></table></figure>
<h6 id="Dockerfile多阶段构建"><a href="#Dockerfile多阶段构建" class="headerlink" title="Dockerfile多阶段构建"></a>Dockerfile多阶段构建</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM muninn/glide:alpine AS build-env</span><br><span class="line">ADD . /go/src/app</span><br><span class="line">WORKDIR /go/src/app</span><br><span class="line">RUN glide install</span><br><span class="line">RUN go build -v -o /go/src/app/app-server</span><br><span class="line"></span><br><span class="line">FROM alpine</span><br><span class="line">RUN apk add -U tzdata</span><br><span class="line">RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</span><br><span class="line">COPY --from=build-env /go/src/app/app-server /usr/local/bin/app-server</span><br><span class="line">EXPOSE 80</span><br><span class="line">CMD [&quot;app-server&quot;]</span><br></pre></td></tr></table></figure>
<p>首先，第一个 <code>FROM</code> 后边多了个 <code>AS</code> 关键字，可以给这个阶段起个名字。<br>第二部分用了官方的 alpine 镜像，改变时区到中国<br>注意<code>COPY</code> 关键字，它现在可以接受 –from= 这样的参数，从上个我们起名字的阶段复制文件过来。</p>
<h5 id="Dockerfile文件解析"><a href="#Dockerfile文件解析" class="headerlink" title="Dockerfile文件解析"></a>Dockerfile文件解析</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#docker build -t centos_nginx:v5 .</span><br><span class="line">#docker run --name web_5 -d -p 85:80 centos_nginx:v5 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">MAINTAINER zili.li</span><br><span class="line"></span><br><span class="line">ADD nginx-1.12.2.tar.gz /usr/local/src</span><br><span class="line"></span><br><span class="line">RUN buildDeps=&apos;gcc gcc-c++ glib make autoconf openssl openssl-devel libxslt-devel gd gd-devel GeoIP GeoIP-devel pcre pcre-devel wget curl&apos; \ </span><br><span class="line">                &amp;&amp; yum -y install $buildDeps \</span><br><span class="line">                &amp;&amp; useradd -M -s /sbin/nologin nginx</span><br><span class="line">#多个用逗号分隔</span><br><span class="line">#docker inspect web_5 的 Mounts下可看到文件挂载信息.</span><br><span class="line">#docker exec -it web_5 /bin/bash 进入容器可查看到挂载的目录,其内容和Mounts是同步的</span><br><span class="line">VOLUME [&quot;/usr/local/nginx/html&quot;]</span><br><span class="line"></span><br><span class="line">WORKDIR /usr/local/src/nginx-1.12.2</span><br><span class="line"></span><br><span class="line">RUN ./configure --user=nginx --group=nginx --prefix=/usr/local/nginx --with-file-aio --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_xslt_module --with-http_image_filter_module --with-http_geoip_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_stub_status_module \</span><br><span class="line">                &amp;&amp; make \</span><br><span class="line">                &amp;&amp; make install \</span><br><span class="line">                &amp;&amp; rm -rf /usr/local/src/nginx-1.12.2</span><br><span class="line"></span><br><span class="line">#指定了环境变量,所以生成容器的时候 不用在指定路径.直接nginx 即可</span><br><span class="line">ENV PATH /usr/local/nginx/sbin:$PATH                </span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line">#当ENTRYPOINT和CMD连用时，CMD的命令是ENTRYPOINT命令的参数，两者连用相当于nginx -g &quot;daemon off;&quot;</span><br><span class="line">#如果CMD [&quot;-g&quot;,&quot;daemon on;&quot;] 那么生成的容器将不会处于up状态.但是执行run的时候加入 -g &quot;daemon off;&quot;此参数将会传入给ENTRYPOINT</span><br><span class="line">#容器中的应用都应该以前台执行,容器没有后台概念,-d 表示的后台,是程序的后台,程序完毕容器停止,而不是容器后台.容器都是前台的.</span><br><span class="line">ENTRYPOINT [&quot;nginx&quot;]</span><br><span class="line"></span><br><span class="line">#CMD service nginx start 这是初学经常搞模糊的地方!</span><br><span class="line">#对于容器而言，其启动程序就是容器应用进程，容器就是为了主进程而存在的，主进程退出，容器就失去了存在的意义，从而退出.</span><br><span class="line"># CMD service nginx start 会被理解为 CMD [ &quot;sh&quot;, &quot;-c&quot;, &quot;service nginx start&quot;]</span><br><span class="line">#因此主进程实际上是 sh,那么当 service nginx start 命令结束后，sh 也就结束，sh作为主进程退出了自然就会令容器退出</span><br><span class="line">#正确的做法是直接执行 nginx 可执行文件，并且要求以前台形式运行。比如：CMD [&quot;nginx&quot;, &quot;-g&quot;, &quot;daemon off;&quot;],或CMD /bin/sh -c &apos;nginx -g &quot;daemon off;&quot;&apos;</span><br><span class="line">CMD [&quot;-g&quot;,&quot;daemon off;&quot;]</span><br></pre></td></tr></table></figure>
<h4 id="container"><a href="#container" class="headerlink" title="container"></a>container</h4><h5 id="新建容器"><a href="#新建容器" class="headerlink" title="新建容器"></a>新建容器</h5><p><code>docker run</code> 此命令是用来新建容器<br>例如：<br><code>docker run ubuntu /bin/echo &#39;test&#39;</code> 会输出test后终止容器，终止容器并不是删除容器，所以容器还是存在的，添加<code>--rm</code> 则会临时性的执行，完后删除容器<code>docker run --rm ....</code></p>
<p><code>docker run -it ubuntu /bin/bash</code> 会生成一个伪终端。可通过终端进行简单的操作。同样，此容器也是存在的。docker ps -a查看</p>
<p>docker run流程</p>
<ul>
<li>检查本地是否存在指定的镜像，不存在就从公有仓库下载</li>
<li>利用镜像创建并启动一个容器</li>
<li>分配一个文件系统，并在只读的镜像层外面挂载一层可读写层</li>
<li>从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去</li>
<li>从地址池配置一个 ip 地址给容器</li>
<li>执行用户指定的应用程序</li>
<li>执行完毕后容器被终止,并不是删除，容器还可以再次启动</li>
</ul>
<h5 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h5><p><code>docker container start -i container_id</code>会重新启动一个已终止的容器。</p>
<p><strong>docker container 还有很多命令，建议使用 –help查看使用说明</strong></p>
<h5 id="容器后台运行"><a href="#容器后台运行" class="headerlink" title="容器后台运行"></a>容器后台运行</h5><p><code>docker run -d</code><br>不是用后台运行时，结果输出会到当前主机<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zili ~]# docker run ubuntu /bin/sh -c &quot;while true; do echo test -d; sleep 1; done&quot;</span><br><span class="line">test -d</span><br><span class="line">test -d</span><br><span class="line">test -d</span><br><span class="line">test -d</span><br></pre></td></tr></table></figure></p>
<p>使用后台运行时候,容器将后台运行，那么如何查看结果呢？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zili ~]# docker run -d ubuntu /bin/sh -c &quot;while true; do echo test -d; sleep 1; done&quot;</span><br><span class="line">69931b53bfea873daf9cfeb82c926be84980e41a3c0f62f966b039ffbaa0b1c1</span><br></pre></td></tr></table></figure></p>
<p><code>docker container log container_id</code> 可以来查看相关的容器输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zili ~]# docker container logs 699</span><br><span class="line">test -d</span><br><span class="line">test -d</span><br><span class="line">test -d</span><br><span class="line">test -d</span><br><span class="line">test -d</span><br><span class="line">test -d</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>需要注意的是，容器是否能长久运行和指定的命令有关系，也就是说，命令结束，容器停止，和<code>-d</code>参数并无关系，它只是用来让容器后台运行而已。<br>停止容器运行使用<code>docker container stop container_id</code></p>
<h5 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h5><p><code>docker attach</code></p>
<p>不建议使用,因为使用此命令,如果容器是<code>-d</code>后台运行,stdin退出时,容器运行状态将终止.也就是说,此命令进入容器,退出时会导致后台运行的容器终止</p>
<p><code>docker exec -it</code>  不会导致后台运行中的容器终止.推荐使用~!<br>参数说明请使用 <code>docker exec --help</code></p>
<h5 id="导入和导出"><a href="#导入和导出" class="headerlink" title="导入和导出"></a>导入和导出</h5><p><code>docker container export</code> 导出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                      PORTS               NAMES</span><br><span class="line">0828d964cc2f        ubuntu:16.04        &quot;/bin/bash&quot;         29 minutes ago      Exited (0) 29 minutes ago                       attach</span><br><span class="line">[root@docker ~]# docker container export attach &gt; attach.tar</span><br><span class="line">[root@docker ~]# ls</span><br><span class="line">anaconda-ks.cfg  attach.tar  docker  myip</span><br></pre></td></tr></table></figure></p>
<p><code>docker image   import</code> 导入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# cat attach.tar | docker import - test/ubuntu</span><br><span class="line">sha256:e9b17f2d8f7546a1d3e143f684b234ebf2301b95193782d8685d2cdb2f05b2f5</span><br><span class="line">[root@docker ~]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">test/ubuntu         latest              e9b17f2d8f75        4 seconds ago       98.4MB</span><br></pre></td></tr></table></figure></p>
<p>也可以通过URL导入<br><code>docker import  http://example.com/exampleimage.tgz example/imagerepo</code></p>
<h5 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h5><p><code>docker rm</code><br><code>docker rm -f</code> 删除运行中的容器<br><code>docker container prune</code> 删除所有终止的容器</p>
<h5 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h5><p><code>docker diff  container name</code> 查看容器变化<br><code>docker history container:tag</code> 查看container 历史</p>
<h4 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h4><p>官方repository <a href="https://hub.docker.com/" target="_blank" rel="noopener">Docker hub</a></p>
<p><code>docker search</code> 命令查找官方repository的镜像.<br><code>docker pull</code> 命令把镜像拉取下来</p>
<p> <code>docker login</code> 登录docker hub<br><code>docker logout</code> 退出docker hub<br><code>docker push</code> 推送镜像</p>
<h5 id="私有仓库"><a href="#私有仓库" class="headerlink" title="私有仓库"></a>私有仓库</h5><p><a href="https://yeasy.gitbooks.io/docker_practice/content/repository/registry.html" target="_blank" rel="noopener">略</a></p>
<h4 id="数据管理"><a href="#数据管理" class="headerlink" title="数据管理"></a>数据管理</h4><p>容器管理数据主要有两种方式,数据卷（Volumes）和挂载主机目录(Bind mounts)</p>
<h5 id="数据卷-Volumes"><a href="#数据卷-Volumes" class="headerlink" title="数据卷(Volumes)"></a>数据卷(Volumes)</h5><p>数据卷可以在容器之间共享和重用,<br>数据卷 的修改会立马生效且数据卷 的更新，不会影响镜像<br>数据卷 默认会一直存在，即使容器被删除</p>
<ul>
<li>注意：数据卷 的使用，类似于 Linux 下对目录或文件进行 mount，镜像中的被指定为挂载点的目录中的文件会隐藏掉，能显示看的是挂载的 数据卷。</li>
</ul>
<p>数据卷有 <code>--mount</code>  <code>-v</code> 或者 <code>--volume</code> 但是推荐使用 <code>--mount</code> 参数</p>
<h5 id="创建-删除volume"><a href="#创建-删除volume" class="headerlink" title="创建/删除volume"></a>创建/删除volume</h5><p><code>docker volume create webtest</code> 创建一个webtest的数据卷<br><code>docker volume inspect webtest</code> 查看数据卷<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# docker volume inspect webtest</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;CreatedAt&quot;: &quot;2018-04-15T10:54:40+08:00&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Labels&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/webtest/_data&quot;,</span><br><span class="line">        &quot;Name&quot;: &quot;webtest&quot;,</span><br><span class="line">        &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Scope&quot;: &quot;local&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p><code>docker volume rm webtest</code> 删除数据卷,前提数据卷没有被容器使用</p>
<p>数据卷是独立于容器的,用来做数据初始化的,所以容器的删除不会影响数据卷,若删除容器时想要删除数据卷 则使用<code>docker rm -v</code><br>清理无主的数据卷 <code>docker volume prune</code></p>
<p>涉及删除的操作,<code>思之,慎之而行之</code></p>
<h5 id="启动挂载数据卷的容器"><a href="#启动挂载数据卷的容器" class="headerlink" title="启动挂载数据卷的容器"></a>启动挂载数据卷的容器</h5><p><code>docker run</code>时，使用 <code>--mount</code> 标记来将数据卷挂载到容器里,在一次 docker run 中可以挂载多个数据卷</p>
<p><code>-v后面的映射关系是&quot;宿主机文件/目录:容器里对应的文件/目录&quot;，其中，宿主机上的文件/目录是要提前存在的，容器里对应的文件/目录会自动创建。</code></p>
<p>两种方式本质上没有区别,mount更加清晰直观.<br><code>docker run -it --name web -d -p 80:80 --mount source=webtest,target=/webdir nginx</code><br><code>docker run -it --name web -d -p 80:80 -v webtest:/webdir nginx</code></p>
<p><strong>查看数据卷具体信息</strong><br><code>docker inspect web</code> 数据卷的信息在Mounts下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&quot;Mounts&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;Type&quot;: &quot;volume&quot;,</span><br><span class="line">                &quot;Name&quot;: &quot;webtest&quot;,</span><br><span class="line">                &quot;Source&quot;: &quot;/var/lib/docker/volumes/webtest/_data&quot;,</span><br><span class="line">                &quot;Destination&quot;: &quot;/webdir&quot;,</span><br><span class="line">                &quot;Driver&quot;: &quot;local&quot;,</span><br><span class="line">                &quot;Mode&quot;: &quot;z&quot;,</span><br><span class="line">                &quot;RW&quot;: true,</span><br><span class="line">                &quot;Propagation&quot;: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br></pre></td></tr></table></figure></p>
<p><code>docker exec -it container /bin/bash</code> 可进入容器查看挂载的目录并新建文件等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@f24f73d240d9:/# cd webdir/</span><br><span class="line">root@f24f73d240d9:/webdir# touch 123</span><br><span class="line">root@f24f73d240d9:/webdir# df -h</span><br><span class="line">Filesystem              Size  Used Avail Use%   Mounted on</span><br><span class="line">/dev/mapper/centos-root  50G  1.8G   49G   4%   /webdir</span><br><span class="line"></span><br><span class="line">然后退出可在宿主机上看到此文件</span><br><span class="line">[root@docker ~]# cd /var/lib/docker/volumes/webtest/_data/</span><br><span class="line">[root@docker _data]# ls</span><br><span class="line">123</span><br></pre></td></tr></table></figure></p>
<h5 id="挂载目录-Bind-mounts"><a href="#挂载目录-Bind-mounts" class="headerlink" title="挂载目录(Bind mounts)"></a>挂载目录(Bind mounts)</h5><p>多个目录的挂载 多写几次<code>--mount</code>即可</p>
<p><code>[root@docker web]# docker run --name dirbind -d -p 80:80 --mount type=bind,source=/root/web,target=/usr/share/nginx/html nginx</code><br>首先我在root下新建web目录并写个index.html文件将其挂到由nginx镜像生成的容器<code>dirbind</code>的html下.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@docker web]# docker run --name dirbind -d -p 80:80 --mount type=bind,source=/root/web,target=/usr/share/nginx/html nginx</span><br><span class="line">2648c6f9e8ff3660e37dc64b0483bc906e5987082224fb0f8604e2bceef2da65</span><br><span class="line">[root@docker web]# docker exec -it 264 /bin/bash</span><br><span class="line">#此时已进入容器</span><br><span class="line">root@2648c6f9e8ff:/# cd /usr/share/nginx/html</span><br><span class="line">root@2648c6f9e8ff:/usr/share/nginx/html# ls</span><br><span class="line">index.html</span><br><span class="line">#index文件已经挂载上来了. 再次访问nginx就能看到index的内容了.</span><br></pre></td></tr></table></figure>
<p>查看容器信息<br><code>docker inspect dirbind</code> #Mounts部分可看到挂载信息,注意这里,<code>RW: true</code><br>说明是读写权限的,其实还可以挂载个只读的文件.后有说明.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&quot;Mounts&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;Type&quot;: &quot;bind&quot;,</span><br><span class="line">                &quot;Source&quot;: &quot;/root/web&quot;,</span><br><span class="line">                &quot;Destination&quot;: &quot;/usr/share/nginx/html&quot;,</span><br><span class="line">                &quot;Mode&quot;: &quot;&quot;,</span><br><span class="line">                &quot;RW&quot;: true,</span><br><span class="line">                &quot;Propagation&quot;: &quot;rprivate&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br></pre></td></tr></table></figure></p>
<p>只读目录挂载<br><code>docker run --name dirbind -d -p 80:80 --mount type=bind,source=/root/web,target=/usr/share/nginx/html,readonly nginx</code></p>
<h5 id="挂载单个文件"><a href="#挂载单个文件" class="headerlink" title="挂载单个文件"></a>挂载单个文件</h5><p><code>docker run --name bindfile -d -p 80:80 \
--mount type=bind,source=/root/web,target=/usr/share/nginx/html \
--mount type=bind,source=/root/a.html,target=/usr/share/nginx/html/index.html nginx</code><br>第二个<code>--mount</code>是挂载单个文件,其会覆盖挂载的第一个目录下的index文件.</p>
<ul>
<li>单个文件的挂载要求容器内必须也存在此文件</li>
</ul>
<h4 id="docker网络"><a href="#docker网络" class="headerlink" title="docker网络"></a>docker网络</h4><p>docker 网络分为 外部访问和容器互联两种情况</p>
<h5 id="外部访问"><a href="#外部访问" class="headerlink" title="外部访问"></a>外部访问</h5><p>这个已经并不陌生了就是在<code>docker run</code>的时候加上<code>-p</code>参数即可指定本地端口和容器端口<br>一个指定端口上只可以绑定一个容器<br>格式有<code>ip:hostPort:containerPort | ip::containerPort | hostPort:containerPort</code><br> 还可以指定端口格式(tcp或udp)<code>127.0.0.1:1111:1111/udp</code></p>
<ul>
<li>注意:若需多个端口绑定,重复只用<code>-p</code> 即可</li>
</ul>
<p><code>docker port container_id</code> 可查看容器端口映射情况</p>
<p>使用<code>-P</code> 大写的P默认会自动分配端口进行映射.</p>
<h5 id="容器互联"><a href="#容器互联" class="headerlink" title="容器互联"></a>容器互联</h5><p><strong>新建网络</strong><br><code>docker network create -d bridge web-net</code> 新建一个<code>web-net</code>的网络<br><code>-d</code> 参数指定 Docker 网络类型，有 <code>bridge</code> <code>overlay</code>。其中 <code>overlay</code> 网络类型用于 <code>Swarm mode</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# docker network create -d bridge web-net</span><br><span class="line">3a06ef1bde3ea75c16afe1d3024d1a161d33c3c9499646521f30a74992607407</span><br><span class="line">[root@docker ~]# docker network inspect web-net</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Name&quot;: &quot;web-net&quot;,</span><br><span class="line">        &quot;Id&quot;: &quot;3a06ef1bde3ea75c16afe1d3024d1a161d33c3c9499646521f30a74992607407&quot;,</span><br><span class="line">        &quot;Created&quot;: &quot;2018-04-15T14:08:13.044203584+08:00&quot;,</span><br><span class="line">        &quot;Scope&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;bridge&quot;,</span><br><span class="line">        &quot;EnableIPv6&quot;: false,</span><br><span class="line">        &quot;IPAM&quot;: &#123;</span><br><span class="line">            &quot;Driver&quot;: &quot;default&quot;,</span><br><span class="line">            &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">            &quot;Config&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;Subnet&quot;: &quot;172.18.0.0/16&quot;,</span><br><span class="line">                    &quot;Gateway&quot;: &quot;172.18.0.1&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Internal&quot;: false,</span><br><span class="line">        &quot;Attachable&quot;: false,</span><br><span class="line">        &quot;Ingress&quot;: false,</span><br><span class="line">        &quot;ConfigFrom&quot;: &#123;</span><br><span class="line">            &quot;Network&quot;: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;ConfigOnly&quot;: false,</span><br><span class="line">        &quot;Containers&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Labels&quot;: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p><strong>容器关联网络</strong><br>通过<code>--network</code> 参数指定容器网络<br><code>docker run --name web1 -d -P  --network web-net nginx</code><br><code>docker run --name web2 -d -P  --network web-net nginx</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# docker network inspect web-net</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Name&quot;: &quot;web-net&quot;,</span><br><span class="line">        &quot;Id&quot;: &quot;3a06ef1bde3ea75c16afe1d3024d1a161d33c3c9499646521f30a74992607407&quot;,</span><br><span class="line">        &quot;Created&quot;: &quot;2018-04-15T14:08:13.044203584+08:00&quot;,</span><br><span class="line">        &quot;Scope&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;bridge&quot;,</span><br><span class="line">        &quot;EnableIPv6&quot;: false,</span><br><span class="line">        &quot;IPAM&quot;: &#123;</span><br><span class="line">            &quot;Driver&quot;: &quot;default&quot;,</span><br><span class="line">            &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">            &quot;Config&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;Subnet&quot;: &quot;172.18.0.0/16&quot;,</span><br><span class="line">                    &quot;Gateway&quot;: &quot;172.18.0.1&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Internal&quot;: false,</span><br><span class="line">        &quot;Attachable&quot;: false,</span><br><span class="line">        &quot;Ingress&quot;: false,</span><br><span class="line">        &quot;ConfigFrom&quot;: &#123;</span><br><span class="line">            &quot;Network&quot;: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;ConfigOnly&quot;: false,</span><br><span class="line">        &quot;Containers&quot;: &#123;</span><br><span class="line">            &quot;21250caa4838de429eeda541aab9d4e6e0697a4b9038d9656e0ee318db9f2636&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;web2&quot;,</span><br><span class="line">                &quot;EndpointID&quot;: &quot;46cac28abeef408daa1351bd2c376376928c82c1bb2836cb729adcd7379022ce&quot;,</span><br><span class="line">                &quot;MacAddress&quot;: &quot;02:42:ac:12:00:02&quot;,</span><br><span class="line">                &quot;IPv4Address&quot;: &quot;172.18.0.2/16&quot;,</span><br><span class="line">                &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;aca3aa6558188c41a2ab1f79993d845d6cea392fcc8c61d8acc0bc9864550834&quot;: &#123;</span><br><span class="line">                &quot;Name&quot;: &quot;web1&quot;,</span><br><span class="line">                &quot;EndpointID&quot;: &quot;26e27856326d3bc04f29ecaf083dab789c80b0f64ce7c09159df31e896052ca6&quot;,</span><br><span class="line">                &quot;MacAddress&quot;: &quot;02:42:ac:12:00:03&quot;,</span><br><span class="line">                &quot;IPv4Address&quot;: &quot;172.18.0.3/16&quot;,</span><br><span class="line">                &quot;IPv6Address&quot;: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Options&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Labels&quot;: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>进入容器中<code>docker exec -it /bin/bash</code><br>ubuntu容器没有ping则安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt install net-tools       # ifconfig</span><br><span class="line">apt install iputils-ping     # ping</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@0b8f77731024:~# ping web2</span><br><span class="line">PING net2 (172.18.0.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from web2.web-net (172.18.0.2): icmp_seq=1 ttl=64 time=0.085 ms</span><br><span class="line">64 bytes from web2.web-net (172.18.0.2): icmp_seq=2 ttl=64 time=0.043 ms</span><br></pre></td></tr></table></figure>
<p>如果有过个容器要互联,如果你有多个容器之间需要互相连接，<code>Docker Compose</code>了解一下.</p>
<h5 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h5><p>进入容器中执行<code>mount</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@0b8f77731024:~# mount</span><br><span class="line">/dev/mapper/centos-root on /etc/resolv.conf type xfs (rw,relatime,attr2,inode64,noquota)</span><br><span class="line">/dev/mapper/centos-root on /etc/hostname type xfs (rw,relatime,attr2,inode64,noquota)</span><br><span class="line">/dev/mapper/centos-root on /etc/hosts type xfs (rw,relatime,attr2,inode64,noquota)</span><br></pre></td></tr></table></figure></p>
<p>可以看到,dns,主机名,hosts文件是被挂载上去的,这样只要宿主机有变更,那么容器就能立即得到更新.<br>同理,如果有需要可单独见文件进行挂载,并指向容器内相关文件.</p>
<p><strong>还有一种方式</strong> 通过<code>/etc/docker/daemon.json</code>来配置,这样影响所有容器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;dns&quot; : [</span><br><span class="line">    &quot;114.114.114.114&quot;,</span><br><span class="line">    &quot;8.8.8.8&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>如果想要手动指定的话.在<code>docker run</code>的时候可以添加参数<br><code>-h HOSTNAME</code>或者 <code>--hostname=HOSTNAME</code>设定容器的主机名,但它在容器外部看不到，既不会在 docker container ls 中显示，也不会在其他的容器的 /etc/hosts 看到。<br><code>--dns=IP_ADDRESS</code> 添加 DNS 服务器到容器的<code>/etc/resolv.conf</code> 中，让容器用这个服务器来解析所有不在 /etc/hosts 中的主机名。<br><code>--dns-search=DOMAIN</code>设定容器的搜索域，当设定搜索域为 <code>.example.com</code>时，在搜索一个名为 host 的主机时，DNS 不仅搜索 host，还会搜索 <code>host.example.com</code></p>
<h5 id="高级网络配置"><a href="#高级网络配置" class="headerlink" title="高级网络配置"></a>高级网络配置</h5><p><a href="https://yeasy.gitbooks.io/docker_practice/content/advanced_network/" target="_blank" rel="noopener">略，参考链接</a></p>
<h4 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h4><p>Docker Compose 是 Docker 官方编排（Orchestration）项目之一，负责快速的部署分布式应用</p>
<p>我们知道通过Dockerfile可以实现单独的一个应用容器.<br>实际,一个项目可能需要多个容器相互配合来完成.比如一个动态网站,除了页面还有数据库等等.</p>
<p>compose两个重要的概念:</p>
<pre><code>- 服务(service) : 一个应用容器，实际上可以包括若干运行相同镜像的容器实例
- 项目(project) :　一组关联容器组成的完整业务单元
</code></pre><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><p>二进制安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>
<p>pip安装<br><code>sudo pip install -U docker-compose</code></p>
<p>容器中执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/download/1.8.0/run.sh &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>
<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">├── docker_compose</span><br><span class="line">│   ├── app.py</span><br><span class="line">│   ├── docker-compose.yml</span><br><span class="line">│   └── Dockerfile</span><br></pre></td></tr></table></figure>
<p><code>app.py</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">from redis import Redis</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">redis = Redis(host=&apos;redis&apos;, port=6379)</span><br><span class="line"></span><br><span class="line">@app.route(&apos;/&apos;)</span><br><span class="line">def hello():</span><br><span class="line">    count = redis.incr(&apos;hits&apos;)</span><br><span class="line">    return &apos;Hello World! 该页面已被访问 &#123;&#125; 次。\n&apos;.format(count)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    app.run(host=&quot;0.0.0.0&quot;, debug=True)</span><br></pre></td></tr></table></figure>
<p><code>Dockerfile</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.6-alpine</span><br><span class="line">ADD . /code</span><br><span class="line">WORKDIR /code</span><br><span class="line">RUN pip install redis flask</span><br><span class="line">CMD [&quot;python&quot;, &quot;app.py&quot;]</span><br></pre></td></tr></table></figure>
<p><code>docker-compose.yml</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3&apos;</span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  web:</span><br><span class="line">    build: .</span><br><span class="line">    ports:</span><br><span class="line">     - &quot;5000:5000&quot;</span><br><span class="line"></span><br><span class="line">  redis:</span><br><span class="line">    image: &quot;redis:alpine&quot;</span><br></pre></td></tr></table></figure>
<p>然后执行<code>docker-compose up</code> 即可</p>
<h5 id="命令参数说明"><a href="#命令参数说明" class="headerlink" title="命令参数说明"></a>命令参数说明</h5><p>docker-compose</p>
<pre><code>- `-f, --file FILE` 指定使用的 Compose 模板文件，默认为 `docker-compose.yml`，可以多次指定。
- `-p, --project-name NAME` 指定项目名称，默认将使用所在目录名称作为项目名。
- `--x-networking` 使用 Docker 的可拔插网络后端特性
- `--x-network-driver DRIVER` 指定网络后端的驱动，默认为 bridge
- `--verbose` 输出更多调试信息
- `-v, --version` 打印版本并退出
</code></pre><p>docker-compose <code>build</code><br>用来创建或重新创建服务使用的镜像<br>docker-compose build service_a<br>创建一个镜像名叫service_a</p>
<p>docker-compose <code>kill</code><br>用于通过容器发送SIGKILL信号强行停止服务</p>
<p>docker-compose <code>logs</code><br>显示service的日志信息</p>
<p>docker-compose pause/unpause<br>docker-compose pause #暂停服务<br>docker-compose unpause #恢复被暂停的服务</p>
<p>docker-compose <code>port</code><br>用于查看服务中的端口与物理机的映射关系<br>docker-compose port nginx_web 80<br>查看服务中80端口映射到物理机上的那个端口</p>
<p>dokcer-compose <code>ps</code><br>用于显示当前项目下的容器<br>注意，此命令与docker ps不同作用，此命令会显示停止后的容器（状态为Exited），只征对某个项目。</p>
<p>docker-compose <code>pull</code><br>用于拉取服务依赖的镜像</p>
<p>docker-compose <code>restart</code><br>用于重启某个服务中的所有容器<br>docker-compose restart service_name<br>只有正在运行的服务可以使用重启命令，停止的服务是不可以重启</p>
<p>docker-compose <code>rm</code><br>删除停止的服务（服务里的容器）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-f #强制删除</span><br><span class="line">-v #删除与容器相关的卷（volumes）</span><br></pre></td></tr></table></figure></p>
<p>docker-compose <code>run</code><br>用于在服务中运行一个一次性的命令。这个命令会新建一个容器，它的配置和srvice的配置相同。<br>但两者之间还是有两点不同之处<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、run指定的命令会直接覆盖掉service配置中指定的命令</span><br><span class="line">2、run命令启动的容器不会创建在service配置中指定的端口，如果需要指定使用--service-ports指定</span><br></pre></td></tr></table></figure></p>
<p>docker-compose start/stop<br>docker-compose start 启动运行某个服务的所有容器<br>docker-compose stop 启动运行某个服务的所有容器</p>
<p>docker-compose scale<br>指定某个服务启动的容器个数</p>
<h5 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@docker web-nginx]# tree</span><br><span class="line">.</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">├── nginx</span><br><span class="line">│   └── nginx.conf</span><br><span class="line">└── webserver</span><br><span class="line">    └── index.html</span><br></pre></td></tr></table></figure>
<p><code>nginx.conf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line">error_log  /var/log/nginx_error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx_access.log  main;</span><br><span class="line">    client_max_body_size 10m;  </span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /webserver;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    #include /usr/local/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>index.html</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;welcome to nginx web stie&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">   &lt;h2&gt;compose test1---1&lt;/h2&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p><code>docker-compose.yml</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot; #指定语法版本</span><br><span class="line">services: #定义服务</span><br><span class="line">  nginx:</span><br><span class="line">    container_name: web-nginx #容器名字</span><br><span class="line">    image: centos_nginx:v5 #依赖镜像</span><br><span class="line">    restart: always</span><br><span class="line">    ports:  #端口映射</span><br><span class="line">      - 80:80</span><br><span class="line">    volumes:</span><br><span class="line">      #映射文件到容器.第一个是web的,在nginx通过root指定路径.第二个是配置文件.</span><br><span class="line">      #如果不想指定web,可直接映射到nginx默认html路径.nginx配置不需要指定路径了</span><br><span class="line">      #- ./webserver:/usr/local/nginx/html</span><br><span class="line">      - ./webserver:/webserver</span><br><span class="line">      - ./nginx/nginx.conf:/usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>
<h5 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h5><p>创建自定义网络test<code>docker network create --subnet=172.88.0.0/16 test</code><br>网络名test和ip会在docker-compose中使用,用来指定网络和IP,同时IP与nginx负载有关</p>
<h6 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">├── docker-compose.yml</span><br><span class="line">├── etc</span><br><span class="line">│   └── localtime</span><br><span class="line">├── nginx</span><br><span class="line">│   ├── Dockerfile</span><br><span class="line">│   ├── nginx-1.12.2.tar.gz</span><br><span class="line">│   └── nginx.conf</span><br><span class="line">├── tomcat</span><br><span class="line">│   ├── apache-tomcat-8.5.24.tar.gz</span><br><span class="line">│   ├── Dockerfile</span><br><span class="line">│   └── jdk-8u45-linux-x64.tar.gz</span><br><span class="line">└── webserver</span><br><span class="line">    ├── tomcatA</span><br><span class="line">    │   └── index.jsp</span><br><span class="line">    └── tomcatB</span><br><span class="line">        └── index.jsp</span><br></pre></td></tr></table></figure>
<h6 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h6><p><code>nginx.conf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">#user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line">error_log  /var/log/nginx_error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    upstream tomcat  &#123; </span><br><span class="line">      server 172.88.0.11:8080; </span><br><span class="line">      server 172.88.0.22:8080; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx_access.log  main;</span><br><span class="line">    client_max_body_size 10m;  </span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  tomcat;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            #root   /webserver;</span><br><span class="line">            proxy_pass http://tomcat;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    #include /usr/local/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>Dcokerfile</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">MAINTAINER zili.li</span><br><span class="line"></span><br><span class="line">ADD nginx-1.12.2.tar.gz /usr/local/src</span><br><span class="line"></span><br><span class="line">RUN buildDeps=&apos;gcc gcc-c++ glib make autoconf openssl openssl-devel libxslt-devel gd gd-devel GeoIP GeoIP-devel pcre pcre-devel wget curl&apos; \ </span><br><span class="line">                &amp;&amp; yum -y install $buildDeps \</span><br><span class="line">                &amp;&amp; useradd -M -s /sbin/nologin nginx</span><br><span class="line"></span><br><span class="line">VOLUME [&quot;/usr/local/nginx/html&quot;]</span><br><span class="line"></span><br><span class="line">WORKDIR /usr/local/src/nginx-1.12.2</span><br><span class="line"></span><br><span class="line">RUN ./configure --user=nginx --group=nginx --prefix=/usr/local/nginx --with-file-aio --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_xslt_module --with-http_image_filter_module --with-http_geoip_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_stub_status_module \</span><br><span class="line">                &amp;&amp; make \</span><br><span class="line">                &amp;&amp; make install \</span><br><span class="line">                &amp;&amp; rm -rf /usr/local/src/nginx-1.12.2</span><br><span class="line"></span><br><span class="line">ENV PATH /usr/local/nginx/sbin:$PATH                </span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [&quot;nginx&quot;]</span><br><span class="line"></span><br><span class="line">CMD [&quot;-g&quot;,&quot;daemon off;&quot;]</span><br></pre></td></tr></table></figure>
<h6 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h6><p><code>Dcokerfile</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">ADD jdk-8u45-linux-x64.tar.gz /usr/local</span><br><span class="line"></span><br><span class="line">ENV RUN_AS_USER=root</span><br><span class="line">ENV JAVA_HOME /usr/local/jdk1.8.0_45</span><br><span class="line">ENV CLASS_HOME=/usr/local/jdk1.8.0_45/lib:$JAVA_HOME/jre/lib</span><br><span class="line">ENV CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH</span><br><span class="line">ENV PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line"></span><br><span class="line">ADD apache-tomcat-8.5.24.tar.gz /usr/local</span><br><span class="line"></span><br><span class="line">EXPOSE 8080</span><br><span class="line">ENTRYPOINT [&quot;/usr/local/apache-tomcat-8.5.24/bin/catalina.sh&quot;, &quot;run&quot;]</span><br></pre></td></tr></table></figure>
<h6 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h6><p><code>docker-compose.yml</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line">services:</span><br><span class="line">  nginx:</span><br><span class="line">    hostname: nginx</span><br><span class="line">    build: ./nginx</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">    networks:</span><br><span class="line">      test:</span><br><span class="line">        ipv4_address: 172.88.0.88</span><br><span class="line">    volumes:</span><br><span class="line">      - ./nginx/nginx.conf:/usr/local/nginx/conf/nginx.conf</span><br><span class="line">      - ./etc/localtime:/etc/localtime</span><br><span class="line">    depends_on:</span><br><span class="line">      - tomcat1</span><br><span class="line">      - tomcat2</span><br><span class="line"></span><br><span class="line">  tomcat1:</span><br><span class="line">    hostname: tomcat1</span><br><span class="line">    build: ./tomcat</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - ./webserver/tomcatA:/usr/local/apache-tomcat-8.5.24/webapps/ROOT</span><br><span class="line">      - ./etc/localtime:/etc/localtime</span><br><span class="line">    networks:</span><br><span class="line">      test:</span><br><span class="line">        ipv4_address: 172.88.0.11</span><br><span class="line"></span><br><span class="line">  tomcat2:</span><br><span class="line">    hostname: tomcat2</span><br><span class="line">    build: ./tomcat</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - ./webserver/tomcatB/index.jsp:/usr/local/apache-tomcat-8.5.24/webapps/ROOT/index.jsp</span><br><span class="line">      - ./etc/localtime:/etc/localtime</span><br><span class="line">    networks:</span><br><span class="line">      test:</span><br><span class="line">        ipv4_address: 172.88.0.22</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  test:</span><br><span class="line">    external: true</span><br></pre></td></tr></table></figure>
<p><code>docker-compose up</code></p>
<h4 id="docker-machine"><a href="#docker-machine" class="headerlink" title="docker machine"></a>docker machine</h4><h5 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h5><ul>
<li>linux<br><a href="https://github.com/docker/machine/releases" target="_blank" rel="noopener">官网</a>下载相关安装包,安装即可 .</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo curl -L https://github.com/docker/machine/releases/download/v0.13.0/docker-machine-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-machine</span><br><span class="line">$ sudo chmod +x /usr/local/bin/docker-machine</span><br></pre></td></tr></table></figure>
<h5 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker-machine create \</span><br><span class="line">    --driver vmwarevsphere \</span><br><span class="line">    --vmwarevsphere-vcenter=xxx.xxx.xxx.xxx \</span><br><span class="line">    --vmwarevsphere-username=xxxxx \</span><br><span class="line">    --vmwarevsphere-password=xxxxxxx \</span><br><span class="line">    --vmwarevsphere-cpu-count=1 \</span><br><span class="line">    --vmwarevsphere-memory-size=512 \</span><br><span class="line">    --vmwarevsphere-disk-size=10240 \</span><br><span class="line">    TestDcokerMa</span><br></pre></td></tr></table></figure>
<p><code>driver vmwarevsphere</code><br>我们的虚拟机 host 上安装的是 vmware 的产品 vSphere，因此需要给 Docker Machine 提供对应的驱动，这样才能够在上面安装新的虚拟机。<br><code>--vmwarevsphere-vcenter=xxx.xxx.xxx.xxx</code><br><code>--vmwarevsphere-username=root</code><br><code>--vmwarevsphere-password=12345678</code><br>上面三行分别指定了虚拟机 host 的 IP 地址、用户名和密码。</p>
<p><code>--vmwarevsphere-cpu-count=1</code><br><code>--vmwarevsphere-memory-size=512</code><br><code>--vmwarevsphere-disk-size=10240</code><br>上面三行则分别指定了新创建的虚拟机占用的 cpu、内存和磁盘资源。<br><code>TestDcokerMa</code><br>最后一个参数则是新建虚拟机的名称。</p>
<p><a href="https://docs.docker.com/machine/" target="_blank" rel="noopener">详细使用参考官网</a><br>​    </p>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jenkins pipeline]]></title>
      <url>/2018/05/09/jenkins-pipeline/</url>
      <content type="html"><![CDATA[<p>jenkins-pipeline.png<br><img src="/images/jenkins-pipeline.png" alt="jenkins-pipeline" align="center"></p>
<p>用写代码的形式配置jenkins项目<br>支持两种语法格式<code>Declarative Pipeline</code>和<code>Scripted Pipeline</code></p>
<a id="more"></a>
<p>新建文件<code>Jenkinsfile</code> 放于项目根目录下</p>
<p>pipeline学习<br><a href="https://www.w3cschool.cn/jenkins/jenkins-yxes28oh.html" target="_blank" rel="noopener">中文版</a><br><a href="https://jenkins.io/doc/book/pipeline/" target="_blank" rel="noopener">英文版</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">//Jenkinsfile (Declarative Pipeline)//</span><br><span class="line">//author: lizili//</span><br><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line"></span><br><span class="line">    triggers &#123;</span><br><span class="line">        //cron(&apos;H/10 * * * 1-5&apos;)//</span><br><span class="line">        pollSCM(&apos;H/10 * * * 1-5&apos;)</span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(&apos;Build&apos;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &apos;Building..&apos;</span><br><span class="line">                //sh &apos;mvn clean install -f moni/pom.xml&apos;//</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&apos;Test&apos;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &apos;Testing..&apos;</span><br><span class="line">                //sh &apos;mvn clean verify sonar:sonar -f moni/pom.xml&apos;//</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&apos;Deploy&apos;) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                expression &#123;</span><br><span class="line">                    currentBuild.result == null || currentBuild.result == &apos;SUCCESS&apos;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &apos;upload file to server....&apos;</span><br><span class="line">                /*</span><br><span class="line">                sh &quot;sshpass -p centos scp $WORKSPACE/moni/target/monitor.war root@192.168.1.55:/root/war&quot;</span><br><span class="line">                echo &apos;Restart tomcat.....&apos;</span><br><span class="line">                sh &quot;sshpass -p centos ssh root@192.168.1.55 &apos;/usr/bin/bash ~/deploy.sh deploy monitor 80 /usr/local/tomcat-7.0.85 $BUILD_NUMBER&apos;&quot;</span><br><span class="line">                */</span><br><span class="line"></span><br><span class="line">                /*</span><br><span class="line">                sshPublisher(</span><br><span class="line">                    publishers: [</span><br><span class="line">                        sshPublisherDesc(</span><br><span class="line">                            configName: &apos;192_168_1_55&apos;,</span><br><span class="line">                            transfers: [</span><br><span class="line">                                sshTransfer(</span><br><span class="line">                                    excludes: &apos;&apos;,</span><br><span class="line">                                    execCommand: &apos;~/deploy.sh deploy monitor 80 /usr/local/tomcat-7.0.85 $BUILD_NUMBER&apos;,</span><br><span class="line">                                    execTimeout: 120000,</span><br><span class="line">                                    flatten: false,</span><br><span class="line">                                    makeEmptyDirs: false,</span><br><span class="line">                                    noDefaultExcludes: false,</span><br><span class="line">                                    patternSeparator: &apos;[, ]+&apos;,</span><br><span class="line">                                    remoteDirectory: &apos;root/war/&apos;,</span><br><span class="line">                                    remoteDirectorySDF: false,</span><br><span class="line">                                    removePrefix: &apos;moni/target/&apos;,</span><br><span class="line">                                    sourceFiles: &apos;moni/target/*.war&apos;</span><br><span class="line">                                )</span><br><span class="line">                            ],</span><br><span class="line">                            usePromotionTimestamp: false,</span><br><span class="line">                            useWorkspaceInPromotion: false,</span><br><span class="line">                            verbose: false</span><br><span class="line">                        )</span><br><span class="line">                    ]</span><br><span class="line">                )</span><br><span class="line">                */</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(&apos;mail&apos;)&#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &apos;send mail&apos;</span><br><span class="line">                /*</span><br><span class="line">                mail body: &apos;$&#123;env.BUILD_ID&#125; on $&#123;env.JENKINS_URL&#125;&apos;,</span><br><span class="line">                     from: &apos;lizili@jingkunsystem.com&apos;,</span><br><span class="line">                     replyTo: &apos;&apos;,</span><br><span class="line">                     subject: &apos;project build FAILURE&apos;,</span><br><span class="line">                     to: &apos;lizili@jingkunsystem.com&apos;</span><br><span class="line">                */</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    post &#123;</span><br><span class="line">        /*</span><br><span class="line">        always &#123;</span><br><span class="line">            echo &apos;This will always run&apos;</span><br><span class="line">        &#125;</span><br><span class="line">        */</span><br><span class="line">        success &#123;</span><br><span class="line">            echo &apos;send mail-BUILD-SUCCESS&apos;</span><br><span class="line">            mail body: &quot;$&#123;env.BUILD_ID&#125; on $&#123;env.JENKINS_URL&#125;&quot;,</span><br><span class="line">                 from: &apos;lizili@jingkunsystem.com&apos;,</span><br><span class="line">                 replyTo: &apos;&apos;,</span><br><span class="line">                 subject: &quot;$&#123;env.JOB_BASE_NAME&#125; build SUCCESS&quot;,</span><br><span class="line">                 to: &apos;lizili@jingkunsystem.com&apos;</span><br><span class="line">        &#125;</span><br><span class="line">        failure &#123;</span><br><span class="line">            echo &apos;send mail-BUILD-FAILURE&apos;</span><br><span class="line">            mail body: &quot;$&#123;env.BUILD_ID&#125; on $&#123;env.JENKINS_URL&#125;&quot;,</span><br><span class="line">                 from: &apos;lizili@jingkunsystem.com&apos;,</span><br><span class="line">                 replyTo: &apos;&apos;,</span><br><span class="line">                 subject: &quot;$&#123;env.JOB_BASE_NAME&#125; build FAILURE&quot;,</span><br><span class="line">                 to: &apos;lizili@jingkunsystem.com&apos;</span><br><span class="line">        &#125;</span><br><span class="line">        /*</span><br><span class="line">        unstable &#123;</span><br><span class="line">            echo &apos;This will run only if the run was marked as unstable&apos;</span><br><span class="line">        &#125;</span><br><span class="line">        changed &#123;</span><br><span class="line">            echo &apos;This will run only if the state of the Pipeline has changed&apos;</span><br><span class="line">            echo &apos;For example, if the Pipeline was previously failing but is now successful&apos;</span><br><span class="line">        &#125;</span><br><span class="line">        */</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>新建个流水线项目</p>
<pre><code>- 流水线
    - 定义: Pipeline script from SCM
    - SCM: 根据情况填写即可
    - 脚本路径: Jenkinsfile
</code></pre>]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> jenkins </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jenkins rollback]]></title>
      <url>/2018/05/08/jenkins-rollback/</url>
      <content type="html"><![CDATA[<p>回滚之前,确保自己的项目是有备份的<br><a id="more"></a></p>
<h4 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h4><p>新建一个自由风格</p>
<ul>
<li>general<ul>
<li>参数化构建过程(运行时参数)<ul>
<li>名称: ROLL_BACK (自定义)</li>
<li>项目: 项目名字(此项目名字要写存在的,即,要回滚的项目)</li>
<li>描述: 随便写</li>
<li>filter: 成功的构建.</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>其余不写.</p>
<h4 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h4><p>添加执行shell模块<br>这里注意的是:ROLL_BACK对应的就是项目名字</p>
<p>可以<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tmp=$&#123;ROLL_BACK%/*&#125;</span><br><span class="line">BUILD_NUMBER=$&#123;tmp##*/&#125;</span><br><span class="line">ssh root@192.168.1.55 /root/deploy.sh rollback monitor 80 /usr/local/tomcat-7.0.85 $BUILD_NUMBER</span><br></pre></td></tr></table></figure></p>
<h4 id="脚本参考"><a href="#脚本参考" class="headerlink" title="脚本参考"></a>脚本参考</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#jenkins</span></span><br><span class="line"><span class="comment">#jenkins需要做配置 send..ssh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Remote directory : tmp/ </span></span><br><span class="line"><span class="comment">#这个相对路径取决于系统配置信息里面的ssh主机的 Remote Directory,建议tmp,因为备份在tmp  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Exec command : ~/deploy.sh deploy cmdb $BUILD_NUMBER</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#tomcat</span></span><br><span class="line">t_home_bin=`find / -name catalina.sh`</span><br><span class="line">t_home=<span class="variable">$&#123;t_home_bin%*/bin/*&#125;</span></span><br><span class="line">t_port=`cat <span class="variable">$t_home</span>/conf/server.xml | grep <span class="string">'HTTP/1.1'</span> | grep protocol | grep Connector |awk <span class="string">'&#123;print $2&#125;'</span> | tr -<span class="built_in">cd</span> <span class="string">"[0-9]"</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">#export</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="built_in">source</span> <span class="variable">$HOME</span>/.bashrc</span><br><span class="line"><span class="comment">#how to use</span></span><br><span class="line"><span class="comment">#./deploy.sh &lt;projectname&gt; [tomcat port] [tomcat home dir] $BUILD_NUMBER</span></span><br><span class="line"><span class="comment">#default var</span></span><br><span class="line">ACTION=<span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">PROJECT=<span class="string">"<span class="variable">$2</span>"</span></span><br><span class="line">TOMCAT_PORT=<span class="variable">$t_port</span></span><br><span class="line">TOMCAT_HOME=<span class="variable">$t_home</span></span><br><span class="line">VERSION=<span class="string">"<span class="variable">$3</span>"</span></span><br><span class="line"><span class="comment">#dir exist?</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">"/tmp/war/bak/"</span> ];<span class="keyword">then</span></span><br><span class="line">mkdir -p /tmp/war/bak/</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#args num</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 3 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"you must use like this : ./deploy.sh &lt;action&gt; &lt;projectname&gt; &lt;version&gt;"</span></span><br><span class="line">  <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#search tomcatpid</span></span><br><span class="line"><span class="comment">#tomcat_pid=`netstat -anp | grep $TOMCAT_PORT | awk '&#123;printf $7&#125;' | cut -d "/" -f 1`</span></span><br><span class="line">tomcat_p=`netstat -anp | grep <span class="variable">$TOMCAT_PORT</span> | awk <span class="string">'&#123;printf $7&#125;'</span> | cut -d <span class="string">"/"</span> -f 1`</span><br><span class="line">tomcat_pid=<span class="variable">$&#123;tomcat_p#*-&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"current :"</span> <span class="variable">$tomcat_pid</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ -n <span class="string">"<span class="variable">$tomcat_pid</span>"</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  sleep 5</span><br><span class="line">  <span class="comment">#进一步筛选</span></span><br><span class="line">  tomcat_pid=`ps -ef | grep <span class="variable">$tomcat_pid</span> |grep <span class="variable">$TOMCAT_HOME</span> | grep -v <span class="string">'grep\|tail\|more\|bash\|less'</span>| awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"scan tomcat pid :"</span> <span class="variable">$tomcat_pid</span></span><br><span class="line">  <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$tomcat_pid</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"kill tomcat :"</span> <span class="variable">$tomcat_pid</span></span><br><span class="line">    <span class="built_in">kill</span> -9 <span class="variable">$tomcat_pid</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#path for bakdir</span></span><br><span class="line">BAK_DIR=/tmp/war/bak/<span class="variable">$PROJECT</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$BAK_DIR</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">    mkdir -p <span class="variable">$BAK_DIR</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$ACTION</span> == <span class="string">'deploy'</span> ];<span class="keyword">then</span></span><br><span class="line">  cp /tmp/<span class="variable">$PROJECT</span>.war <span class="string">"<span class="variable">$BAK_DIR</span>"</span>/<span class="string">"<span class="variable">$PROJECT</span>"</span>_<span class="string">"<span class="variable">$VERSION</span>"</span>.war</span><br><span class="line">  <span class="comment">#publish project</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"scan no tomcat pid,<span class="variable">$PROJECT</span> publishing...."</span></span><br><span class="line">  sleep 10</span><br><span class="line">  rm -rf <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span></span><br><span class="line">  rm -rf <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span>.war</span><br><span class="line">  <span class="comment">#this path is define by jenkins-after build-ssh-Remote directory</span></span><br><span class="line">  mv /tmp/<span class="variable">$PROJECT</span>.war <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span>.war</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$ACTION</span> == <span class="string">'rollback'</span> ];<span class="keyword">then</span></span><br><span class="line">  <span class="comment">#delete project</span></span><br><span class="line">  rm -rf <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span></span><br><span class="line">  rm -rf <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span>.war</span><br><span class="line">  cp <span class="string">"<span class="variable">$BAK_DIR</span>"</span>/<span class="string">"<span class="variable">$PROJECT</span>"</span>_<span class="string">"<span class="variable">$VERSION</span>"</span>.war <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span>.war</span><br><span class="line">  <span class="comment">#publish project</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"rollback to the project <span class="variable">$PROJECT</span> <span class="variable">$VERSION</span>"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line">  sleep 3</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#start tomcat</span></span><br><span class="line"><span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/bin/startup.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tomcat is starting,please try to access <span class="variable">$PROJECT</span> conslone url"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#del war</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line"><span class="built_in">echo</span> `date +%Y%m%d` <span class="string">"delete invalid war"</span></span><br><span class="line">find <span class="variable">$BAK_DIR</span> -mtime +7 -name <span class="string">"*.war"</span>;</span><br><span class="line">find <span class="variable">$BAK_DIR</span> -mtime +7 -name <span class="string">"*.war"</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"host address:"</span> `/sbin/ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6 | awk <span class="string">'&#123;print $2&#125;'</span> | tr -d <span class="string">"addr:"</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> jenkins </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jenkins+sonarqube]]></title>
      <url>/2018/04/18/jenkins-sonarqube/</url>
      <content type="html"><![CDATA[<p><img src="/images/jenkins-sonarqube.png" alt="jenkins-sonarqube" align="center"></p>
<p>SonarQube是一个用于代码质量管理的开源平台<br><a id="more"></a></p>
<h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><p>系统版本:centos7x64</p>
<table>
<thead>
<tr>
<th>应用</th>
<th>版本</th>
</tr>
</thead>
<tbody>
<tr>
<td>java</td>
<td>1.8.0_xx</td>
</tr>
<tr>
<td>mysql</td>
<td>5.6+</td>
</tr>
<tr>
<td>sonarqube</td>
<td>6.7LTS</td>
</tr>
<tr>
<td>JENKINS</td>
<td>2.117</td>
</tr>
</tbody>
</table>
<p>jenkins安装插件<code>SonarQube</code> ,插件对jenkins有版本要求.</p>
<p>mysql编译安装,<a href="http://blog.dl1548.site/2018/03/26/mysql5-7%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85/" target="_blank" rel="noopener">建议阅读</a></p>
<p>jenkins安装,<a href="http://blog.dl1548.site/2017/11/09/jenkins%E5%AE%89%E8%A3%85%E5%92%8C%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/" target="_blank" rel="noopener">建议阅读</a></p>
<h4 id="sonarqube-安装"><a href="#sonarqube-安装" class="headerlink" title="sonarqube 安装"></a>sonarqube 安装</h4><p>下载安装包: 　<a href="https://www.sonarqube.org/downloads/" target="_blank" rel="noopener">官方下载</a></p>
<p><code>unzip  sonarqube-6.7.zip -d /usr/local/</code></p>
<p>由于es的原因,不能用root用户启动,所以要新建用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd sonar</span><br><span class="line">chown -R sonar /usr/local/sonarqube-6.7/</span><br></pre></td></tr></table></figure></p>
<p>配置环境变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#sonarqube</span><br><span class="line">export  SONAR_HOME=/usr/local/sonarqube-6.7</span><br><span class="line">export  PATH=$&#123;SONAR_HOME&#125;/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure>
<h4 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h4><p>如果不用mysql 可直接启动即可.系统默认使用内置数据库</p>
<p><code>create database sonar character set utf8 collate utf8_general_ci;</code><br>授权<br><code>GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;youpassword&#39; WITH GRANT OPTION;</code><br><code>flush privileges</code></p>
<h4 id="编辑sonar配置"><a href="#编辑sonar配置" class="headerlink" title="编辑sonar配置"></a>编辑sonar配置</h4><p><code>vim conf/sonar.properties</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sonar.jdbc.username= root</span><br><span class="line">sonar.jdbc.password= xxxxx</span><br><span class="line">#..3306/sonar..? 这里的sonar 是dbname</span><br><span class="line">sonar.jdbc.url= jdbc:mysql://192.168.1.56:3306/sonar?useUnicode=true&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=true&amp;useConfigs=maxPerformance&amp;useSSL=false</span><br><span class="line"></span><br><span class="line">#可选</span><br><span class="line">sonar.web.host=本机IP</span><br><span class="line">#默认为9000,可修改</span><br><span class="line">sonar.web.port=9000</span><br></pre></td></tr></table></figure>
<p>启动sonar<br><code>su sonar ./bin/linux-x86-64/sonar.sh start</code></p>
<p>登录<br>在浏览器输入：http:// IP：PORT  即可 admin/admin</p>
<p>安装插件: Administrator—&gt;Markeptlace</p>
<p><code>Chinese Pack</code> <code>Checkstyle</code></p>
<h4 id="jenkins-SonarQube"><a href="#jenkins-SonarQube" class="headerlink" title="jenkins-SonarQube"></a>jenkins-SonarQube</h4><p><code>系统设置</code> —&gt; <code>SonarQube servers</code> —&gt; <code>SonarQube installations</code></p>
<pre><code>- Name : 自定义
- Server URL : sonar地址
- Server authentication token : snoar中生成.(我的账户--安全--生成令牌)
</code></pre><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><p>修改maven配置.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings&gt;</span><br><span class="line">    &lt;pluginGroups&gt;</span><br><span class="line">        #添加此行</span><br><span class="line">        &lt;pluginGroup&gt;org.sonarsource.scanner.maven&lt;/pluginGroup&gt;</span><br><span class="line">    &lt;/pluginGroups&gt;</span><br><span class="line">    &lt;profiles&gt;</span><br><span class="line">        #添加以下,地址视情况而定</span><br><span class="line">        &lt;profile&gt;</span><br><span class="line">            &lt;id&gt;sonar&lt;/id&gt;</span><br><span class="line">            &lt;activation&gt;</span><br><span class="line">                &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class="line">            &lt;/activation&gt;</span><br><span class="line">            &lt;properties&gt;</span><br><span class="line">                &lt;sonar.host.url&gt;</span><br><span class="line">                  http://192.168.x.xx:9000</span><br><span class="line">                &lt;/sonar.host.url&gt;</span><br><span class="line">            &lt;/properties&gt;</span><br><span class="line">        &lt;/profile&gt;</span><br></pre></td></tr></table></figure>
<p>登录 jenkins 在maven项目中.</p>
<p><code>BUild</code> —&gt;<code>Goals and options</code><br><code>clean install</code>修改为:<br><code>clean install org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar</code></p>
<p>再次执行即可看到项目console输出日志中对代码的分析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">...</span><br><span class="line">[INFO] --- sonar-maven-plugin:3.3.0.603:sonar (default-cli) @ user ---</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">[INFO] Working dir: /root/.jenkins/workspace/XXXXXXXX</span><br><span class="line">[INFO] Source paths: src/main/webapp, pom.xml, src/main/java</span><br><span class="line">[INFO] Source encoding: UTF-8, default locale: zh_CN</span><br><span class="line">[INFO] Index files</span><br><span class="line">[INFO] 421 files indexed</span><br><span class="line">[INFO] Quality profile for java: Sonar way</span><br><span class="line">[INFO] Quality profile for js: Sonar way</span><br><span class="line">[INFO] Quality profile for xml: Sonar way</span><br><span class="line">[INFO] Sensor JavaSquidSensor [java]</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><p>添加插件.jenkins安装插件<code>SonarQube</code></p>
<p>这里需要额外安装<code>sonar-scanner</code> 这个软件,如果不想自己安装,则在<br><code>全局工具配置</code> —&gt; <code>SonarQube Scanner</code> 勾选自动安装.并定义个名字</p>
<p>项目配置:</p>
<p><code>Pre Steps</code> —&gt; <code>add pre build step</code><br>选择JDK<br><code>Analysis properties</code> 输入如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#自定义,唯一. 最好和项目一致,这样后续可调用变量通过邮件发送URL</span><br><span class="line">sonar.projectKey=JKSTACK</span><br><span class="line">sonar.projectName=JKSTACK</span><br><span class="line"></span><br><span class="line">sonar.projectVersion=1.0</span><br><span class="line">sonar.language=java</span><br><span class="line">sonar.scm.disabled=true</span><br><span class="line">sonar.sourceEncoding=UTF-8</span><br><span class="line"></span><br><span class="line">#相对于项目而言的目录</span><br><span class="line">sonar.sources=moni/src/main/java</span><br><span class="line">sonar.java.binaries=moni/target/classes</span><br></pre></td></tr></table></figure>
<p>其他参考.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#required metadata</span><br><span class="line">#projectKey项目的唯一标识，不能重复</span><br><span class="line">sonar.projectKey=zzzzz</span><br><span class="line">sonar.projectName=zzzzz </span><br><span class="line">sonar.projectVersion=1.0 </span><br><span class="line">sonar.sourceEncoding=UTF-8</span><br><span class="line">sonar.modules=java-module,javascript-module,html-module</span><br><span class="line"></span><br><span class="line"># Java module</span><br><span class="line">java-module.sonar.projectName=Java Module</span><br><span class="line">java-module.sonar.language=java</span><br><span class="line"># .表示projectBaseDir指定的目录</span><br><span class="line">java-module.sonar.sources=.</span><br><span class="line">java-module.sonar.projectBaseDir=src</span><br><span class="line">sonar.binaries=classes</span><br><span class="line"></span><br><span class="line"># JavaScript module</span><br><span class="line">javascript-module.sonar.projectName=JavaScript Module</span><br><span class="line">javascript-module.sonar.language=js</span><br><span class="line">javascript-module.sonar.sources=js</span><br><span class="line">javascript-module.sonar.projectBaseDir=webRoot</span><br><span class="line"></span><br><span class="line"># Html module</span><br><span class="line">html-module.sonar.projectName=Html Module</span><br><span class="line">html-module.sonar.language=web</span><br><span class="line">html-module.sonar.sources=pages</span><br><span class="line">html-module.sonar.projectBaseDir=webRoot</span><br><span class="line"></span><br><span class="line">sonar.projectKey=org.codehaus.sonar:php-sonar-runner-unit-tests</span><br><span class="line">sonar.projectName=PHP project analyzed with the SonarQube Runner reusing PHPUnit reports</span><br><span class="line">sonar.projectVersion=1.0</span><br><span class="line">sonar.sources=src</span><br><span class="line">sonar.tests=tests</span><br><span class="line">sonar.language=php</span><br><span class="line">sonar.sourceEncoding=UTF-8</span><br><span class="line"># Reusing PHPUnit reports</span><br><span class="line">sonar.php.coverage.reportPath=reports/phpunit.coverage.xml</span><br><span class="line">sonar.php.tests.reportPath=reports/phpunit.xml</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> jenkins </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jenkins-Publish Over SSH Plugin]]></title>
      <url>/2018/04/11/jenkins-Publish-Over-SSH-Plugin/</url>
      <content type="html"><![CDATA[<p>jenkins通过SSH部署项目到tomcat下<br><a id="more"></a></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>插件名就是<code>Publish Over SSH</code> 安装过程不赘述.</p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>系统管理–&gt;系统配置–&gt;Publish Over SSH</p>
<p>说明:<br><code>Passphrase</code> ：密码（key的密码，未设置则空）<br><code>Path to key</code>：key私钥路径<code>/root/.ssh/id_rsa</code></p>
<pre><code>- 这个key是要手动生的,命令`ssh-keygen -t rsa`这里会提示是否对key加密.也就是`Passphrase` 
- 免密设置`ssh-copy-id 192.168.xx.xx`
</code></pre><p><code>Key</code>：私钥内容复制到这里<br><code>Disable exec</code>：禁止运行命令, 不勾选</p>
<p>SSH Servers配置,有多台可以加多台</p>
<pre><code>- SSH Server Name：标识的名字（随便取,建议IP）
- Hostname：需要连接ssh的主机名或ip地址（建议ip）
- Username：用户名
- Remote Directory：远程目录(后续有些相对目录的指定就是以此为基准的)
- Use password authentication, or use a different (√)
</code></pre><p>私有配置的高级：</p>
<pre><code>- Port：端口（默认22）
- Timeout (ms)：超时时间（毫秒）默认即可
- Disable exec：禁止运行命令
- Test Configuration：测试连接
</code></pre><p>至此,相关的基础配置已完毕.</p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>点进一个<code>maven</code>项目<br><code>构建环境处</code><br>Build</p>
<pre><code>- Root POM : moni/pom.xml (pom文件是在项目根目录下,如果分支就一个项目则不需要写项目名)
- Goals and options : clean install
</code></pre><p>在<code>构建后操作</code>选项<br>点击增加构建后操作步骤,选择<code>send build artifacts over SSH</code> 会增加相关选项界面.</p>
<p>SSH Publishers</p>
<pre><code>- SSH Server
    - NAME (选择刚刚配置的那个即可)
    - Transfers
        - Source files : moni/target/*.war(上传的文件,相对于工作区的路径,可写多个，默认用,分隔)
        - Remove prefix：moni/target/（只能指定Transfer Set Source files中的目录,不易出,web路径会变）
        - Remote directory：远程目录,这个是基于配置中的那个而言的相对路径
        - Exec command：~/deploy.sh monitor 80 /usr/local/tomcat-7.0.85(也可直接写脚本内容,后会有个脚本参考,具体参数看根据项目而定)
        -
        高级部分
        - Exclude files：排除文件（传输目录的时候很有用，使用通配符，例如：**/*.log,**/*.tmp,.git/）

        其他:略
</code></pre><h5 id="脚本参考"><a href="#脚本参考" class="headerlink" title="脚本参考"></a>脚本参考</h5><p>来自网友,稍加修改,出处不知.<br>前提要在目标主机新建文件夹<code>mkdir -p ~/war/bak</code><br>然后将脚本<code>scp</code>到目标主机,具体位置,根据上一步中<code>Exec command：~/deploy.sh monitor 80 /usr/local/tomcat-7.0.85</code> 而定.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#jenkins</span></span><br><span class="line"><span class="comment">#jenkins需要做配置 send..ssh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Remote directory : tmp/ </span></span><br><span class="line"><span class="comment">#这个相对路径取决于系统配置信息里面的ssh主机的 Remote Directory,建议tmp,因为备份在tmp  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Exec command : ~/deploy.sh deploy cmdb $BUILD_NUMBER</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#tomcat</span></span><br><span class="line">t_home_bin=`find / -name catalina.sh`</span><br><span class="line">t_home=<span class="variable">$&#123;t_home_bin%*/bin/*&#125;</span></span><br><span class="line">t_port=`cat <span class="variable">$t_home</span>/conf/server.xml | grep <span class="string">'HTTP/1.1'</span> | grep protocol | grep Connector |awk <span class="string">'&#123;print $2&#125;'</span> | tr -<span class="built_in">cd</span> <span class="string">"[0-9]"</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">#export</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="built_in">source</span> <span class="variable">$HOME</span>/.bashrc</span><br><span class="line"><span class="comment">#how to use</span></span><br><span class="line"><span class="comment">#./deploy.sh &lt;projectname&gt; [tomcat port] [tomcat home dir] $BUILD_NUMBER</span></span><br><span class="line"><span class="comment">#default var</span></span><br><span class="line">ACTION=<span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">PROJECT=<span class="string">"<span class="variable">$2</span>"</span></span><br><span class="line">TOMCAT_PORT=<span class="variable">$t_port</span></span><br><span class="line">TOMCAT_HOME=<span class="variable">$t_home</span></span><br><span class="line">VERSION=<span class="string">"<span class="variable">$3</span>"</span></span><br><span class="line"><span class="comment">#dir exist?</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">"/tmp/war/bak/"</span> ];<span class="keyword">then</span></span><br><span class="line">mkdir -p /tmp/war/bak/</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#args num</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 3 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"you must use like this : ./deploy.sh &lt;action&gt; &lt;projectname&gt; &lt;version&gt;"</span></span><br><span class="line">  <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#search tomcatpid</span></span><br><span class="line"><span class="comment">#tomcat_pid=`netstat -anp | grep $TOMCAT_PORT | awk '&#123;printf $7&#125;' | cut -d "/" -f 1`</span></span><br><span class="line">tomcat_p=`netstat -anp | grep <span class="variable">$TOMCAT_PORT</span> | awk <span class="string">'&#123;printf $7&#125;'</span> | cut -d <span class="string">"/"</span> -f 1`</span><br><span class="line">tomcat_pid=<span class="variable">$&#123;tomcat_p#*-&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"current :"</span> <span class="variable">$tomcat_pid</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ -n <span class="string">"<span class="variable">$tomcat_pid</span>"</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  sleep 5</span><br><span class="line">  <span class="comment">#进一步筛选</span></span><br><span class="line">  tomcat_pid=`ps -ef | grep <span class="variable">$tomcat_pid</span> |grep <span class="variable">$TOMCAT_HOME</span> | grep -v <span class="string">'grep\|tail\|more\|bash\|less'</span>| awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"scan tomcat pid :"</span> <span class="variable">$tomcat_pid</span></span><br><span class="line">  <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$tomcat_pid</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"kill tomcat :"</span> <span class="variable">$tomcat_pid</span></span><br><span class="line">    <span class="built_in">kill</span> -9 <span class="variable">$tomcat_pid</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#path for bakdir</span></span><br><span class="line">BAK_DIR=/tmp/war/bak/<span class="variable">$PROJECT</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$BAK_DIR</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">    mkdir -p <span class="variable">$BAK_DIR</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$ACTION</span> == <span class="string">'deploy'</span> ];<span class="keyword">then</span></span><br><span class="line">  cp /tmp/<span class="variable">$PROJECT</span>.war <span class="string">"<span class="variable">$BAK_DIR</span>"</span>/<span class="string">"<span class="variable">$PROJECT</span>"</span>_<span class="string">"<span class="variable">$VERSION</span>"</span>.war</span><br><span class="line">  <span class="comment">#publish project</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"scan no tomcat pid,<span class="variable">$PROJECT</span> publishing...."</span></span><br><span class="line">  sleep 10</span><br><span class="line">  rm -rf <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span></span><br><span class="line">  rm -rf <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span>.war</span><br><span class="line">  <span class="comment">#this path is define by jenkins-after build-ssh-Remote directory</span></span><br><span class="line">  mv /tmp/<span class="variable">$PROJECT</span>.war <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span>.war</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$ACTION</span> == <span class="string">'rollback'</span> ];<span class="keyword">then</span></span><br><span class="line">  <span class="comment">#delete project</span></span><br><span class="line">  rm -rf <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span></span><br><span class="line">  rm -rf <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span>.war</span><br><span class="line">  cp <span class="string">"<span class="variable">$BAK_DIR</span>"</span>/<span class="string">"<span class="variable">$PROJECT</span>"</span>_<span class="string">"<span class="variable">$VERSION</span>"</span>.war <span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/webapps/<span class="variable">$PROJECT</span>.war</span><br><span class="line">  <span class="comment">#publish project</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"rollback to the project <span class="variable">$PROJECT</span> <span class="variable">$VERSION</span>"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line">  sleep 3</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#start tomcat</span></span><br><span class="line"><span class="string">"<span class="variable">$TOMCAT_HOME</span>"</span>/bin/startup.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tomcat is starting,please try to access <span class="variable">$PROJECT</span> conslone url"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#del war</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line"><span class="built_in">echo</span> `date +%Y%m%d` <span class="string">"delete invalid war"</span></span><br><span class="line">find <span class="variable">$BAK_DIR</span> -mtime +7 -name <span class="string">"*.war"</span>;</span><br><span class="line">find <span class="variable">$BAK_DIR</span> -mtime +7 -name <span class="string">"*.war"</span> -<span class="built_in">exec</span> rm -rf &#123;&#125; \;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"host address:"</span> `/sbin/ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6 | awk <span class="string">'&#123;print $2&#125;'</span> | tr -d <span class="string">"addr:"</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"+++++++++++++++++++++++++++++++++++++++++++++++++++"</span></span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> jenkins </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql5.7源码安装]]></title>
      <url>/2018/03/26/mysql5-7%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>源码安装mysql 5.7<br>环境centos7 x86_64<br><a id="more"></a><br>MySQL官网<a href="https://www.mysql.com/downloads/" target="_blank" rel="noopener">下载地址</a></p>
<p>选择源码下载的时候会有两个版本,其中一个版本带有<code>Includes Boost Headers</code>字段.暂不知区别,因为两个都需要安装Boost库.我选择的不带此字段的.</p>
<p>boost 5.7.19<a href="https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.19.tar.gz" target="_blank" rel="noopener">下载地址</a> 版本要求5.7+</p>
<h4 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf boost_1_59_0.tar.gz</span><br><span class="line">cp -r boost_1_59_0 /usr/local/boost</span><br><span class="line"></span><br><span class="line">tar zxvf mysql-boost-5.7.19.tar.gz </span><br><span class="line">cd mysql-5.7.19/</span><br></pre></td></tr></table></figure>
<p>安装常用组件和依赖<br><code>yum -y install gcc gcc-c++ ncurses ncurses-devel bison libgcrypt perl make cmake</code></p>
<p>创建用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd mysql -r -g mysql  #-r 系统用户, -g 指定所属组</span><br></pre></td></tr></table></figure></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>新建安装目录<br><code>mkdir -p /usr/local/mysql</code><br><code>mkdir /usr/local/mysql/{data,logs,pids}</code></p>
<p>设置目录权限<br><code>chown -R mysql:mysql /usr/local/mysql</code></p>
<p>安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/usr/local/mysql/data -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DMYSQL_TCP_PORT=3306 -DMYSQL_USER=mysql -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DENABLE_DOWNLOADS=1 -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/usr/local/boost</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p>
<p>mysql编译安装时间挺长,请耐心等待.</p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>导入环境变量<br>vim /etc/profile<br>添加如下<br><code>export PATH=/usr/local/mysql/bin:/usr/local/mysql/lib:$PATH</code></p>
<p>更新环境配置<br><code>source /etc/profile</code></p>
<p>复制mysql服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/mysql/</span><br><span class="line">cp -a support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chmod a+x /etc/init.d/mysqld</span><br></pre></td></tr></table></figure></p>
<p>初始化DB<br><code>–initialize</code> 表示默认生成一个安全的密码<code>–initialize-insecure</code> 表示不生成密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data</span><br></pre></td></tr></table></figure>
<p>开机启动mysqld<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line">chkconfig --list | grep mysqld   #可查看mysqld是否为开机启动</span><br></pre></td></tr></table></figure></p>
<h4 id="my-cnf"><a href="#my-cnf" class="headerlink" title="my.cnf"></a>my.cnf</h4><p>vim /etc/my.cnf<br>参考如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">datadir=/usr/local/mysql/data</span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line">character-set-server=utf8</span><br><span class="line">max_connections=1000</span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error=/usr/local/mysql/logs/mysqld.log</span><br><span class="line">pid-file=/usr/local/mysql/pids/mysqld.pid</span><br><span class="line"></span><br><span class="line"># Disabling symbolic-links is recommended to prevent assorted security risks</span><br><span class="line">symbolic-links=0</span><br><span class="line"># Settings user and group are ignored when systemd is used.</span><br><span class="line"># If you need to run mysqld under a different user or group,</span><br><span class="line"># customize your systemd unit file for mariadb according to the</span><br><span class="line"># instructions in http://fedoraproject.org/wiki/Systemd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># include all files from the config directory</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">!includedir /etc/my.cnf.d</span><br></pre></td></tr></table></figure></p>
<h4 id="详解my-cnf"><a href="#详解my-cnf" class="headerlink" title="详解my.cnf"></a>详解my.cnf</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br></pre></td><td class="code"><pre><span class="line"># For advice on how to change settings please see</span><br><span class="line"># http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html</span><br><span class="line"># *** DO NOT EDIT THIS FILE. It‘s a template which will be copied to the</span><br><span class="line"># *** default location during install, and will be replaced if you</span><br><span class="line"># *** upgrade to a newer version of MySQL.</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"># Remove leading # and set to the amount of RAM for the most important data</span><br><span class="line"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span><br><span class="line"># innodb_buffer_pool_size = 128M</span><br><span class="line"></span><br><span class="line"># Remove leading # to turn on a very important data integrity option: logging</span><br><span class="line"># changes to the binary log between backups.</span><br><span class="line"># log_bin</span><br><span class="line"></span><br><span class="line"># These are commonly set, remove the # and set as required.</span><br><span class="line"># basedir = .....</span><br><span class="line"># datadir = .....</span><br><span class="line"># port = .....</span><br><span class="line"># server_id = .....</span><br><span class="line"># socket = .....</span><br><span class="line"></span><br><span class="line"># Remove leading # to set options mainly useful for reporting servers.</span><br><span class="line"># The server defaults are faster for transactions and fast SELECTs.</span><br><span class="line"># Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="line"># join_buffer_size = 128M</span><br><span class="line"># sort_buffer_size = 2M</span><br><span class="line"># read_rnd_buffer_size = 2M </span><br><span class="line"></span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES </span><br><span class="line">其实，这些项都是命令行的参数，在官网上可以从这个页面https://dev.mysql.com/doc/refman/5.7/en/option-files.html为入口，找到需要配置的项按需要进行配置。</span><br><span class="line"></span><br><span class="line">下面这个是来自http://www.fx114.net/qa-220-164752.aspx提供的my.cnf示例：</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">###############################基础设置#####################################</span><br><span class="line"></span><br><span class="line">#Mysql服务的唯一编号 每个mysql服务Id需唯一</span><br><span class="line">server-id = 1</span><br><span class="line"></span><br><span class="line">#服务端口号 默认3306</span><br><span class="line">port = 3306</span><br><span class="line"></span><br><span class="line">#mysql安装根目录</span><br><span class="line">basedir = /opt/mysql</span><br><span class="line"></span><br><span class="line">#mysql数据文件所在位置</span><br><span class="line">datadir = /opt/mysql/data</span><br><span class="line"></span><br><span class="line">#临时目录 比如load data infile会用到</span><br><span class="line">tmpdir  = /tmp</span><br><span class="line"></span><br><span class="line">#设置socke文件所在目录</span><br><span class="line">socket  = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">#主要用于MyISAM存储引擎,如果多台服务器连接一个数据库则建议注释下面内容</span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line">#只能用IP地址检查客户端的登录，不用主机名</span><br><span class="line">skip_name_resolve = 1</span><br><span class="line"></span><br><span class="line">#事务隔离级别，默认为可重复读，mysql默认可重复读级别（此级别下可能参数很多间隙锁，影响性能）</span><br><span class="line">transaction_isolation = READ-COMMITTED</span><br><span class="line"></span><br><span class="line">#数据库默认字符集,主流字符集支持一些特殊表情符号（特殊表情符占用4个字节）</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line"></span><br><span class="line">#数据库字符集对应一些排序等规则，注意要和character-set-server对应</span><br><span class="line">collation-server = utf8mb4_general_ci</span><br><span class="line"></span><br><span class="line">#设置client连接mysql时的字符集,防止乱码</span><br><span class="line">init_connect=‘SET NAMES utf8mb4‘</span><br><span class="line"></span><br><span class="line">#是否对sql语句大小写敏感，1表示不敏感</span><br><span class="line">lower_case_table_names = 1</span><br><span class="line"></span><br><span class="line">#最大连接数</span><br><span class="line">max_connections = 400</span><br><span class="line"></span><br><span class="line">#最大错误连接数</span><br><span class="line">max_connect_errors = 1000</span><br><span class="line"></span><br><span class="line">#TIMESTAMP如果没有显示声明NOT NULL，允许NULL值</span><br><span class="line">explicit_defaults_for_timestamp = true</span><br><span class="line"></span><br><span class="line">#SQL数据包发送的大小，如果有BLOB对象建议修改成1G</span><br><span class="line">max_allowed_packet = 128M</span><br><span class="line"></span><br><span class="line">#MySQL连接闲置超过一定时间后(单位：秒)将会被强行关闭</span><br><span class="line">#MySQL默认的wait_timeout  值为8个小时, interactive_timeout参数需要同时配置才能生效</span><br><span class="line">interactive_timeout = 1800</span><br><span class="line">wait_timeout = 1800</span><br><span class="line"></span><br><span class="line">#内部内存临时表的最大值 ，设置成128M。</span><br><span class="line">#比如大数据量的group by ,order by时可能用到临时表，</span><br><span class="line">#超过了这个值将写入磁盘，系统IO压力增大</span><br><span class="line">tmp_table_size = 134217728</span><br><span class="line">max_heap_table_size = 134217728</span><br><span class="line"></span><br><span class="line">#禁用mysql的缓存查询结果集功能</span><br><span class="line">#后期根据业务情况测试决定是否开启</span><br><span class="line">#大部分情况下关闭下面两项</span><br><span class="line">query_cache_size = 0</span><br><span class="line">query_cache_type = 0</span><br><span class="line"></span><br><span class="line">#####################用户进程分配到的内存设置BEGIN#############################</span><br><span class="line"></span><br><span class="line">##每个session将会分配参数设置的内存大小</span><br><span class="line">#用于表的顺序扫描，读出的数据暂存于read_buffer_size中，当buff满时或读完，将数据返回上层调用者</span><br><span class="line">#一般在128kb ~ 256kb,用于MyISAM</span><br><span class="line">#read_buffer_size = 131072</span><br><span class="line">#用于表的随机读取，当按照一个非索引字段排序读取时会用到，</span><br><span class="line">#一般在128kb ~ 256kb,用于MyISAM</span><br><span class="line">#read_rnd_buffer_size = 262144</span><br><span class="line">#order by或group by时用到</span><br><span class="line"></span><br><span class="line">#建议先调整为2M，后期观察调整</span><br><span class="line">sort_buffer_size = 2097152</span><br><span class="line"></span><br><span class="line">#一般数据库中没什么大的事务，设成1~2M，默认32kb</span><br><span class="line">binlog_cache_size = 524288</span><br><span class="line"></span><br><span class="line">########################用户进程分配到的内存设置END############################</span><br><span class="line"></span><br><span class="line">#在MySQL暂时停止响应新请求之前的短时间内多少个请求可以被存在堆栈中</span><br><span class="line">#官方建议back_log = 50 + (max_connections / 5),封顶数为900</span><br><span class="line">back_log = 130</span><br><span class="line"></span><br><span class="line">############################日志设置##########################################</span><br><span class="line"></span><br><span class="line">#数据库错误日志文件</span><br><span class="line">log_error = error.log</span><br><span class="line"></span><br><span class="line">#慢查询sql日志设置</span><br><span class="line">slow_query_log = 1</span><br><span class="line">slow_query_log_file = slow.log</span><br><span class="line"></span><br><span class="line">#检查未使用到索引的sql</span><br><span class="line">log_queries_not_using_indexes = 1</span><br><span class="line"></span><br><span class="line">#针对log_queries_not_using_indexes开启后，记录慢sql的频次、每分钟记录的条数</span><br><span class="line">log_throttle_queries_not_using_indexes = 5</span><br><span class="line"></span><br><span class="line">#作为从库时生效,从库复制中如何有慢sql也将被记录</span><br><span class="line">log_slow_slave_statements = 1</span><br><span class="line"></span><br><span class="line">#慢查询执行的秒数，必须达到此值可被记录</span><br><span class="line">long_query_time = 8</span><br><span class="line"></span><br><span class="line">#检索的行数必须达到此值才可被记为慢查询</span><br><span class="line">min_examined_row_limit = 100</span><br><span class="line"></span><br><span class="line">#mysql binlog日志文件保存的过期时间，过期后自动删除</span><br><span class="line">expire_logs_days = 5</span><br><span class="line"></span><br><span class="line">############################主从复制设置#####################################</span><br><span class="line"></span><br><span class="line">#开启mysql binlog功能</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line">#binlog记录内容的方式，记录被操作的每一行</span><br><span class="line">binlog_format = ROW</span><br><span class="line"></span><br><span class="line">#对于binlog_format = ROW模式时，减少记录日志的内容，只记录受影响的列</span><br><span class="line">binlog_row_image = minimal</span><br><span class="line"></span><br><span class="line">#master status and connection information输出到表mysql.slave_master_info中</span><br><span class="line">master_info_repository = TABLE</span><br><span class="line"></span><br><span class="line">#the slave‘s position in the relay logs输出到表mysql.slave_relay_log_info中</span><br><span class="line">relay_log_info_repository = TABLE</span><br><span class="line"></span><br><span class="line">#作为从库时生效,想进行级联复制，则需要此参数</span><br><span class="line">log_slave_updates</span><br><span class="line"></span><br><span class="line">#作为从库时生效,中继日志relay-log可以自我修复</span><br><span class="line">relay_log_recovery = 1</span><br><span class="line"></span><br><span class="line">#作为从库时生效,主从复制时忽略的错误</span><br><span class="line">slave_skip_errors = ddl_exist_errors</span><br><span class="line"></span><br><span class="line">#####################redo log和binlog的关系设置BEGIN#########################</span><br><span class="line"></span><br><span class="line">#(步骤1) prepare dml相关的SQL操作，然后将redo log buff中的缓存持久化到磁盘</span><br><span class="line">#(步骤2)如果前面prepare成功，那么再继续将事务日志持久化到binlog</span><br><span class="line">#(步骤3)如果前面成功，那么在redo log里面写上一个commit记录</span><br><span class="line">#当innodb_flush_log_at_trx_commit和sync_binlog都为1时是最安全的，</span><br><span class="line">#在mysqld服务崩溃或者服务器主机crash的情况下，binary log只有可能丢失最多一个语句或者一个事务。</span><br><span class="line">#但是都设置为1时会导致频繁的io操作，因此该模式也是最慢的一种方式。</span><br><span class="line">#当innodb_flush_log_at_trx_commit设置为0，mysqld进程的崩溃会导致上一秒钟所有事务数据的丢失。</span><br><span class="line">#当innodb_flush_log_at_trx_commit设置为2，只有在操作系统崩溃或者系统掉电的情况下，上一秒钟所有事务数据才可能丢失。</span><br><span class="line"></span><br><span class="line">#commit事务时,控制redo log buff持久化磁盘的模式 默认为1</span><br><span class="line">innodb_flush_log_at_trx_commit = 2</span><br><span class="line"></span><br><span class="line">#commit事务时,控制写入mysql binlog日志的模式 默认为0</span><br><span class="line">#innodb_flush_log_at_trx_commit和sync_binlog都为1时，mysql最为安全但性能上压力也是最大</span><br><span class="line">sync_binlog = 1</span><br><span class="line"></span><br><span class="line">####################redo log和binlog的关系设置END############################</span><br><span class="line"></span><br><span class="line">############################Innodb设置#####################################</span><br><span class="line"></span><br><span class="line">#数据块的单位8k，默认是16k，16kCPU压力稍小，8k对select的吞吐量大</span><br><span class="line">#innodb_page_size的参数值也影响最大索引长度，8k比16k的最大索引长度小</span><br><span class="line">#innodb_page_size = 8192</span><br><span class="line"></span><br><span class="line">#一般设置物理存储的60% ~ 70%</span><br><span class="line">innodb_buffer_pool_size = 1G</span><br><span class="line"></span><br><span class="line">#5.7.6之后默认16M</span><br><span class="line">#innodb_log_buffer_size = 16777216</span><br><span class="line"></span><br><span class="line">#该参数针对unix、linux，window上直接注释该参数.默认值为NULL</span><br><span class="line">#O_DIRECT减少操作系统级别VFS的缓存和Innodb本身的buffer缓存之间的冲突</span><br><span class="line">innodb_flush_method = O_DIRECT</span><br><span class="line"></span><br><span class="line">#此格式支持压缩, 5.7.7之后为默认值</span><br><span class="line">innodb_file_format = Barracuda</span><br><span class="line"></span><br><span class="line">#CPU多核处理能力设置，假设CPU是2颗4核的，设置如下</span><br><span class="line">#读多，写少可以设成2:6的比例</span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line"></span><br><span class="line">#提高刷新脏页数量和合并插入数量，改善磁盘I/O处理能力</span><br><span class="line">#默认值200（单位：页）</span><br><span class="line">#可根据磁盘近期的IOPS确定该值</span><br><span class="line">innodb_io_capacity = 500</span><br><span class="line"></span><br><span class="line">#为了获取被锁定的资源最大等待时间，默认50秒，超过该时间会报如下错误:</span><br><span class="line"># ERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction</span><br><span class="line">innodb_lock_wait_timeout = 30</span><br><span class="line"></span><br><span class="line">#调整buffer pool中最近使用的页读取并dump的百分比,通过设置该参数可以减少转储的page数</span><br><span class="line">innodb_buffer_pool_dump_pct = 40</span><br><span class="line"></span><br><span class="line">#设置redoLog文件所在目录, redoLog记录事务具体操作内容</span><br><span class="line">innodb_log_group_home_dir = /opt/mysql/redolog/</span><br><span class="line"></span><br><span class="line">#设置undoLog文件所在目录, undoLog用于事务回滚操作</span><br><span class="line">innodb_undo_directory = /opt/mysql/undolog/</span><br><span class="line"></span><br><span class="line">#在innodb_log_group_home_dir中的redoLog文件数, redoLog文件内容是循环覆盖写入。</span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line"></span><br><span class="line">#MySql5.7官方建议尽量设置的大些，可以接近innodb_buffer_pool_size的大小</span><br><span class="line">#之前设置该值较大时可能导致mysql宕机恢复时间过长，现在恢复已经加快很多了</span><br><span class="line">#该值减少脏数据刷新到磁盘的频次</span><br><span class="line">#最大值innodb_log_file_size * innodb_log_files_in_group &lt;= 512GB,单文件&lt;=256GB</span><br><span class="line">innodb_log_file_size = 1024M</span><br><span class="line"></span><br><span class="line">#设置undoLog文件所占空间可以回收</span><br><span class="line">#5.7之前的MySql的undoLog文件一直增大无法回收</span><br><span class="line">innodb_undo_log_truncate = 1</span><br><span class="line">innodb_undo_tablespaces = 3</span><br><span class="line">innodb_undo_logs = 128</span><br><span class="line"></span><br><span class="line">#5.7.7默认开启该参数 控制单列索引长度最大达到3072</span><br><span class="line">#innodb_large_prefix = 1</span><br><span class="line"></span><br><span class="line">#5.7.8默认为4个, Inodb后台清理工作的线程数</span><br><span class="line">#innodb_purge_threads = 4</span><br><span class="line"></span><br><span class="line">#通过设置配置参数innodb_thread_concurrency来限制并发线程的数量，</span><br><span class="line">#一旦执行线程的数量达到这个限制，额外的线程在被放置到对队列中之前，会睡眠数微秒，</span><br><span class="line">#可以通过设定参数innodb_thread_sleep_delay来配置睡眠时间</span><br><span class="line">#该值默认为0,在官方doc上，对于innodb_thread_concurrency的使用，也给出了一些建议:</span><br><span class="line">#(1)如果一个工作负载中，并发用户线程的数量小于64，建议设置innodb_thread_concurrency=0；</span><br><span class="line">#(2)如果工作负载一直较为严重甚至偶尔达到顶峰，建议先设置innodb_thread_concurrency=128,</span><br><span class="line">###并通过不断的降低这个参数，96, 80, 64等等，直到发现能够提供最佳性能的线程数</span><br><span class="line">#innodb_thread_concurrency = 0</span><br><span class="line"></span><br><span class="line">#强所有发生的死锁错误信息记录到error.log中，之前通过命令行只能查看最近一次死锁信息</span><br><span class="line">innodb_print_all_deadlocks = 1</span><br><span class="line"></span><br><span class="line">############################其他设置########################################</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 128M</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 20M</span><br><span class="line">sort_buffer_size = 256k</span><br><span class="line">read_buffer = 2M</span><br><span class="line">write_buffer = 2M</span><br><span class="line"></span><br><span class="line">[mysqlhotcopy]</span><br><span class="line">interactive-timeout</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">#增加每个进程的可打开文件数量</span><br><span class="line">open-files-limit = 28192</span><br></pre></td></tr></table></figure>
<h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><p>文件创建根据自己配置而定.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch /usr/local/mysql/logs/mysqld.log</span><br><span class="line">touch /usr/local/mysql/pids/mysqld.pid</span><br></pre></td></tr></table></figure></p>
<p>文件权限修改.<br><code>chown -R mysql:mysql /usr/local/mysql</code></p>
<p>启动<br><code>service mysqld start</code> 或 <code>/etc/init.d/mysqld start</code></p>
<p>查看运行状态<br><code>service mysqld status</code> 或 <code>/etc/init.d/mysqld status</code></p>
<p>连接数据库<br><code>mysql -u root</code> #默认root为空密码.直接回车即可<br><code>use mysql</code>     #切到mysql表<br>查看用户信息,5.7取消了password,换成了authentication_string<br><code>select host,user,authentication_string from user;</code> </p>
<p>设置root密码<br><code>UPDATE user SET authentication_string=PASSWORD(&#39;newpassword&#39;) WHERE user=&#39;root&#39;;</code><br><code>flush privileges;</code></p>
<p>reboot重启</p>
]]></content>
      
        <categories>
            
            <category> database </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[haproxy-Exchange]]></title>
      <url>/2018/03/21/haproxy-Exchange/</url>
      <content type="html"><![CDATA[<p>使用haproxy负载exchange,可搭配keepalive做高可用<br><a id="more"></a></p>
<p>keepalive <a href="http://blog.dl1548.site/2017/06/06/keepalive/" target="_blank" rel="noopener">建议阅读</a></p>
<p>exchange负载<a href="https://www.haproxy.com/documentation/aloha/7-0/deployment-guides/microsoft-exchange-2013/" target="_blank" rel="noopener">官方文档</a></p>
<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><a href="https://www.haproxy.org/#down" target="_blank" rel="noopener">下载地址</a></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>解压并cd<br><code>make TARGET=linux2628  ARCH=x86_64 PREFIX=/usr/local/haproxy</code><br><code>make install PREFIX=/usr/local/haproxy</code></p>
<p>复制启动脚本到sbin<br><code>cp /usr/local/haproxy/sbin/haproxy /usr/sbin/</code></p>
<p>复制启动脚本到init.d<br><code>cp ./examples/haproxy.init /etc/init.d/haproxy</code><br><code>chmod 755 /etc/init.d/haproxy</code></p>
<p>创建haproxy账号<br><code>useradd -r haproxy</code><br>配置文件可指定进程用户</p>
<h4 id="haproxy配置文件"><a href="#haproxy配置文件" class="headerlink" title="haproxy配置文件"></a>haproxy配置文件</h4><p><code>mkdir /etc/haproxy</code><br><code>vim /etc/haproxy/haproxy.cfg</code><br>负载exchange配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">defaults</span><br><span class="line">    log 127.0.0.1 local3 info #配合rsyslog</span><br><span class="line">    option dontlognull  </span><br><span class="line">    option redispatch  </span><br><span class="line">    option contstats  </span><br><span class="line">    retries 3  </span><br><span class="line">    timeout connect 5s  </span><br><span class="line">    timeout http-keep-alive 1s</span><br><span class="line">    timeout http-request 15s</span><br><span class="line">    timeout queue 30s  </span><br><span class="line">    timeout tarpit 1m  </span><br><span class="line">    backlog 10000  </span><br><span class="line"></span><br><span class="line">    balance roundrobin  </span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog  </span><br><span class="line">    log global  </span><br><span class="line">    timeout client 300s</span><br><span class="line">    timeout server 300s</span><br><span class="line">    default-server inter 3s rise 2 fall 3</span><br><span class="line"></span><br><span class="line">frontend ft_exchange_HTTP</span><br><span class="line">    bind 10.0.2.32:80 name web</span><br><span class="line">    maxconn 10000</span><br><span class="line">    default_backend bk_exchange_HTTP</span><br><span class="line"></span><br><span class="line">backend bk_exchange_HTTP</span><br><span class="line">    server mail01 10.0.2.51:80 maxconn 10000 check</span><br><span class="line">    server mail02 10.0.2.52:80 maxconn 10000 check backup</span><br><span class="line"></span><br><span class="line">frontend ft_exchange_SSL</span><br><span class="line">    bind 10.0.2.32:443 name ssl</span><br><span class="line">    maxconn 10000</span><br><span class="line">    default_backend bk_exchange_SSL</span><br><span class="line"></span><br><span class="line">backend bk_exchange_SSL</span><br><span class="line">    server mail01 10.0.2.51:443 maxconn 10000 check</span><br><span class="line">    server mail02 10.0.2.52:443 maxconn 10000 check backup</span><br><span class="line"></span><br><span class="line">frontend ft_exchange_SMTP</span><br><span class="line">    bind 10.0.2.32:25 name smtp</span><br><span class="line">    maxconn 10000</span><br><span class="line">    default_backend bk_exchange_SMTP</span><br><span class="line"></span><br><span class="line">backend bk_exchange_SMTP</span><br><span class="line">    server mail01 10.0.2.51:25 maxconn 10000 check</span><br><span class="line">    server mail02 10.0.2.52:25 maxconn 10000 check backup</span><br><span class="line"></span><br><span class="line">frontend ft_exchange_SMTP_Secure</span><br><span class="line">    bind 10.0.2.32:587 name smtpssl</span><br><span class="line">    maxconn 10000</span><br><span class="line">    default_backend bk_exchange_SMTP_Secure</span><br><span class="line"></span><br><span class="line">backend bk_exchange_SMTP_Secure</span><br><span class="line">    server mail01 10.0.2.51:587 maxconn 10000 check</span><br><span class="line">    server mail02 10.0.2.52:587 maxconn 10000 check backup</span><br><span class="line"></span><br><span class="line">frontend ft_exchange_IMAP</span><br><span class="line">    bind 10.0.2.32:143 name imap</span><br><span class="line">    maxconn 10000</span><br><span class="line">    default_backend bk_exchange_IMAP</span><br><span class="line"></span><br><span class="line">backend bk_exchange_IMAP</span><br><span class="line">    server mail01 10.0.2.51:143 maxconn 10000 check</span><br><span class="line">    server mail02 10.0.2.52:143 maxconn 10000 check backup</span><br><span class="line"></span><br><span class="line">frontend ft_exchange_IMAP_Secure</span><br><span class="line">    bind 10.0.2.32:993 name imapssl</span><br><span class="line">    maxconn 10000</span><br><span class="line">    default_backend bk_exchange_IMAP_Secure</span><br><span class="line"></span><br><span class="line">backend bk_exchange_IMAP_Secure</span><br><span class="line">    server mail01 10.0.2.51:993 maxconn 10000 check</span><br><span class="line">    server mail02 10.0.2.52:993 maxconn 10000 check backup</span><br><span class="line"></span><br><span class="line">frontend ft_exchange_POP3</span><br><span class="line">  bind 10.0.2.32:110 name pop3</span><br><span class="line">  maxconn 10000</span><br><span class="line">  default_backend bk_exchange_POP3</span><br><span class="line"></span><br><span class="line">backend bk_exchange_POP3</span><br><span class="line">  server mail01 10.0.2.51:110 maxconn 10000 check</span><br><span class="line">  server mail02 10.0.2.52:110 maxconn 10000 check backup</span><br><span class="line"></span><br><span class="line">frontend ft_exchange_POP3_Secure</span><br><span class="line">  bind 10.0.2.32:995 name pop3ssl</span><br><span class="line">  maxconn 10000</span><br><span class="line">  default_backend bk_exchange_POP3_Secure</span><br><span class="line"></span><br><span class="line">backend bk_exchange_POP3_Secure</span><br><span class="line">  server mail01 10.0.2.51:995 maxconn 10000 check</span><br><span class="line">  server mail02 10.0.2.52:995 maxconn 10000 check backup</span><br></pre></td></tr></table></figure></p>
<h4 id="开启日志"><a href="#开启日志" class="headerlink" title="开启日志"></a>开启日志</h4><p><code>vim /etc/rsyslog.conf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#去掉注释</span><br><span class="line">$ModLoad imudp</span><br><span class="line">$UDPServerRun 514</span><br><span class="line"></span><br><span class="line">#添加如下</span><br><span class="line">local3.* /var/log/haproxy.log</span><br></pre></td></tr></table></figure>
<h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><p><code>systemctl restart rsyslog  / haproxy</code><br><code>service rsyslog restart / haproxy</code></p>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> haproxy </tag>
            
            <tag> exchange </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix snmp trap]]></title>
      <url>/2018/03/18/zabbix-snmp-trap/</url>
      <content type="html"><![CDATA[<p>了解snmp trap之前,先了解snmp以及MIB.<br>snmp trap 是 SNMP 的一部分,简单来说就是被管理设备主动发送消息给管理设备.<br><a id="more"></a></p>
<p>zabbix开启 snmp trap 比较简单,官方提供了perl脚本.<br><a href="https://zabbix.org/wiki/Start_with_SNMP_traps_in_Zabbix" target="_blank" rel="noopener">官方文档</a></p>
<h4 id="获取脚本"><a href="#获取脚本" class="headerlink" title="获取脚本"></a>获取脚本</h4><p>前置条件,也可源码安装,按个人喜好<br><code>yum install -y net-snmp-utils net-snmp-perl net-snmp</code></p>
<p>下载源码<br><a href="https://www.zabbix.com/download_sources" target="_blank" rel="noopener">下载地址</a><br>解压<br><code>tar -zxvf zabbix-VERSION.tar.gz</code><br>复制脚本并给予权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp ./zabbix-VERSION/misc/snmptrap/zabbix_trap_receiver.pl /usr/bin</span><br><span class="line">chmod +x /usr/bin/zabbix_trap_receiver.pl</span><br></pre></td></tr></table></figure></p>
<h4 id="配置trap"><a href="#配置trap" class="headerlink" title="配置trap"></a>配置trap</h4><p><code>vi /etc/snmp/snmptrapd.conf</code><br>修改配置如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">authCommunity execute public</span><br><span class="line">perl do &quot;/usr/bin/zabbix_trap_receiver.pl&quot;;</span><br></pre></td></tr></table></figure></p>
<p>开启server的trapper功能<br><code>vi /etc/zabbix/zabbix_server.conf</code><br>修改配置如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">StartSNMPTrapper=1</span><br><span class="line">SNMPTrapperFile=/tmp/zabbix_traps.tmp </span><br><span class="line">#此路径和脚本中的要一致,否则server无法读取发送过来的信息</span><br></pre></td></tr></table></figure></p>
<p>重启服务<br><code>/etc/init.d/zabbix-server restart</code></p>
<h4 id="添加mib库"><a href="#添加mib库" class="headerlink" title="添加mib库"></a>添加mib库</h4><p>默认情况下snmp内置了一下mib库文件<code>/usr/share/snmp/mibs</code><br>如果有需要可添加第三方mib文件到此目录下.并新建<code>/etc/snmp/snmp.conf</code><br>添加mib库信息,格式如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#mibs +库名</span><br><span class="line">mibs +JUNIPER-MIB:JUNIPER-FABRIC-CHASSIS:BGP4-MIB</span><br></pre></td></tr></table></figure></p>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>centos7<br><code>systemctl enable snmptrapd</code><br><code>systemctl restart snmptrapd.service</code><br>小记:<code>snmptrapd -C -c /etc/snmp/snmptrapd.conf</code> 指定配置文件启动</p>
<h4 id="web使用"><a href="#web使用" class="headerlink" title="web使用"></a>web使用</h4><p>现在就可以在web端进行操作了.<br>添加开启了snmptrap的主机即可</p>
<h5 id="创建监控项目"><a href="#创建监控项目" class="headerlink" title="创建监控项目"></a>创建监控项目</h5><p>可以针对单个主机,也可创建模板然后关联主机.</p>
<ol>
<li>名称: 自定义</li>
<li>类型: snmp trap</li>
<li><p>key: snmptrap.fallback(表示所有没有被正则匹配到的,都会到这个下面)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">官网有明显的解释以及案例</span><br><span class="line">比如新建个监控项</span><br><span class="line">     名称为 :Name: Unmatched SNMP trap received from &#123;HOST.NAME&#125;</span><br><span class="line">     key为 : snmptrap.fallback</span><br><span class="line">那么表达式就可以写成 类似 &#123;snmptrap.fallback.nodata(300)&#125;=0</span><br><span class="line">表示五分钟没有数据就触发告警</span><br></pre></td></tr></table></figure>
</li>
<li><p>信息类型: 日志<br>主要就这几点.</p>
</li>
</ol>
<p>重点讲下这个<code>key</code></p>
<p>除了<code>snmptrap.fallback</code>,还有<code>snmptrap[regexp]</code>这个支持正则匹配,<br>由于监控的是日志,获取的也是所有的日志信息,所有要取想要的值就要进行正则匹配.<br>给出官网例子,便于理解<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Example 1</span><br><span class="line">Key: snmptrap[&quot;SNMPv2-MIB::coldStart&quot;]</span><br><span class="line">Instead of OID (numeric or textual), you can use any word / phrase from a trap text:</span><br><span class="line"></span><br><span class="line">Key: snmptrap[&quot;No route to host&quot;]</span><br><span class="line">in this case, Zabbix catches all SNMP traps from a corresponding address that contains &quot;No route to host&quot;.</span><br><span class="line"></span><br><span class="line">Note that you can create item for each trap (example above) or a single item for multiple traps.</span><br><span class="line">-------------------------</span><br><span class="line">Example 2</span><br><span class="line">Key: snmptrap[&quot;cpqRackPowerSubsystem(NotRedundant|LineVoltageProblem|OverloadCondition)&quot;]</span><br><span class="line"></span><br><span class="line">in this case, Zabbix catches all SNMP traps from a corresponding address that contains &quot;cpqRackPowerSubsystemNotRedundant&quot; or &quot;cpqRackPowerSubsystemLineVoltageProblem&quot; or &quot;cpqRackPowerSubsystemOverloadCondition&quot;.</span><br></pre></td></tr></table></figure></p>
<p>其实就是说,可以进行正则匹配,匹配到,server就会捕获相应的snmp trap信息.<br>感觉上就像是个日志监控</p>
<p>再给个官网例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name: Link status trap for &#123;#SNMPVALUE&#125;</span><br><span class="line">Type: SNMP trap</span><br><span class="line">Key: snmptrap[&quot;(IF-MIB::linkDown|IF-MIB::linkUp)(.|[[:space:]])*&#123;#SNMPVALUE&#125;&quot;]</span><br><span class="line">Type of information: Log</span><br></pre></td></tr></table></figure></p>
<p>可以看出,这个key就是去匹配链路的up/down的.也给出了触发器的表达式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Name: Interface &#123;#SNMPVALUE&#125; on &#123;HOST.NAME&#125; is down</span><br><span class="line"> Expression: &#123;Template SNMP Interfaces:snmptrap[&quot;(IF-MIB::linkDown|IF-MIB::linkUp)(.|[[:space:]])*&#123;#SNMPVALUE&#125;&quot;].str(linkDown)&#125;=1</span><br></pre></td></tr></table></figure></p>
<p>可以看出,匹配到了<code>linkDown</code> 就返回1 然后触发告警.<code>str返回两个结果,1和0 1代匹配,0表示未匹配</code></p>
<p>整个流程大体就是这样,具体的监控项还是要熟悉mib,然后来定义.</p>
<hr>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[内网仓库搭建]]></title>
      <url>/2018/03/18/%E5%86%85%E7%BD%91%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p>应对服务器不能去外网的情况<br><a id="more"></a></p>
<p>不同版本的系统,配置等都不一样,过程无二</p>
<h3 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h3><h4 id="通过iso"><a href="#通过iso" class="headerlink" title="通过iso"></a>通过iso</h4><p>将对应系统iso挂载到系统(vmware去配置中添加CD)</p>
<p>创建mount文件路径并将CD挂载到系统<br><code>mkdir /mnt/yum-iso</code><br><code>mount /dev/cdrom /mnt/yum-iso/</code></p>
<p>创建目录,并将iso复制到系统,用来制作yum源<br><code>mkdir /yum</code> <code>cp -a /mnt/yum-iso/ /yum/</code></p>
<p>备份原有的yum仓库配置<br><code>cd /etc/yum.repos.d/</code><br><code>mkdir bk</code><br><code>mv *.repo bk/</code></p>
<p>创建本地yum仓库配置</p>
<p><code>vi local-iso.repo</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[centos7-iso]</span><br><span class="line">name=CentOS-$releasever - Media</span><br><span class="line">baseurl=file:///yum/yum-iso/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure></p>
<p>清理缓存,制作本地缓存<br><code>yum clean all</code><br><code>yum makecaches</code></p>
<h4 id="自定义yum源"><a href="#自定义yum源" class="headerlink" title="自定义yum源"></a>自定义yum源</h4><p>安装软件<br><code>yum -y install createrepo</code></p>
<p>创建yum源文件目录<br><code>mkdir -p /yum/yum-custom/packages</code><br>将搜集的源放置相应目录<br><code>cp 源文件 /yum/yum-custom/packages/</code><br>创建repo,会生成repodata目录<br><code>createrepo -u -d  /yum/yum-custom/</code><br>配置repo<br><code>cd /etc/yum.repos.d/</code><br><code>vi local.repo</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[centos7-custom]</span><br><span class="line">name=CentOS-$releasever - Media</span><br><span class="line">baseurl=file:///yum/yum-custom/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure></p>
<p>清理缓存,制作本地缓存<br><code>yum clean all</code><br><code>yum makecaches</code></p>
<h4 id="局域网yum源"><a href="#局域网yum源" class="headerlink" title="局域网yum源"></a>局域网yum源</h4><p>搭建ftp服务器<br><code>yum -y install vsftpd</code><br>配置ftp<br><code>vi /etc/vsftpd/vsftpd.conf</code> <code>anon_root=/yum/</code>(yum目录权限drwxr-xr-x)<br>启动ftp<br><code>systemctl start vsftpd</code> <code>systemctl enable vsftpd</code></p>
<p>其他主机使用此仓库,添加仓库配置文件</p>
<p><code>vim /etc/yum.repos.d/local-ftp.repo</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[centos7-ftp]</span><br><span class="line">name=CentOS-$releasever - Media</span><br><span class="line">baseurl=ftp://192.168.1.96/yum-custom</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure>
<h3 id="apt-get"><a href="#apt-get" class="headerlink" title="apt-get"></a>apt-get</h3><p>等后续</p>
<h3 id="镜像yum"><a href="#镜像yum" class="headerlink" title="镜像yum"></a>镜像yum</h3><p>主要是导入公网yum制作本地仓库</p>
<p>通过同步<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener">科大开源镜像</a>到本地,制作局域网仓库<br>    注:镜像源的选择有很多,前提其支持rsync.</p>
<p>安装同步工具 <code>yum -y install rsync</code><br>搭建服务器 <code>yum -y install httpd</code></p>
<pre><code>- web服务器的选择有很多,apache,nginx,ftp等等
</code></pre><p>编辑同步脚本,注意本地路径和远程一致,方便后续repo文件的书写,其分类很清晰<br>写个定时任务,闲时同步即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/bash</span><br><span class="line">#centos7 x86_64</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/7/os/x86_64/Packages/  /var/www/html/centos/7/os/x86_64/Packages/  &gt; /var/www/html/log/os7p.log 2&gt;&amp;1</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/7/os/x86_64/repodata/  /var/www/html/centos/7/os/x86_64/repodata/  &gt; /var/www/html/log/os7r.log 2&gt;&amp;1</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/7/extras/x86_64/Packages/  /var/www/html/centos/7/extras/x86_64/Packages/  &gt; /var/www/html/log/ex7p.log 2&gt;&amp;1</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/7/extras/x86_64/repodata/  /var/www/html/centos/7/extras/x86_64/repodata/  &gt; /var/www/html/log/ex7r.log 2&gt;&amp;1</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/7/updates/x86_64/Packages/  /var/www/html/centos/7/updates/x86_64/Packages/  &gt; /var/www/html/log/up7p.log 2&gt;&amp;1</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/7/updates/x86_64/repodata/  /var/www/html/centos/7/updates/x86_64/repodata/  &gt; /var/www/html/log/up7r.log 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">#centos6 x86_64</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/6/os/x86_64/Packages/  /var/www/html/centos/6/os/x86_64/Packages/  &gt; /var/www/html/log/os6p.log 2&gt;&amp;1</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/6/os/x86_64/repodata/  /var/www/html/centos/6/os/x86_64/repodata/  &gt; /var/www/html/log/os6r.log 2&gt;&amp;1</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/6/extras/x86_64/Packages/  /var/www/html/centos/6/extras/x86_64/Packages/  &gt; /var/www/html/log/ex6p.log 2&gt;&amp;1</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/6/extras/x86_64/repodata/  /var/www/html/centos/6/extras/x86_64/repodata/  &gt; /var/www/html/log/ex6r.log 2&gt;&amp;1</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/6/updates/x86_64/Packages/  /var/www/html/centos/6/updates/x86_64/Packages/  &gt; /var/www/html/log/up6p.log 2&gt;&amp;1</span><br><span class="line">rsync -av rsync://mirrors.ustc.edu.cn/centos/6/updates/x86_64/repodata/  /var/www/html/centos/6/updates/x86_64/repodata/  &gt; /var/www/html/log/up6r.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure></p>
<p>我只同步了三个主要的包,不到30G.(同步前注意自己的磁盘空间)</p>
<p>编辑jk.repo文件.(网址为服务器网址)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[base]</span><br><span class="line">name=CentOS-$releasever - Base - jk</span><br><span class="line">baseurl=http://192.168.1.96/centos/$releasever/os/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">#released updates</span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-$releasever - Updates - jk</span><br><span class="line">baseurl=http://192.168.1.96/centos/$releasever/updates/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">#additional packages that may be useful</span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-$releasever - Extras - jk</span><br><span class="line">baseurl=httpd://192.168.1.96/centos/$releasever/extras/$basearch/</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> yum </tag>
            
            <tag> apt-get </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[nexus]]></title>
      <url>/2018/03/15/nexus/</url>
      <content type="html"><![CDATA[<p><a href="https://www.sonatype.com/" target="_blank" rel="noopener">nexus官网</a><br><a href="https://www.sonatype.com/download-oss-sonatype" target="_blank" rel="noopener">下载地址</a></p>
<p>2.4 Nexus介绍<br>maven的仓库只有两大类：1.本地仓库 2.远程仓库，在远程仓库中又分成了3种：</p>
<h4 id="安装java"><a href="#安装java" class="headerlink" title="安装java"></a>安装java</h4><p>并配置相关java环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#java1.8</span><br><span class="line">export RUN_AS_USER=root</span><br><span class="line">export JAVA_HOME=/usr/local/jdk1.8.0_45</span><br><span class="line">export CLASS_HOME=/usr/local/jdk1.8.0_45/lib:$JAVA_HOME/jre/lib</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure></p>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>PATH/bin/nexus start/stop/run(有日志输出)</p>
<h4 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h4><p>ln -s PATH/bin/nexus /etc/init.d/nexus<br>chkconfig nexus on<br>chkconfig –list nexus 检查</p>
<h4 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h4><p>默认url: ip:8081/nexus<br>账号: admin<br>密码: admin123</p>
<h4 id="仓库介绍"><a href="#仓库介绍" class="headerlink" title="仓库介绍"></a>仓库介绍</h4><p>1 中央仓库<br>2 私服<br>3 其它公共库。</p>
<p>私服是一种特殊的远程仓库，它是架设在局域网内的仓库服务，私服代理广域网上的远程仓库，供局域网内的Maven用户使用。当Maven需要下载构件的时候，它从私服请求，如果私服上不存在该构件，则从外部的远程仓库下载，缓存在私服上之后，再为Maven的下载请求提供服务。我们还可以把一些无法从外部仓库下载到的构件上传到私服上。</p>
<p>Nexus 的仓库分为这么几类：</p>
<p>hosted 宿主仓库：主要用于部署无法从公共仓库获取的构件（如 oracle 的 JDBC 驱动）以及自己或第三方的项目构件；</p>
<p>proxy 代理仓库：代理公共的远程仓库；</p>
<p>virtual 虚拟仓库：用于适配 Maven 1；</p>
<p>group 仓库组：Nexus 通过仓库组的概念统一管理多个仓库，这样我们在项目中直接请求仓库组即可请求到仓库组管理的多个仓库。</p>
<h4 id="component介绍"><a href="#component介绍" class="headerlink" title="component介绍"></a>component介绍</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">component name的一些说明：</span><br><span class="line">- maven-central：maven中央库，默认从https://repo1.maven.org/maven2/拉取jar</span><br><span class="line">- maven-releases：私库发行版jar</span><br><span class="line">- maven-snapshots：私库快照（调试版本）jar</span><br><span class="line">- maven-public：仓库分组，把上面三个仓库组合在一起对外提供服务，在本地maven基础配置settings.xml中使用。</span><br><span class="line"></span><br><span class="line">component type的一些说明：</span><br><span class="line">- hosted：类型的仓库，内部项目的发布仓库</span><br><span class="line">- releases：内部的模块中release模块的发布仓库</span><br><span class="line">- snapshots：发布内部的SNAPSHOT模块的仓库</span><br><span class="line">- 3rd party：第三方依赖的仓库，这个数据通常是由内部人员自行下载之后发布上去</span><br><span class="line">- proxy：类型的仓库，从远程中央仓库中寻找数据的仓库</span><br></pre></td></tr></table></figure>
<h4 id="上传jar包"><a href="#上传jar包" class="headerlink" title="上传jar包"></a>上传jar包</h4><p>配置setting<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;server&gt;   </span><br><span class="line">&lt;id&gt;jk_jar&lt;/id&gt;   </span><br><span class="line">&lt;username&gt;admin&lt;/username&gt;</span><br><span class="line">&lt;password&gt;123xxxxx&lt;/password&gt;   </span><br><span class="line">&lt;/server&gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mvn deploy:deploy-file -DgroupId=com.jingkunsystem -DartifactId=zabbix4j -Dversion=0.1.2 -Dpackaging=jar -Dfile=/jk_jar/zabbix4j-0.1.2.jar -Durl=http://192.168.1.111:8081/repository/jk_jar/ -DrepositoryId=jk_jar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DgroupId和DartifactId构成了该jar包在pom.xml的坐标，项目就是依靠这两个属性定位。自己起名字也行。</span><br><span class="line">Dfile表示需要上传的jar包的绝对路径。</span><br><span class="line">Durl私服上仓库的位置，打开nexus——&gt;repositories菜单，可以看到该路径。</span><br><span class="line">DrepositoryId服务器的表示id，在nexus的configuration可以看到。</span><br><span class="line">Dversion表示版本信息</span><br><span class="line">解压该包，会发现一个叫MANIFEST.MF的文件，这个文件就有描述该包的版本信息。</span><br><span class="line">比如Manifest-Version: 1.0可以知道该包的版本了。</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nexus </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[rpm打包]]></title>
      <url>/2018/02/28/rpm%E6%89%93%E5%8C%85/</url>
      <content type="html"><![CDATA[<blockquote>
<p>RPM（Redhat Package Manager）是用于Redhat、CentOS、Fedora等Linux 分发版（distribution）的常见的软件包管理器。因为它允许分发已编译的软件，所以用户只用一个命令就可以安装软件.</p>
</blockquote>
<a id="more"></a>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install rpm-build</span><br><span class="line">yum install rpmdevtools</span><br></pre></td></tr></table></figure>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p><code>rpmdev-setuptree</code>命令,可在<code>$HOme</code>下生产一个标注的工作空间’rpmbuild’<br>结构如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ tree rpmbuild</span><br><span class="line">rpmbuild</span><br><span class="line">├── BUILD</span><br><span class="line">├── RPMS</span><br><span class="line">├── SOURCES</span><br><span class="line">├── SPECS</span><br><span class="line">└── SRPMS</span><br></pre></td></tr></table></figure></p>
<p>如果未安装<code>rpmdevtools</code> 手动创建也是可以的<br><code>mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}</code></p>
<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><table>
<thead>
<tr>
<th>目录名</th>
<th>说明</th>
<th>macros中的宏名</th>
</tr>
</thead>
<tbody>
<tr>
<td>~/rpmbuild/</td>
<td>rpmbuild文件夹</td>
<td>%_topdir</td>
</tr>
<tr>
<td>~/rpmbuild/BUILD</td>
<td>编译rpm包的临时目录</td>
<td>%_builddir</td>
</tr>
<tr>
<td>~/rpmbuild/BUILDROOT</td>
<td>编译后生成的软件临时安装目录</td>
<td>%_buildrootdir</td>
</tr>
<tr>
<td>~/rpmbuild/RPMS</td>
<td>最终生成的可安装rpm包的所在目录</td>
<td>%_rpmdir</td>
</tr>
<tr>
<td>~/rpmbuild/SOURCES</td>
<td>所有源代码和补丁文件的存放目录</td>
<td>%_sourcedir</td>
</tr>
<tr>
<td>~/rpmbuild/SPECS</td>
<td>存放SPEC文件的目录(重要)</td>
<td>%_specdir</td>
</tr>
<tr>
<td>~/rpmbuild/SRPMS</td>
<td>软件最终的rpm源码格式存放路径(暂时忽略掉，别挂在心上)</td>
<td>%_srcrpmdir</td>
</tr>
</tbody>
</table>
<h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><ol>
<li>源代码放在<code>%_sourcedir</code>下,一般是<code>.tar.gz</code>之类,或文件</li>
<li>编译,在<code>%_builddir</code>中进行,源码包解压后复制到此目录即可</li>
<li>安装,把软件包应该包含的内容（比如二进制文件、配置文件、man文档等）复制到<code>%_buildrootdir</code>中，并按照实际安装后的目录结构组装，比如二进制命令可能会放在<code>/usr/bin</code>下，那么就在<code>%_buildrootdir</code>下也按照同样的目录结构放置</li>
<li>配置,安装前,中,后,的一些工作,以及卸载前的工作.</li>
<li>检测,软件是否正常运行. 可选</li>
<li>生成rpm包,放到<code>%_rpmdir</code>下</li>
</ol>
<p>以上流程均是通过编写SPEC文件进行操作.</p>
<table>
<thead>
<tr>
<th>阶段</th>
<th>读取的目录</th>
<th>写入的目录</th>
<th>具体动作</th>
</tr>
</thead>
<tbody>
<tr>
<td>%prep</td>
<td>%_sourcedir</td>
<td>%_builddir</td>
<td>读取位于 %_sourcedir 目录的源代码和 patch 。之后，解压源代码至 %_builddir 的子目录并应用所有 patch</td>
</tr>
<tr>
<td>%build</td>
<td>%_builddir</td>
<td>%_builddir</td>
<td>编译位于 %_builddir 构建目录下的文件。通过执行类似 ./configure &amp;&amp; make 的命令实现</td>
</tr>
<tr>
<td>%install</td>
<td>%_builddir</td>
<td>%_buildrootdir</td>
<td>读取位于 %_builddir 构建目录下的文件并将其安装至 %_buildrootdir 目录。这些文件就是用户安装 RPM 后，最终得到的文件。注意一个奇怪的地方: 最终安装目录 不是 构建目录。通过执行类似 make install 的命令实现</td>
</tr>
<tr>
<td>%check</td>
<td>%_builddir</td>
<td>%_builddir</td>
<td>检查软件是否正常运行。通过执行类似 make test 的命令实现。很多软件包都不需要此步。</td>
</tr>
<tr>
<td>bin</td>
<td>%_buildrootdir</td>
<td>%_rpmdir</td>
<td>读取位于 %_buildrootdir 最终安装目录下的文件，以便最终在 %_rpmdir 目录下创建 RPM 包。在该目录下，不同架构的 RPM 包会分别保存至不同子目录， noarch 目录保存适用于所有架构的 RPM 包。这些 RPM 文件就是用户最终安装的 RPM 包。</td>
</tr>
<tr>
<td>src</td>
<td>%_sourcedir</td>
<td>%_srcrpmdir</td>
<td>创建源码 RPM 包（简称 SRPM，以.src.rpm 作为后缀名），并保存至 %_srcrpmdir 目录。SRPM 包通常用于审核和升级软件包。</td>
</tr>
</tbody>
</table>
<h4 id="SPEC"><a href="#SPEC" class="headerlink" title="SPEC"></a>SPEC</h4><p>zabbix agentd rpm包构建参考<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">%define zabbix_user zabbix                  </span><br><span class="line">#自定义宏，名字为zabbix_user值为zabbix,%&#123;zabbix_user&#125;引用</span><br><span class="line"></span><br><span class="line">Name:   zabbix                              </span><br><span class="line">#软件包的名字，后面可用%&#123;name&#125;引用</span><br><span class="line"></span><br><span class="line">Version:    3.0.14                           </span><br><span class="line">#软件的实际版本号，可使用%&#123;version&#125;引用</span><br><span class="line"></span><br><span class="line">Release:    1%&#123;?dist&#125;                       </span><br><span class="line">#发布序列号，标明第几次打包  </span><br><span class="line"></span><br><span class="line">Summary:    zabbix_agentd                   </span><br><span class="line">#软件包内容概要</span><br><span class="line"></span><br><span class="line">Group:      zabbix                          </span><br><span class="line">#软件包分组</span><br><span class="line"></span><br><span class="line">License:    GPL</span><br><span class="line">#授权许可方式</span><br><span class="line"></span><br><span class="line">URL:        blog.dl1548.com</span><br><span class="line">#软件的主页</span><br><span class="line"></span><br><span class="line">#源代码包，可以有Source0,Source1等源,对应%install下</span><br><span class="line">Source0:    zabbix-3.0.14.tar.gz</span><br><span class="line">Source1:    discover_disk.pl</span><br><span class="line">Source2:    tcp_conn_status.sh</span><br><span class="line">Source3:    zbx_parse_iostat_values.sh</span><br><span class="line">Source4:    tcp-status-params.conf</span><br><span class="line">Source5:    zbx_parse_iostat_values.conf</span><br><span class="line"></span><br><span class="line">BuildRequires:      net-tools</span><br><span class="line">#gcc, gcc-c++            </span><br><span class="line">#制作rpm包时，所依赖的基本库</span><br><span class="line"></span><br><span class="line">Requires:      net-tools</span><br><span class="line">#gcc, gcc-c++       </span><br><span class="line">#安装rpm包时，所依赖的软件包</span><br><span class="line"></span><br><span class="line">#BuildRoot: %&#123;_tmpdir&#125;/%&#123;name&#125;-%&#123;version&#125;-%&#123;release&#125;</span><br><span class="line">#构建包的临时文件路径.centos5 不写会报错</span><br><span class="line"></span><br><span class="line">%description                                </span><br><span class="line">#定义rpm包的描述信息</span><br><span class="line">Zabbix agentd</span><br><span class="line">creata by jingkunsystem-lizili</span><br><span class="line"></span><br><span class="line">%pre                                        </span><br><span class="line">#rpm包安装前执行的脚本</span><br><span class="line">grep zabbix /etc/passwd &gt; /dev/null</span><br><span class="line">if [ $? != 0 ] </span><br><span class="line">then useradd zabbix -M -s /sbin/nologin</span><br><span class="line">fi</span><br><span class="line">[ -d /usr/local/zabbix ]||rm -rf /usr/local/zabbix*</span><br><span class="line">rm -rf /etc/zabbix*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%post                                       </span><br><span class="line">#rpm包安装后执行的脚本</span><br><span class="line"></span><br><span class="line">sed -i &quot;/BASEDIR=\/usr\/local/c\BASEDIR=\/usr\/local\/%&#123;name&#125;&quot; /etc/init.d/zabbix_agentd</span><br><span class="line"></span><br><span class="line">%preun                                      </span><br><span class="line">#rpm卸载前执行的脚本</span><br><span class="line">/etc/init.d/zabbix_agentd stop</span><br><span class="line"></span><br><span class="line">%postun                                     </span><br><span class="line">#rpm卸载后执行的脚本</span><br><span class="line">userdel  zabbix</span><br><span class="line">rm -rf /usr/local/zabbix*</span><br><span class="line"></span><br><span class="line">%prep</span><br><span class="line"></span><br><span class="line">%setup -q                                   </span><br><span class="line"></span><br><span class="line">%build                                      </span><br><span class="line">#定义编译软件包时的操作</span><br><span class="line">./configure --prefix=/usr/local/%&#123;name&#125;  --enable-agent</span><br><span class="line">make -j8 %&#123;?_smp_mflags&#125;</span><br><span class="line"></span><br><span class="line">%install                                    </span><br><span class="line">#定义安装软件包，使用默认值即可</span><br><span class="line">test -L %&#123;buildroot&#125;/usr/local/%&#123;name&#125; &amp;&amp; rm -f %&#123;buildroot&#125;/usr/local/%&#123;name&#125;</span><br><span class="line">install -d %&#123;buildroot&#125;/etc/profile.d</span><br><span class="line">install -d %&#123;buildroot&#125;/etc/init.d</span><br><span class="line">make install DESTDIR=%&#123;buildroot&#125;</span><br><span class="line"></span><br><span class="line">#其他脚本</span><br><span class="line">install -p -D -m 0755 %&#123;SOURCE1&#125;        %&#123;buildroot&#125;/usr/local/%&#123;name&#125;/lib/discover_disk.pl</span><br><span class="line">install -p -D -m 0755 %&#123;SOURCE2&#125;        %&#123;buildroot&#125;/usr/local/%&#123;name&#125;/lib/tcp_conn_status.sh</span><br><span class="line">install -p -D -m 0755 %&#123;SOURCE3&#125;        %&#123;buildroot&#125;/usr/local/%&#123;name&#125;/lib/zbx_parse_iostat_values.sh</span><br><span class="line">#其他配置文件</span><br><span class="line">install -p -D -m 0755 %&#123;SOURCE4&#125;        %&#123;buildroot&#125;/usr/local/%&#123;name&#125;/etc/zabbix_agentd.conf.d/tcp-status-params.conf</span><br><span class="line">install -p -D -m 0755 %&#123;SOURCE5&#125;        %&#123;buildroot&#125;/usr/local/%&#123;name&#125;/etc/zabbix_agentd.conf.d/zbx_parse_iostat_values.conf</span><br><span class="line"></span><br><span class="line">echo &apos;export PATH=/etc/zabbix/bin:/etc/zabbix/sbin:$PATH&apos; &gt;&gt; %&#123;buildroot&#125;/etc/profile.d/%&#123;name&#125;.sh</span><br><span class="line">cp %&#123;_builddir&#125;/%&#123;name&#125;-%&#123;version&#125;/misc/init.d/fedora/core/zabbix_agentd       %&#123;buildroot&#125;/etc/init.d/zabbix_agentd</span><br><span class="line"></span><br><span class="line">%files</span><br><span class="line">%defattr (-,root,root,0755)                                      </span><br><span class="line">#定义rpm包安装时创建的相关目录及文件</span><br><span class="line">#在该选项中%defattr (-,root,root)一定要注意。它是指定安装文件的属性，分别是(mode,owner,group)，-表示默认值，对文本文件是0644，可执行文件是0755。</span><br><span class="line">/usr/local/%&#123;name&#125;/*</span><br><span class="line">/usr/local/zabbix/lib/*</span><br><span class="line">/usr/local/zabbix/etc/zabbix_agentd.conf.d/*</span><br><span class="line">/etc/init.d/zabbix_agentd</span><br><span class="line">/etc/profile.d/%&#123;name&#125;.sh</span><br><span class="line"></span><br><span class="line">%changelog                                  </span><br><span class="line">#主要用于软件的变更日志。该选项可有可无</span><br><span class="line"></span><br><span class="line">%clean </span><br><span class="line">rm -rf %&#123;buildroot&#125;                         </span><br><span class="line">#清理临时文件</span><br></pre></td></tr></table></figure></p>
<h4 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h4><p>在<code>SPECS</code>文件夹下执行.<br><code>rpmbuild -bb xxx.spec</code>即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-ba 既生成src.rpm又生成二进制rpm </span><br><span class="line">-bs 只生成src的rpm </span><br><span class="line">-bb 只生二进制的rpm </span><br><span class="line">-bp 执行到pre </span><br><span class="line">-bc 执行到 build段 </span><br><span class="line">-bi 执行install段 </span><br><span class="line">-bl 检测有文件没包含</span><br></pre></td></tr></table></figure>
<p>可以先<code>rpmbuild -bp</code>,再<code>-bc</code> 再<code>-bi</code>如果没问题<code>rpmbuild -bb/ba</code>生成二进制包或两个都生成</p>
<p>脚本参考(主要针对centos7 内核)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#/usr/bin/bash</span><br><span class="line">#ip= ip addr |grep inet |egrep -v &quot;inet6|127.0.0.1&quot; |awk &apos;&#123;print $2&#125;&apos; |awk -F &quot;/&quot; &apos;&#123;print $1&#125;&apos;</span><br><span class="line"></span><br><span class="line"># get server ip</span><br><span class="line"></span><br><span class="line">echo -e &quot;\n NOTICE! Check the package net-tools is installed \n &quot;</span><br><span class="line">read -p  &quot;zabbix server ip：&quot; zabbix_server</span><br><span class="line">if [ ! -n &quot;$zabbix_server&quot; ]; then</span><br><span class="line">    echo &quot;you have not input server ip, exit&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># get agent ip</span><br><span class="line">read -p  &quot;local ip: &quot; local_ip</span><br><span class="line">if [ ! -n &quot;$local_ip&quot; ]; then</span><br><span class="line">    echo &quot;you have not input local ip, exit&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;start to install...&quot;</span><br><span class="line">sleep 1</span><br><span class="line">#version centos7</span><br><span class="line">#cat /etc/*release | egrep -i &quot;centos|rhel|red hat|redhat&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;check os version...&quot;</span><br><span class="line">sleep 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#version centos7</span><br><span class="line">cat /etc/*release | grep -q -i &quot;centos\|rhel\|red hat\|redhat&quot;</span><br><span class="line">if [[ $? -eq 0 ]];then</span><br><span class="line">    cat /etc/*release | grep -q -i &quot;7\.&quot;</span><br><span class="line">    if [[ $? -eq 0 ]];then</span><br><span class="line">        sleep 1</span><br><span class="line">        rpm -ivh zabbix-3.0.14-1.el7.centos.x86_64.rpm</span><br><span class="line">        echo &quot;modify the agentd configuration&quot;</span><br><span class="line">        sleep 1</span><br><span class="line">        sed -i &quot;/^Server=/c\Server=$&#123;zabbix_server&#125;&quot; /usr/local/zabbix/etc/zabbix_agentd.conf</span><br><span class="line">        sed -i &quot;/^ServerActive=/c\ServerActive=$&#123;zabbix_server&#125;&quot; /usr/local/zabbix/etc/zabbix_agentd.conf</span><br><span class="line">        sed -i &quot;/^Hostname=/c\Hostname=$&#123;local_ip&#125;&quot; /usr/local/zabbix/etc/zabbix_agentd.conf</span><br><span class="line">        sed -i &quot;/Timeout=3/c\Timeout=30&quot; /usr/local/zabbix/etc/zabbix_agentd.conf</span><br><span class="line">        sed -i &quot;260i\Include=/usr/local/zabbix/etc/zabbix_agentd.conf.d/*.conf&quot; /usr/local/zabbix/etc/zabbix_agentd.conf</span><br><span class="line">        systemctl daemon-reload</span><br><span class="line">        /etc/init.d/zabbix_agentd start</span><br><span class="line">        chkconfig zabbix_agentd on</span><br><span class="line">        echo &quot;SUCCESSFUL !&quot;</span><br><span class="line">        exit</span><br><span class="line">    fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> rpm </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ldap-zbx单点登录]]></title>
      <url>/2018/01/21/ldapsearch/</url>
      <content type="html"><![CDATA[<p>LDAP认证系统可再多系统间实现单点登录，免去多账户的烦恼。</p>
<a id="more"></a>
<p>由于zabbix要实现单点登录，因此而学习了下。<br>zbx本身支持ldap认证，但要求zbx本身账户内用户存在并和LDAP用户名一致，所以要取出LDAP用户并插入zbx</p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><a href="https://www.zabbix.com/documentation/3.4/manual/web_interface/frontend_sections/administration/authentication" target="_blank" rel="noopener">官方描述</a><br>zabbix管理–认证–LDAP，填写如下</p>
<table>
<thead>
<tr>
<th style="text-align:left">描述</th>
<th style="text-align:left">内容</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">LDAP主机(LDAP host)</td>
<td style="text-align:left">ldap://192.168.1.99</td>
</tr>
<tr>
<td style="text-align:left">端口(Port)</td>
<td style="text-align:left">389</td>
</tr>
<tr>
<td style="text-align:left">基于DN(Base DN)</td>
<td style="text-align:left">DC=zbx,DC=comLDAP</td>
</tr>
<tr>
<td style="text-align:left">搜索属性(Search attribute)</td>
<td style="text-align:left">sAMAccountName</td>
</tr>
<tr>
<td style="text-align:left">绑定 DN(Bind DN)</td>
<td style="text-align:left">cn=Admin,ou=zabbix,dc=zbx,dc=com</td>
</tr>
<tr>
<td style="text-align:left">绑定密码(Bind password)</td>
<td style="text-align:left">不进行任何操作</td>
</tr>
<tr>
<td style="text-align:left">测试认证(Test authentication)</td>
<td style="text-align:left">[必需为一个正确的LDAP用户]</td>
</tr>
<tr>
<td style="text-align:left">登录(Login)</td>
<td style="text-align:left">默认为当前登录用户</td>
</tr>
<tr>
<td style="text-align:left">用户密码(User password)</td>
<td style="text-align:left">当前用户密码</td>
</tr>
</tbody>
</table>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>yum -y install openldap-clients</p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>查找某用户信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# ldapsearch -x -W -D &quot;cn=administrator,cn=users,dc=zbx,dc=com&quot; -b &quot;cn=administrator,cn=users,dc=zbx,dc=com&quot; -h 192.168.1.xx</span><br><span class="line">Enter LDAP Password: </span><br><span class="line"># extended LDIF</span><br><span class="line">#</span><br><span class="line"># LDAPv3</span><br><span class="line"># base &lt;cn=administrator,cn=users,dc=zbx,dc=com&gt; with scope subtree</span><br><span class="line"># filter: (objectclass=*)</span><br><span class="line"># requesting: ALL</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"># Administrator, Users, zbx.com</span><br><span class="line">dn: CN=Administrator,CN=Users,DC=zbx,DC=com</span><br><span class="line">objectClass: top</span><br><span class="line">objectClass: person</span><br><span class="line">objectClass: organizationalPerson</span><br><span class="line">objectClass: user</span><br><span class="line">cn: Administrator</span><br><span class="line">description:: 566h55CG6K6h566X5py6KOWfnynnmoTlhoXnva7luJDmiLc=</span><br><span class="line">distinguishedName: CN=Administrator,CN=Users,DC=zbx,DC=com</span><br><span class="line">instanceType: 4</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>查找ou下的用户信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix openldap]# ldapsearch -H ldap://192.168.1.xx -x -D &quot;cn=Admin,ou=zabbix,dc=zbx,dc=com&quot; -b &quot;ou=zabbix,dc=zbx,dc=com&quot; -W -LLL | grep sAMAccountName </span><br><span class="line">Enter LDAP Password: </span><br><span class="line">sAMAccountName: zabbix-group</span><br><span class="line">sAMAccountName: test01</span><br><span class="line">sAMAccountName: Admin</span><br><span class="line">[root@zabbix openldap]#</span><br></pre></td></tr></table></figure></p>
<h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><p>可自己编写脚本，执行相关命令，处理返回结果等。但是太过于繁杂。目前py有模块可用，python-ldap<br>此次脚本测试为LDAP是MS的AD环境。<br>安装模块环境：<br>Debian/Ubuntu:<br><code>sudo apt-get install libsasl2-dev python-dev libldap2-dev libssl-dev</code><br>RedHat/CentOS:<br><code>yum -y install python-devel libevent-devel openldap-devel</code><br>安装模块<br><code>pip install gevent python-ldap</code></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]<span class="comment"># cat get_ldap.py </span></span><br><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> ldap</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LdapToZbx</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,ldap_url,domain_name,admin_user,admin_pwd)</span>:</span></span><br><span class="line">        self.ldap_url = ldap_url</span><br><span class="line">        self.domain_name = domain_name</span><br><span class="line">        self.admin_user = admin_user</span><br><span class="line">        self.admin_pwd = admin_pwd</span><br><span class="line">        ldap_user = <span class="string">'%s@%s'</span> %(admin_user,domain_name)</span><br><span class="line">        self.con = ldap.initialize(ldap_url) <span class="comment">#初始连接</span></span><br><span class="line">        self.con.protocol_version = ldap.VERSION3 <span class="comment">#LDAP 版本</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.con.simple_bind_s(ldap_user,admin_pwd)</span><br><span class="line">        <span class="keyword">except</span> ldap.LDAPError,err:</span><br><span class="line">            self.ldap_error = <span class="string">'Connect to %s failed, Error:%s.'</span> %(ldap_url,err.message[<span class="string">'desc'</span>])</span><br><span class="line">            <span class="keyword">print</span> self.ldap_error</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_ou_guid</span><span class="params">(self,baseDN)</span>:</span></span><br><span class="line">        searchFilter = <span class="string">'(&amp;(objectClass=OrganizationalUnit))'</span></span><br><span class="line">        results = self.con.search_s(baseDN,ldap.SCOPE_SUBTREE,searchFilter,[<span class="string">'distinguishedName'</span>,<span class="string">'objectGUID'</span>])</span><br><span class="line">        <span class="comment">#return results</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> results:</span><br><span class="line">            <span class="keyword">if</span> i[<span class="number">0</span>] == baseDN:</span><br><span class="line">                <span class="keyword">return</span> i[<span class="number">1</span>][<span class="string">'objectGUID'</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">#SCOPE_BASE (基数：查询指定DN，也就是在DN中指定的那个，就只查这DN的)</span></span><br><span class="line">        <span class="comment">#SCOPE_ONELEVEL (一级：查询指定DN下的一级子目录，不会查子目录的子目录)</span></span><br><span class="line">        <span class="comment">#SCOPE_SUBTREE (子树：查询指定DN下的所有目录，包括指定DN)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search_ou_user</span><span class="params">(self,baseDN)</span>:</span></span><br><span class="line">        user_list=[]</span><br><span class="line">        searchFilter = <span class="string">'(&amp;(objectClass=person))'</span> <span class="comment">#只查找objectClass=person的</span></span><br><span class="line">        results = self.con.search_s(baseDN,ldap.SCOPE_SUBTREE,searchFilter)</span><br><span class="line">        <span class="keyword">if</span> results <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">for</span> person <span class="keyword">in</span> results:</span><br><span class="line">                username = person[<span class="number">1</span>][<span class="string">'sAMAccountName'</span>][<span class="number">0</span>]</span><br><span class="line">                user_list.append(username)</span><br><span class="line">            <span class="keyword">return</span> user_list</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:                </span><br><span class="line">    ldap_url = <span class="string">'ldap://192.168.1.xx:389'</span></span><br><span class="line">    domain_name = <span class="string">u'zbx.com'</span></span><br><span class="line">    admin_user = <span class="string">u'administrator'</span></span><br><span class="line">    admin_pwd = <span class="string">u'xxxxxxx'</span></span><br><span class="line"></span><br><span class="line">    baseDN = <span class="string">u'ou=zabbix,dc=zbx,dc=com'</span></span><br><span class="line"></span><br><span class="line">    ldap_user =  LdapToZbx(ldap_url,domain_name,admin_user,admin_pwd)</span><br><span class="line">    user = ldap_user.search_ou_user(baseDN)    </span><br><span class="line">    <span class="keyword">print</span> user</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行结果</span></span><br><span class="line">[root@zabbix ~]<span class="comment"># python get_ldap.py </span></span><br><span class="line">[<span class="string">'test01'</span>, <span class="string">'Admin'</span>]</span><br></pre></td></tr></table></figure>
<p>后续调用zbx接口，将用户插入进去，即可完成LDAP单点登录。<br>安装<code>requests</code> </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Zbx</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#auth=None</span></span><br><span class="line">    zbx_host=<span class="string">'ipaddr'</span></span><br><span class="line">    api_url=<span class="string">"http://%s/zabbix/api_jsonrpc.php"</span>%zbx_host</span><br><span class="line">    __user=<span class="string">"username"</span></span><br><span class="line">    __password=<span class="string">"password"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,zbx_host=zbx_host,api_url=api_url,user=__user,password=__password)</span>:</span></span><br><span class="line">        self.user=user</span><br><span class="line">        self.password=password</span><br><span class="line">        self.zbx_host=password</span><br><span class="line">        self.api_url=api_url</span><br><span class="line">    <span class="comment">#登录，获取auth   </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self)</span>:</span></span><br><span class="line">        data = &#123;<span class="string">"jsonrpc"</span>:<span class="string">"2.0"</span>,<span class="string">"method"</span>:<span class="string">"user.login"</span>,<span class="string">"params"</span>:&#123;<span class="string">"user"</span>:self.user,<span class="string">"password"</span>:self.password&#125;,<span class="string">"id"</span>:<span class="number">0</span>&#125;</span><br><span class="line">        headers=&#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            req = requests.post(self.api_url,data=json.dumps(data),headers=headers,timeout=<span class="number">3</span>)</span><br><span class="line">            self.auth = req.json()[<span class="string">"result"</span>]</span><br><span class="line">            <span class="comment">#print(self.auth)</span></span><br><span class="line">            <span class="keyword">return</span> self.auth</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Get auth error"</span></span><br><span class="line">    <span class="comment">#获取指定组id</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_usrgrpid</span><span class="params">(self,groupname)</span>:</span></span><br><span class="line">        self.login()</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"usergroup.get"</span>,</span><br><span class="line">            <span class="string">"params"</span>: &#123;</span><br><span class="line">                <span class="string">"output"</span>: <span class="string">"extend"</span>,</span><br><span class="line">                <span class="string">"filter"</span>:&#123;</span><br><span class="line">                    <span class="string">"name"</span>:groupname</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"status"</span>: <span class="number">0</span></span><br><span class="line">                &#125;,</span><br><span class="line">            <span class="string">"auth"</span>: self.auth,</span><br><span class="line">            <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            req = requests.post(self.api_url, data=json.dumps(data), headers=&#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json-rpc"</span>&#125;,</span><br><span class="line">                                timeout=<span class="number">5</span>)</span><br><span class="line">            res_json=req.json()</span><br><span class="line">            <span class="comment">#print res_json</span></span><br><span class="line">            <span class="keyword">return</span> res_json[<span class="string">'result'</span>][<span class="number">0</span>][<span class="string">'usrgrpid'</span>]</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> exc:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'connect error'</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#创建用户</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_user</span><span class="params">(self,username,groupname)</span>:</span></span><br><span class="line">        self.login()</span><br><span class="line">        group_id=self.get_usrgrpid(groupname)</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"user.create"</span>,</span><br><span class="line">            <span class="string">"params"</span>: &#123;</span><br><span class="line">                <span class="string">"alias"</span>: username,</span><br><span class="line">                <span class="string">"passwd"</span>: <span class="string">""</span>,</span><br><span class="line">                <span class="string">"usrgrps"</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="string">"usrgrpid"</span>: group_id</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"auth"</span>: self.auth,</span><br><span class="line">            <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            req = requests.post(self.api_url, data=json.dumps(data), headers=&#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json-rpc"</span>&#125;,</span><br><span class="line">                                timeout=<span class="number">5</span>)</span><br><span class="line">            res_json=req.json()</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> exc:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'connect error'</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#获取用户列表</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_userlist</span><span class="params">(self)</span>:</span></span><br><span class="line">        user_list=[]</span><br><span class="line">        self.login()</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"user.get"</span>,</span><br><span class="line">            <span class="string">"params"</span>: &#123;</span><br><span class="line">                <span class="string">"output"</span>: <span class="string">"extend"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"auth"</span>: self.auth,</span><br><span class="line">            <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            req = requests.post(self.api_url, data=json.dumps(data), headers=&#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json-rpc"</span>&#125;,</span><br><span class="line">                                timeout=<span class="number">5</span>)</span><br><span class="line">            res_json=req.json()</span><br><span class="line">            get_info = res_json[<span class="string">'result'</span>]</span><br><span class="line">            <span class="comment">#get_info = res_json['result'][0]['alias']</span></span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; get_info.__len__():</span><br><span class="line">                user_list.append(get_info[i][<span class="string">'alias'</span>])</span><br><span class="line">                i+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'guest'</span> <span class="keyword">in</span> user_list:</span><br><span class="line">                user_list.remove(<span class="string">'guest'</span>)</span><br><span class="line">            <span class="keyword">return</span> user_list</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> exc:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'connect error'</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#获取用户ID</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_userid</span><span class="params">(self,username)</span>:</span></span><br><span class="line">        self.login()</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"user.get"</span>,</span><br><span class="line">            <span class="string">"params"</span>: &#123;</span><br><span class="line">                <span class="string">"output"</span>: <span class="string">"extend"</span>,</span><br><span class="line">                <span class="string">"filter"</span>:&#123;</span><br><span class="line">                    <span class="string">"alias"</span>:username</span><br><span class="line">                &#125;,</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"auth"</span>: self.auth,</span><br><span class="line">            <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            req = requests.post(self.api_url, data=json.dumps(data), headers=&#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json-rpc"</span>&#125;,</span><br><span class="line">                                timeout=<span class="number">5</span>)</span><br><span class="line">            res_json=req.json()</span><br><span class="line">            userid = res_json[<span class="string">'result'</span>][<span class="number">0</span>][<span class="string">'userid'</span>]</span><br><span class="line">            <span class="keyword">return</span> userid</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> exc:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'connect error'</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#删除用户</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">del_user</span><span class="params">(self,username)</span>:</span></span><br><span class="line">        self.login()</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">            <span class="string">"method"</span>: <span class="string">"user.delete"</span>,</span><br><span class="line">            <span class="string">"params"</span>: [</span><br><span class="line">                self.get_userid(username),</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"auth"</span>: self.auth,</span><br><span class="line">            <span class="string">"id"</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            req = requests.post(self.api_url, data=json.dumps(data), headers=&#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json-rpc"</span>&#125;,</span><br><span class="line">                                timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> exc:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'connect error'</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>调用<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> moudle <span class="keyword">import</span> get_ldap</span><br><span class="line"><span class="keyword">from</span> moudle <span class="keyword">import</span> zbx</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment">#ldap相关信息，根据实际情况修改</span></span><br><span class="line">ldap_url = <span class="string">'ldap://192.xxx.1.x:389'</span></span><br><span class="line">domain_name = <span class="string">u'zbx.com'</span></span><br><span class="line">ldap_user = <span class="string">u'xxxxx'</span></span><br><span class="line">ldap_pwd = <span class="string">u'xxxxxxxxxx'</span></span><br><span class="line"><span class="comment">#ou的层级  1：没有层级，直接写。2：有层级则从内到外开始写多个ou.注意大小写</span></span><br><span class="line">baseDN = <span class="string">'OU=zabbix,DC=zbx,DC=com'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取ldap user列表</span></span><br><span class="line">ldap_conn = get_ldap.LdapToZbx(ldap_url,domain_name,ldap_user,ldap_pwd)</span><br><span class="line">ldap_user_list = ldap_conn.search_ou_user(baseDN)</span><br><span class="line"><span class="comment">#print ldap_user_list</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#zabbix相关信息,根据实际情况修改a</span></span><br><span class="line">zbx_host=<span class="string">'192.xxx.1.xxx'</span></span><br><span class="line">api_url=<span class="string">"http://%s/zabbix/api_jsonrpc.php"</span>%zbx_host</span><br><span class="line">zbx_user=<span class="string">"Admin"</span></span><br><span class="line">zbx_pwd=<span class="string">"xxxxxxxxxxx"</span></span><br><span class="line">groupname = <span class="string">'ldap'</span> <span class="comment">#新加zabbix用户分配到的组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">zbx = zbx.Zbx(zbx_host,api_url,zbx_user,zbx_pwd)</span><br><span class="line">zbx_user_list = zbx.get_userlist()</span><br><span class="line"><span class="comment">#print zbx_user_list</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户</span></span><br><span class="line"><span class="keyword">for</span> username <span class="keyword">in</span> ldap_user_list:</span><br><span class="line">    <span class="keyword">if</span> username <span class="keyword">not</span> <span class="keyword">in</span> zbx_user_list:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            zbx.create_user(username,groupname)</span><br><span class="line">            date=time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>,time.localtime(time.time()))</span><br><span class="line">            <span class="keyword">print</span> date + <span class="string">" add user "</span> + username</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'connect error'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除用户</span></span><br><span class="line"><span class="keyword">for</span> username <span class="keyword">in</span> zbx_user_list:</span><br><span class="line">    <span class="keyword">if</span> username <span class="keyword">not</span> <span class="keyword">in</span> ldap_user_list:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            zbx.del_user(username)</span><br><span class="line">            date=time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>,time.localtime(time.time()))</span><br><span class="line">            <span class="keyword">print</span> date + <span class="string">" remove user "</span> + username</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'connect error'</span></span><br></pre></td></tr></table></figure></p>
<p><code>ImportError: No module named &#39;requests.packages.urllib3&#39;</code></p>
<p>执行<br><code>pip install requests  --force --upgrade</code></p>
<p>or</p>
<p><code>pip install requests urllib3 --force --upgrade</code></p>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>当ldap挂了的时候,可通过修改数据库进行切换本地认证.<br>当然,也可以通过,直接修改数据库进行认证的切换.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use zabbix;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">#用户和认证的信息涉及到四个表，分别是表config、users、users_groups、usrgrp</span><br><span class="line">#只用config表来配置认证切换</span><br><span class="line">mysql&gt; desc config;</span><br><span class="line"></span><br><span class="line">#认证类型由 authentication_type，字段决定，值可以为0,1和2</span><br><span class="line">#0 代表Internal,1代表LDAP，2代表HTTP.</span><br><span class="line"></span><br><span class="line">mysql&gt; update config set authentication_type=0;</span><br><span class="line">#即可切换为系统认证方式</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line"></span><br><span class="line">#穿插:修改用管理员密码的命令</span><br><span class="line">#查询Admin用户的ID:</span><br><span class="line">mysql&gt; select * from users;</span><br><span class="line">#修改admin密码</span><br><span class="line">mysql&gt; update users set passwd=&apos;zabbix&apos; where userid=????;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#切换LDAP信息,更换相关信息等.</span><br><span class="line"></span><br><span class="line">use zabbix;</span><br><span class="line"></span><br><span class="line">update config set authentication_type=1,ldap_host=&apos;ldap://192.168.1.xx&apos;,ldap_port=&apos;389&apos;,ldap_base_dn=&apos;DC=zbx,DC=com&apos;,ldap_bind_dn=&apos;cn=Admin,ou=zabbix,dc=zbx,dc=com&apos;,ldap_search_attribute=&apos;sAMAccountName&apos;,ldap_bind_password=&apos;xxxxxxxxx&apos;;</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ldap </tag>
            
            <tag> python </tag>
            
            <tag> zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ipmi]]></title>
      <url>/2018/01/21/ipmi/</url>
      <content type="html"><![CDATA[<p>IPMI(Intelligent Platform Management Interface) 是独立于物理服务器CPU，电源，存储等独立工作的管理工具。其需要进入BISO先行设置。<br>IPMI可监控服务器的物理状态，如温度、电压、电扇、电源等，以及一些远程管控等<br>默认端口是623，UDP协议<br><a id="more"></a></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>centos环境下<br><code>yum -y install ipmitool</code><br>也可以下载<code>ipmitool-version.tar.gz</code> 解压后<code>./configure &amp;&amp; make &amp;&amp; make install</code><br><code>service ipmi start</code><br>执行 内核加载,另：虚机不存在<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># modprobe ipmi_watchdog</span></span><br><span class="line">[root@localhost ~]<span class="comment"># modprobe ipmi_poweroff</span></span><br><span class="line">[root@localhost ~]<span class="comment"># modprobe ipmi_devintf</span></span><br><span class="line">[root@localhost ~]<span class="comment"># modprobe ipmi_si</span></span><br><span class="line">[root@localhost ~]<span class="comment"># modprobe ipmi_msghandler</span></span><br></pre></td></tr></table></figure></p>
<p>查资料显示服务器 <code>第一块网卡</code> <code>第一个口</code> 接<code>交换机</code>，默认这个口集成了IPMI，目前dell如此。<br>其他厂商可能会有变，使用前请确认，并去<code>BIOS</code>开启。网口启动与否并不影响使用。</p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>远程获取服务器监控信息时，需要加上远程服务器的地址：<br><code>ipmitool -I lanplus -H ipaddress -U username -P password command</code><br><code>-H</code>表示后面跟的是服务器的地址<br><code>-U</code>表示后面跟着用户名<br><code>-P</code>表示后面跟着用户密码<br><code>command</code>命令</p>
<h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">$ ipmitool -h</span><br><span class="line"></span><br><span class="line">usage: ipmitool [options...] &lt;command&gt;</span><br><span class="line"></span><br><span class="line">       -h             This help</span><br><span class="line">       -V             Show version information</span><br><span class="line">       -v             Verbose (can use multiple times)</span><br><span class="line">       -c             Display output in comma separated format</span><br><span class="line">       -d N           Specify a /dev/ipmiN device to use (default=0)</span><br><span class="line">       -I intf        Interface to use</span><br><span class="line">       -H hostname    Remote host name for LAN interface</span><br><span class="line">       -p port        Remote RMCP port [default=623]</span><br><span class="line">       -U username    Remote session username</span><br><span class="line">       -f file        Read remote session password from file</span><br><span class="line">       -z size        Change Size of Communication Channel (OEM)</span><br><span class="line">       -S sdr         Use local file for remote SDR cache</span><br><span class="line">       -D tty:b[:s]   Specify the serial device, baud rate to use</span><br><span class="line">                      and, optionally, specify that interface is the system one</span><br><span class="line">       -a             Prompt for remote password</span><br><span class="line">       -Y             Prompt for the Kg key for IPMIv2 authentication</span><br><span class="line">       -e char        Set SOL escape character</span><br><span class="line">       -C ciphersuite Cipher suite to be used by lanplus interface</span><br><span class="line">       -k key         Use Kg key for IPMIv2 authentication</span><br><span class="line">       -y hex_key     Use hexadecimal-encoded Kg key for IPMIv2 authentication</span><br><span class="line">       -L level       Remote session privilege level [default=ADMINISTRATOR]</span><br><span class="line">                      Append a &apos;+&apos; to use name/privilege lookup in RAKP1</span><br><span class="line">       -A authtype    Force use of auth type NONE, PASSWORD, MD2, MD5 or OEM</span><br><span class="line">       -P password    Remote session password</span><br><span class="line">       -E             Read password from IPMI_PASSWORD environment variable</span><br><span class="line">       -K             Read kgkey from IPMI_KGKEY environment variable</span><br><span class="line">       -m address     Set local IPMB address</span><br><span class="line">       -b channel     Set destination channel for bridged request</span><br><span class="line">       -t address     Bridge request to remote target address</span><br><span class="line">       -B channel     Set transit channel for bridged request (dual bridge)</span><br><span class="line">       -T address     Set transit address for bridge request (dual bridge)</span><br><span class="line">       -l lun         Set destination lun for raw commands</span><br><span class="line">       -o oemtype     Setup for OEM (use &apos;list&apos; to see available OEM types)</span><br><span class="line">       -O seloem      Use file for OEM SEL event descriptions</span><br><span class="line">       -N seconds     Specify timeout for lan [default=2] / lanplus [default=1] interface</span><br><span class="line">       -R retry       Set the number of retries for lan/lanplus interface [default=4]</span><br><span class="line"></span><br><span class="line">Interfaces:</span><br><span class="line">        open          Linux OpenIPMI Interface [default]</span><br><span class="line">        imb           Intel IMB Interface </span><br><span class="line">        lan           IPMI v1.5 LAN Interface </span><br><span class="line">        lanplus       IPMI v2.0 RMCP+ LAN Interface </span><br><span class="line">        serial-terminal  Serial Interface, Terminal Mode </span><br><span class="line">        serial-basic  Serial Interface, Basic Mode </span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">        raw           Send a RAW IPMI request and print response</span><br><span class="line">        i2c           Send an I2C Master Write-Read command and print response</span><br><span class="line">        spd           Print SPD info from remote I2C device</span><br><span class="line">        lan           Configure LAN Channels</span><br><span class="line">        chassis       Get chassis status and set power state</span><br><span class="line">        power         Shortcut to chassis power commands</span><br><span class="line">        event         Send pre-defined events to MC</span><br><span class="line">        mc            Management Controller status and global enables</span><br><span class="line">        sdr           Print Sensor Data Repository entries and readings</span><br><span class="line">        sensor        Print detailed sensor information</span><br><span class="line">        fru           Print built-in FRU and scan SDR for FRU locators</span><br><span class="line">        gendev        Read/Write Device associated with Generic Device locators sdr</span><br><span class="line">        sel           Print System Event Log (SEL)</span><br><span class="line">        pef           Configure Platform Event Filtering (PEF)</span><br><span class="line">        sol           Configure and connect IPMIv2.0 Serial-over-LAN</span><br><span class="line">        tsol          Configure and connect with Tyan IPMIv1.5 Serial-over-LAN</span><br><span class="line">        isol          Configure IPMIv1.5 Serial-over-LAN</span><br><span class="line">        user          Configure Management Controller users</span><br><span class="line">        channel       Configure Management Controller channels</span><br><span class="line">        session       Print session information</span><br><span class="line">        dcmi          Data Center Management Interface</span><br><span class="line">        sunoem        OEM Commands for Sun servers</span><br><span class="line">        kontronoem    OEM Commands for Kontron devices</span><br><span class="line">        picmg         Run a PICMG/ATCA extended cmd</span><br><span class="line">        fwum          Update IPMC using Kontron OEM Firmware Update Manager</span><br><span class="line">        firewall      Configure Firmware Firewall</span><br><span class="line">        delloem       OEM Commands for Dell systems</span><br><span class="line">        shell         Launch interactive IPMI shell</span><br><span class="line">        exec          Run list of commands from file</span><br><span class="line">        set           Set runtime variable for shell and exec</span><br><span class="line">        hpm           Update HPM components using PICMG HPM.1 file</span><br><span class="line">        ekanalyzer    run FRU-Ekeying analyzer using FRU files</span><br><span class="line">        ime           Update Intel Manageability Engine Firmware</span><br></pre></td></tr></table></figure>
<h4 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h4><p>电源操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ipmitool -I lanplus -H 192.168.1.231 -U username -P password chassis power off</span><br><span class="line">ipmitool -I lanplus -H 192.168.1.231 -U username -P password chassis power reset</span><br><span class="line">ipmitool -I lanplus -H 192.168.1.231 -U username -P password chassis power on</span><br><span class="line">ipmitool -I lanplus -H 192.168.1.231 -U username -P password chassis power status</span><br></pre></td></tr></table></figure></p>
<p>版本查看<br><code>ipmitool -V</code><br>设备信息<br><code>ipmitool -I lanplus -H 192.168.1.231 -U lenovo -P lenovo chassis status</code></p>
<table>
<thead>
<tr>
<th>命令选项</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>ipmitool -I lanplus -H myserver.example.com -P mypass chassis power on</td>
<td>打开服务器的电源</td>
</tr>
<tr>
<td>ipmitool -I lanplus -H myserver.example.com -P mypass chassis power off</td>
<td>关闭服务器的电源</td>
</tr>
<tr>
<td>ipmitool -I lanplus -H myserver.example.com -P mypass chassis status</td>
<td>检查服务器状态</td>
</tr>
<tr>
<td>ipmitool -I lanplus -H myserver.example.com -P mypass chassis power cycle</td>
<td>关闭服务器的电源，然后重新打开</td>
</tr>
<tr>
<td>ipmitool -I lanplus -H myserver.example.com -P mypass sol activate  激活 SOL</td>
<td>系统控制台</td>
</tr>
<tr>
<td>ipmitool -I lanplus -H myserver.example.com -P mypass sol deactivate</td>
<td>取消激活 SOL 系统控制台</td>
</tr>
<tr>
<td>ipmitool -I lanplus -H myserver.example.com -P mypass sel list</td>
<td>返回错误日志</td>
</tr>
<tr>
<td>ipmitool -I lanplus -H myserver.example.com -P mypass sdr list</td>
<td>列示所有传感器的状态</td>
</tr>
<tr>
<td>ipmitool -I lanplus -H myserver.example.com -P mypass sol set retry-interval value</td>
<td>设置缺省重试时间间隔值（以毫秒计）</td>
</tr>
<tr>
<td>ipmitool -I lanplus -H myserver.example.com -P mypass fru print</td>
<td>打印 FRU 信息</td>
</tr>
<tr>
<td>ipmitool -I lanplus -H myserver.example.com -P mypass user list</td>
<td>列示 IPMI 用户</td>
</tr>
</tbody>
</table>
<h4 id="详细"><a href="#详细" class="headerlink" title="详细"></a>详细</h4><p>查询SDR(Print Sensor Data Repository entries and readings)传感器数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-01 ~]# ipmitool -I lanplus -H 192.168.1.231 -U lenovo -P lenovo sdr list</span><br><span class="line">CPU1 Status      | 0x00              | ok</span><br><span class="line">CPU2 Status      | 0x00              | ok</span><br><span class="line">CPU1 Temp        | 42 degrees C      | ok</span><br><span class="line">CPU2 Temp        | 57 degrees C      | ok</span><br><span class="line">DIMM Zone1 Temp  | 33 degrees C      | ok</span><br><span class="line">DIMM Zone2 Temp  | 30 degrees C      | ok</span><br><span class="line">DIMM Zone3 Temp  | 28 degrees C      | ok</span><br><span class="line">DIMM Zone4 Temp  | 31 degrees C      | ok</span><br><span class="line">PCH Temp         | 48 degrees C      | ok</span><br><span class="line">PSU Inlet Temp   | 31 degrees C      | ok</span><br><span class="line">PCI Zone1 Temp   | 36 degrees C      | ok</span><br><span class="line">PCI Zone2 Temp   | 32 degrees C      | ok</span><br><span class="line">Inlet Amb Temp   | 17 degrees C      | ok</span><br><span class="line">3.3V Standby     | 3.23 Volts        | ok</span><br><span class="line">5V Standby       | 5.00 Volts        | ok</span><br><span class="line">3.3V             | 3.23 Volts        | ok</span><br><span class="line">5V               | 5.00 Volts        | ok</span><br><span class="line">12V              | 11.96 Volts       | ok</span><br><span class="line">3V Battery       | 3.12 Volts        | ok</span><br><span class="line">12V Standby      | 11.70 Volts       | ok</span><br><span class="line">Power Reading    | 228 Watts/hour    | ok</span><br><span class="line">PSU1 Status      | 0x00              | ok</span><br><span class="line">PSU2 Status      | 0x00              | ok</span><br><span class="line">Power Unit       | 0x00              | ok</span><br><span class="line">12V Ch A Fault   | 0x00              | ok</span><br><span class="line">12V Ch B Fault   | 0x00              | ok</span><br><span class="line">12V Ch C Fault   | 0x00              | ok</span><br><span class="line">12V Ch D Fault   | 0x00              | ok</span><br><span class="line">12V Ch E Fault   | 0x00              | ok</span><br><span class="line">12V Ch F Fault   | 0x00              | ok</span><br><span class="line">Watchdog         | 0x00              | ok</span><br><span class="line">Memory ECC       | Not Readable      | ns</span><br><span class="line">BIOS Event       | Not Readable      | ns</span><br><span class="line">PCI Riser1 Temp  | 32 degrees C      | ok</span><br><span class="line">PCI Riser2 Temp  | no reading        | ns</span><br><span class="line">FAN1             | 3840 RPM          | ok</span><br><span class="line">FAN2             | 3840 RPM          | ok</span><br><span class="line">FAN3             | 3780 RPM          | ok</span><br><span class="line">FAN4             | 3840 RPM          | ok</span><br><span class="line">FAN5             | 3840 RPM          | ok</span><br><span class="line">FAN6             | 3780 RPM          | ok</span><br><span class="line">Sys Pwr Monitor  | 0x00              | ok</span><br><span class="line">[root@centos-01 ~]#</span><br></pre></td></tr></table></figure>
<p>-v 查询详细</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-01 ~]<span class="comment"># ipmitool -I lanplus -H 192.168.1.231 -U lenovo -P lenovo -v sdr list</span></span><br><span class="line">Running Get PICMG Properties my_addr 0x20, transit 0, target 0x20</span><br><span class="line">Error response 0xc1 from Get PICMG Properities</span><br><span class="line">Running Get VSO Capabilities my_addr 0x20, transit 0, target 0x20</span><br><span class="line">Invalid completion code received: Invalid <span class="built_in">command</span></span><br><span class="line">Discovered IPMB address 0x0</span><br><span class="line">Sensor ID              : CPU1 Status (0x1)</span><br><span class="line"> Entity ID             : 3.1 (Processor)</span><br><span class="line"> Sensor Type (Discrete): Processor (0x07)</span><br><span class="line"> Sensor Reading        : 0h</span><br><span class="line"> Event Message Control : Per-threshold</span><br><span class="line"> States Asserted       : Processor</span><br><span class="line">                         [Presence detected]</span><br><span class="line"> Assertion Events      : Processor</span><br><span class="line">                         [Presence detected]</span><br><span class="line"> Assertions Enabled    : Processor</span><br><span class="line">                         [Thermal Trip]</span><br><span class="line"> OEM                   : 0</span><br><span class="line"></span><br><span class="line">Sensor ID              : CPU2 Status (0x2)</span><br><span class="line"> Entity ID             : 3.2 (Processor)</span><br><span class="line"> Sensor Type (Discrete): Processor (0x07)</span><br><span class="line"> Sensor Reading        : 0h</span><br><span class="line"> Event Message Control : Per-threshold</span><br><span class="line"> States Asserted       : Processor</span><br><span class="line">                         [Presence detected]</span><br><span class="line"> Assertion Events      : Processor</span><br><span class="line">                         [Presence detected]</span><br><span class="line"> Assertions Enabled    : Processor</span><br><span class="line">                         [Thermal Trip]</span><br><span class="line"> OEM                   : 0</span><br><span class="line"></span><br><span class="line">Sensor ID              : CPU1 Temp (0x9)</span><br><span class="line"> Entity ID             : 3.1 (Processor)</span><br><span class="line"> Sensor Type (Threshold)  : Temperature (0x01)</span><br><span class="line"> Sensor Reading        : 46 (+/- 0) degrees C</span><br><span class="line"> Status                : ok</span><br><span class="line"> Nominal Reading       : 35.000</span><br><span class="line"> Upper critical        : 75.000</span><br><span class="line"> Upper non-critical    : 70.000</span><br><span class="line"> Positive Hysteresis   : Unspecified</span><br><span class="line"> Negative Hysteresis   : Unspecified</span><br><span class="line"> Minimum sensor range  : Unspecified</span><br><span class="line"> Maximum sensor range  : Unspecified</span><br><span class="line"> Event Message Control : Per-threshold</span><br><span class="line"> Readable Thresholds   : unc ucr </span><br><span class="line"> Settable Thresholds   : </span><br><span class="line"> Threshold Read Mask   : unc ucr </span><br><span class="line"> Assertion Events      : </span><br><span class="line"> Assertions Enabled    : unc+ ucr+ </span><br><span class="line"> Deassertions Enabled  : unc+ ucr+</span><br></pre></td></tr></table></figure>
<p>这里要注意<code>Sensor ID</code> 可根据其查询相关信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-01 ~]<span class="comment"># ipmitool -I lanplus -H 192.168.1.231 -U lenovo -P lenovo sdr get "CPU1 Status"</span></span><br><span class="line">Sensor ID              : CPU1 Status (0x1)</span><br><span class="line"> Entity ID             : 3.1 (Processor)</span><br><span class="line"> Sensor Type (Discrete): Processor (0x07)</span><br><span class="line"> Sensor Reading        : 0h</span><br><span class="line"> Event Message Control : Per-threshold</span><br><span class="line"> States Asserted       : Processor</span><br><span class="line">                         [Presence detected]</span><br><span class="line"> Assertion Events      : Processor</span><br><span class="line">                         [Presence detected]</span><br><span class="line"> Assertions Enabled    : Processor</span><br><span class="line">                         [Thermal Trip]</span><br><span class="line"> OEM                   : 0</span><br></pre></td></tr></table></figure>
<p>另外注意<code>Entity ID</code> ，也可根据查询相关信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-01 ~]<span class="comment"># ipmitool -I lanplus -H 192.168.1.231 -U lenovo -P lenovo sdr entity 3.1</span></span><br><span class="line">CPU1 Status      | 01h | ok  |  3.1 | Presence detected</span><br><span class="line">CPU1 Temp        | 09h | ok  |  3.1 | 43 degrees C</span><br></pre></td></tr></table></figure>
<p>这些命令可以通过帮助进行查看</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-01 ~]# ipmitool -I lanplus -H 192.168.1.231 -U lenovo -P lenovo sdr help</span><br><span class="line">usage: sdr &lt;command&gt; [options]</span><br><span class="line">               list | elist [option]</span><br><span class="line">                     all           All SDR Records</span><br><span class="line">                     full          Full Sensor Record</span><br><span class="line">                     compact       Compact Sensor Record</span><br><span class="line">                     event         Event-Only Sensor Record</span><br><span class="line">                     mcloc         Management Controller Locator Record</span><br><span class="line">                     fru           FRU Locator Record</span><br><span class="line">                     generic       Generic Device Locator Record</span><br><span class="line"></span><br><span class="line">               type [option]</span><br><span class="line">                     &lt;Sensor_Type&gt; Retrieve the state of specified sensor.</span><br><span class="line">                                   Sensor_Type can be specified either as</span><br><span class="line">                                   a string or a hex value.</span><br><span class="line">                     list          Get a list of available sensor types</span><br><span class="line"></span><br><span class="line">               get &lt;Sensor_ID&gt;</span><br><span class="line">                     Retrieve state of the first sensor matched by Sensor_ID</span><br><span class="line"></span><br><span class="line">               info</span><br><span class="line">                     Display information about the repository itself</span><br><span class="line"></span><br><span class="line">               entity &lt;Entity_ID&gt;[.&lt;Instance_ID&gt;]</span><br><span class="line">                     Display all sensors associated with an entity</span><br><span class="line"></span><br><span class="line">               dump &lt;file&gt;</span><br><span class="line">                     Dump raw SDR data to a file</span><br><span class="line"></span><br><span class="line">               fill &lt;option&gt;</span><br><span class="line">                     sensors       Creates the SDR repository for the current</span><br><span class="line">                                   configuration</span><br><span class="line">                     nosat         Creates the SDR repository for the current</span><br><span class="line">                                   configuration, without satellite scan</span><br><span class="line">                     file &lt;file&gt;   Load SDR repository from a file</span><br><span class="line">                     range &lt;range&gt; Load SDR repository from a provided list</span><br><span class="line">                                   or range. Use &apos;,&apos; for list or &apos;-&apos; for</span><br><span class="line">                                   range, eg. 0x28,0x32,0x40-0x44</span><br><span class="line">[root@centos-01 ~]#</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ipmi </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[pysnmp使用]]></title>
      <url>/2018/01/01/pysnmp%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p><code>pysnmp</code> ,python的一个库文件,可通过它获取设备snmp信息,从而提取想要的资料.<br>建议,使用前,先了解下snmp,MIB,oid等 <a href="http://snmplabs.com/pysnmp/contents.html" target="_blank" rel="noopener">pysnmp官网</a><br><a id="more"></a></p>
<p>安装使用 <code>pip</code> 就可以了.</p>
<h4 id="官方例子"><a href="#官方例子" class="headerlink" title="官方例子"></a>官方例子</h4><h5 id="获取信息"><a href="#获取信息" class="headerlink" title="获取信息"></a>获取信息</h5><p>SNMP GET<br>官方例子<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">SNMPv1</span></span><br><span class="line"><span class="string">++++++</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Send SNMP GET request using the following options:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  * with SNMPv1, community 'public'</span></span><br><span class="line"><span class="string">  * over IPv4/UDP</span></span><br><span class="line"><span class="string">  * to an Agent at demo.snmplabs.com:161</span></span><br><span class="line"><span class="string">  * for two instances of SNMPv2-MIB::sysDescr.0 MIB object,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Functionally similar to:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">| $ snmpget -v1 -c public demo.snmplabs.com SNMPv2-MIB::sysDescr.0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span><span class="comment">#</span></span><br><span class="line"><span class="keyword">from</span> pysnmp.hlapi <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">errorIndication, errorStatus, errorIndex, varBinds = next(</span><br><span class="line">    getCmd(SnmpEngine(),</span><br><span class="line">           CommunityData(<span class="string">'public'</span>, mpModel=<span class="number">0</span>),</span><br><span class="line">           UdpTransportTarget((<span class="string">'demo.snmplabs.com'</span>, <span class="number">161</span>)),</span><br><span class="line">           ContextData(),</span><br><span class="line">           ObjectType(ObjectIdentity(<span class="string">'SNMPv2-MIB'</span>, <span class="string">'sysDescr'</span>, <span class="number">0</span>)))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> errorIndication:</span><br><span class="line">    print(errorIndication)</span><br><span class="line"><span class="keyword">elif</span> errorStatus:</span><br><span class="line">    print(<span class="string">'%s at %s'</span> % (errorStatus.prettyPrint(),</span><br><span class="line">                        errorIndex <span class="keyword">and</span> varBinds[int(errorIndex) - <span class="number">1</span>][<span class="number">0</span>] <span class="keyword">or</span> <span class="string">'?'</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> varBind <span class="keyword">in</span> varBinds:</span><br><span class="line">        print(<span class="string">' = '</span>.join([x.prettyPrint() <span class="keyword">for</span> x <span class="keyword">in</span> varBind]))</span><br></pre></td></tr></table></figure></p>
<p>执行后的结果<br><code>SNMPv2-MIB::sysDescr.&quot;0&quot; = SunOS zeus.snmplabs.com 4.1.3_U1 1 sun4m</code></p>
<h5 id="方法解释"><a href="#方法解释" class="headerlink" title="方法解释"></a>方法解释</h5><p>大概说下作用,如开头所说,建议先了解下snmp,MIB,oid等</p>
<ol>
<li><code>getCmd()</code> 通过此方法来执行SNMP命令.<br>返回由<code>errorIndication</code>, <code>errorStatus</code>, <code>errorIndex</code>, <code>varBinds</code>组成的一个tuple<br>一共有四个方法<code>bulkCmd</code> <code>getCmd</code> <code>nextCmd</code> <code>setCmd</code>都有各自的用法.</li>
<li><code>SnmpEngine()</code> 创建了个SNMP引擎,用来保障后续的操作.</li>
<li><code>CommunityData()</code> 实例化SNMP协议以及community<br>SNMP协议分为<code>v1</code> <code>v2c</code> <code>v3</code> v3暂时不管.<code>CommunityData()</code>需要两个参数用来实例化<br>其中 <code>0</code>代表<code>v1</code>, <code>1</code>代表<code>v2c</code>  v3是另外的方法<code>UsmUserData</code></li>
<li><code>UdpTransportTarget</code> 其实还有个 <code>Udp6TransportTarget</code> 针对IPv6的<br>它用来设置传输目标</li>
<li><code>ContextData()</code>,由于SNMP的消息头是<code>v3</code>的,这个类是用来初始snmp上下文的,</li>
<li><code>ObjectType</code> 理解为一个容器对象,使<code>ObjectIdentity</code>和SNMP信息更像是<code>key:value</code><br><a href="http://mibs.snmplabs.com/asn1/" target="_blank" rel="noopener">MIB库ASN1</a> 里都是MIB信息,格式类似<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sysUpTime OBJECT-TYPE</span><br><span class="line">    SYNTAX      TimeTicks</span><br><span class="line">    MAX-ACCESS  read-only</span><br><span class="line">    STATUS      current</span><br><span class="line">    DESCRIPTION</span><br><span class="line">            &quot;The time (in hundredths of a second) since</span><br><span class="line">            the network management portion of the system</span><br><span class="line">            was last re-initialized.&quot;</span><br><span class="line">    ::= &#123; system 3 &#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>这些信息由<code>ObjectIdentity</code>转换为<code>1.3.6.1....</code>,然后再由<code>ObjectType</code> 将其和值对应.<br>使结果更为友好,使用<code>prettyPrint()</code>打印出</p>
<ol>
<li><code>ObjectIdentity</code> MIB对象标识,格式化处理MIB对象为OID,反之亦然.所以也可直接输出OID</li>
</ol>
<p>以上步骤基本就可以按需求提出SNMP信息了.</p>
<h4 id="简便方法"><a href="#简便方法" class="headerlink" title="简便方法"></a>简便方法</h4><p>使用模块<code>pysnmp.entity.rfc3413.oneliner.cmdgen</code></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pysnmp.entity.rfc3413.oneliner <span class="keyword">import</span> cmdgen</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">(self,oid,ip,commu)</span>:</span></span><br><span class="line">        cmdGen = cmdgen.CommandGenerator()</span><br><span class="line">        errorIndication, errorStatus, errorIndex, varBindTable = cmdGen.nextCmd(</span><br><span class="line">            cmdgen.CommunityData(commu),</span><br><span class="line">            cmdgen.UdpTransportTarget((ip, <span class="number">161</span>)),</span><br><span class="line">            oid,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> errorIndication:</span><br><span class="line">            print(errorIndication)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> errorStatus:</span><br><span class="line">                print(<span class="string">'%s at %s'</span> % (</span><br><span class="line">                    errorStatus.prettyPrint(),</span><br><span class="line">                    errorIndex <span class="keyword">and</span> varBindTable[<span class="number">-1</span>][int(errorIndex)<span class="number">-1</span>][<span class="number">0</span>] <span class="keyword">or</span> <span class="string">'?'</span></span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">for</span> varBindTableRow <span class="keyword">in</span> varBindTable:</span><br><span class="line">                    <span class="keyword">for</span> name, val <span class="keyword">in</span> varBindTableRow:</span><br><span class="line">                        <span class="keyword">return</span> (<span class="string">'%s = %s'</span> % (name.prettyPrint(), val.prettyPrint()))</span><br></pre></td></tr></table></figure>
<h4 id="简单例子"><a href="#简单例子" class="headerlink" title="简单例子"></a>简单例子</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="comment">#author: lizili</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#from pysnmp.hlapi import *</span></span><br><span class="line"><span class="keyword">from</span> pysnmp.entity.rfc3413.oneliner <span class="keyword">import</span> cmdgen</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetSnmp</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#oid列表</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">make_list</span><span class="params">(self,*oid)</span>:</span></span><br><span class="line">        oid_list = []</span><br><span class="line">        <span class="keyword">for</span> o <span class="keyword">in</span> oid:</span><br><span class="line">            oid_list.append(o)</span><br><span class="line">        <span class="keyword">return</span> oid_list </span><br><span class="line"></span><br><span class="line">    <span class="comment">#获取snmp信息</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">(self,oid,ip,commu)</span>:</span></span><br><span class="line">        cmdGen = cmdgen.CommandGenerator()</span><br><span class="line">        errorIndication, errorStatus, errorIndex, varBindTable = cmdGen.nextCmd(</span><br><span class="line">            cmdgen.CommunityData(commu),</span><br><span class="line">            cmdgen.UdpTransportTarget((ip, <span class="number">161</span>)),</span><br><span class="line">            oid,</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> errorIndication:</span><br><span class="line">            print(errorIndication)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> errorStatus:</span><br><span class="line">                print(<span class="string">'%s at %s'</span> % (</span><br><span class="line">                    errorStatus.prettyPrint(),</span><br><span class="line">                    errorIndex <span class="keyword">and</span> varBindTable[<span class="number">-1</span>][int(errorIndex)<span class="number">-1</span>][<span class="number">0</span>] <span class="keyword">or</span> <span class="string">'?'</span></span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                var_dict=&#123;&#125;</span><br><span class="line">                <span class="keyword">for</span> varBindTableRow <span class="keyword">in</span> varBindTable:</span><br><span class="line">                    <span class="keyword">for</span> name, val <span class="keyword">in</span> varBindTableRow:</span><br><span class="line">                        var_dict[name.prettyPrint()]=str(val.prettyPrint())</span><br><span class="line">                <span class="keyword">return</span> var_dict</span><br><span class="line"></span><br><span class="line">    <span class="comment">#循环oid表，提取整理信息</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_info</span><span class="params">(self,oid,ip,commu=<span class="string">'public'</span>)</span>:</span></span><br><span class="line">        info_dict=&#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> o <span class="keyword">in</span> oid:</span><br><span class="line">            info = self.info(o,ip,commu)</span><br><span class="line">            info_dict[o]=info</span><br><span class="line">        info_json=json.dumps(info_dict,indent=<span class="number">4</span>)</span><br><span class="line">        <span class="keyword">return</span> info_json</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    sysName  = <span class="string">"1.3.6.1.2.1.1.5"</span></span><br><span class="line">    sysDescr = <span class="string">"1.3.6.1.2.1.1.1"</span></span><br><span class="line">    ifNumber = <span class="string">"1.3.6.1.2.1.2.1"</span></span><br><span class="line">    ifDescr = <span class="string">"1.3.6.1.2.1.2.2.1.2"</span></span><br><span class="line">    ifInOctet = <span class="string">"1.3.6.1.2.1.2.2.1.10"</span></span><br><span class="line">    ifOutOctet = <span class="string">"1.3.6.1.2.1.2.2.1.16"</span></span><br><span class="line">    ifInUcastPkts = <span class="string">"1.3.6.1.2.1.2.2.1.11"</span></span><br><span class="line">    ifOutUcastPkts = <span class="string">"1.3.6.1.2.1.2.2.1.17"</span></span><br><span class="line">    ipNetToMediaPhysAddress = <span class="string">"1.3.6.1.2.1.4.22.1.2"</span></span><br><span class="line">    ipOperStatus = <span class="string">"1.3.6.1.2.1.2.2.1.8"</span></span><br><span class="line">    <span class="comment">#实例化类</span></span><br><span class="line">    test = GetSnmp()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#生成list</span></span><br><span class="line">    oid_list = test.make_list(</span><br><span class="line">    <span class="comment">#    sysName,</span></span><br><span class="line">    <span class="comment">#    sysDescr,</span></span><br><span class="line">    <span class="comment">#    ifNumber,</span></span><br><span class="line">    <span class="comment">#    ifDescr,</span></span><br><span class="line">    <span class="comment">#    ifInOctet,</span></span><br><span class="line">    <span class="comment">#    ifOutOctet,</span></span><br><span class="line">    <span class="comment">#    ifInUcastPkts,</span></span><br><span class="line">    <span class="comment">#    ifOutUcastPkts,</span></span><br><span class="line">        ipNetToMediaPhysAddress,</span><br><span class="line">        ipOperStatus,</span><br><span class="line">        )</span><br><span class="line">    <span class="comment">#输出信息 </span></span><br><span class="line">    info = test.get_info(oid_list,<span class="string">"192.168.1.235"</span>)</span><br><span class="line">    <span class="keyword">print</span> info</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> pysnmp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[supervisor]]></title>
      <url>/2017/12/25/supervisor/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Supervisor进程管理,只能管理非daemon的进程，不能管理守护进程。</p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>Supervisor进程管理,只能管理非daemon的进程，不能管理守护进程。</p>
</blockquote>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><h5 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install supervisor</span><br></pre></td></tr></table></figure>
<p>默认主配置文件在<code>/etc/supervisor.conf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# sed -n &apos;/^;/!&#123;/^$/!p&#125;&apos; /etc/supervisord.conf </span><br><span class="line">[unix_http_server]</span><br><span class="line">file=/var/run/supervisor/supervisor.sock   ; (the path to the socket file)</span><br><span class="line">[supervisord]</span><br><span class="line">logfile=/var/log/supervisor/supervisord.log  ; (main log file;default $CWD/supervisord.log)</span><br><span class="line">logfile_maxbytes=50MB       ; (max main logfile bytes b4 rotation;default 50MB)</span><br><span class="line">logfile_backups=10          ; (num of main logfile rotation backups;default 10)</span><br><span class="line">loglevel=info               ; (log level;default info; others: debug,warn,trace)</span><br><span class="line">pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)</span><br><span class="line">nodaemon=false              ; (start in foreground if true;default false)</span><br><span class="line">minfds=1024                 ; (min. avail startup file descriptors;default 1024)</span><br><span class="line">minprocs=200                ; (min. avail process descriptors;default 200)</span><br><span class="line">[rpcinterface:supervisor]</span><br><span class="line">supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface</span><br><span class="line">[supervisorctl]</span><br><span class="line">serverurl=unix:///var/run/supervisor/supervisor.sock ; use a unix:// URL  for a unix socket</span><br><span class="line">[include]</span><br><span class="line">files = supervisord.d/*</span><br><span class="line">[root@master ~]#</span><br></pre></td></tr></table></figure>
<p>默认项目配置文件<code>/etc/supervisord.d/</code>下</p>
<h5 id="easy-install"><a href="#easy-install" class="headerlink" title="easy_install"></a>easy_install</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install python-setuptools</span><br><span class="line">easy_install supervisor</span><br></pre></td></tr></table></figure>
<p>文件路径<br><code>mkdir -m 755 -p /etc/supervisor/</code><br>创建主配置文件<br><code>echo_supervisord_conf &gt; /etc/supervisor/supervisord.conf</code><br>项目配置文件目录,主配置文件中,将此路径include.<br><code>mkdir -m 755-p /etc/supervisor/conf.d</code></p>
<h4 id="进程配置-例"><a href="#进程配置-例" class="headerlink" title="进程配置(例)"></a>进程配置(例)</h4><p>以redis为例,当然,redis本身是支持开启后台启动的.这里为了测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@master supervisord.d]# pwd</span><br><span class="line">/etc/supervisord.d</span><br><span class="line">[root@master supervisord.d]# ls</span><br><span class="line">redis.conf</span><br><span class="line">[root@master supervisord.d]# cat redis.conf </span><br><span class="line">[program:redis]</span><br><span class="line">command = redis-server</span><br><span class="line">;指定redis 日志路径,路径要提前准备好,不然无法启动.</span><br><span class="line">stdout_logfile=/tmp/supervisor-log/redis.log</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">startsecs=5</span><br><span class="line">priority=1</span><br><span class="line">stopasgroup=true</span><br><span class="line">killasgroup=true</span><br><span class="line">[root@master supervisord.d]#</span><br></pre></td></tr></table></figure></p>
<p>交互终端,可看到当前运行的进程.并操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# supervisorctl </span><br><span class="line">redis                            RUNNING   pid 1947, uptime 0:14:54</span><br><span class="line">supervisor&gt; help</span><br><span class="line"></span><br><span class="line">default commands (type help &lt;topic&gt;):</span><br><span class="line">=====================================</span><br><span class="line">add    clear  fg        open  quit    remove  restart   start   stop  update </span><br><span class="line">avail  exit   maintail  pid   reload  reread  shutdown  status  tail  version</span><br><span class="line"></span><br><span class="line">supervisor&gt; help stop</span><br><span class="line">stop &lt;name&gt;     Stop a process</span><br><span class="line">stop &lt;gname&gt;:*      Stop all processes in a group</span><br><span class="line">stop &lt;name&gt; &lt;name&gt;  Stop multiple processes or groups</span><br><span class="line">stop all        Stop all processes</span><br><span class="line">supervisor&gt;</span><br></pre></td></tr></table></figure></p>
<p>bash管理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl status</span><br><span class="line">supervisorctl stop redis</span><br><span class="line">supervisorctl start redis</span><br><span class="line">supervisorctl restart redis</span><br><span class="line">supervisorctl reread</span><br><span class="line">supervisorctl update</span><br></pre></td></tr></table></figure></p>
<h4 id="supervisor主配置"><a href="#supervisor主配置" class="headerlink" title="supervisor主配置"></a>supervisor主配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br></pre></td><td class="code"><pre><span class="line">[unix_http_server]            </span><br><span class="line">file=/tmp/supervisor.sock   ; socket文件的路径，supervisorctl用XML_RPC和supervisord通信就是通过它进行</span><br><span class="line">                              的。如果不设置的话，supervisorctl也就不能用了  </span><br><span class="line">                              不设置的话，默认为none。 非必须设置        </span><br><span class="line">;chmod=0700                 ; 这个简单，就是修改上面的那个socket文件的权限为0700</span><br><span class="line">                              不设置的话，默认为0700。 非必须设置</span><br><span class="line">;chown=nobody:nogroup       ; 这个一样，修改上面的那个socket文件的属组为user.group</span><br><span class="line">                              不设置的话，默认为启动supervisord进程的用户及属组。非必须设置</span><br><span class="line">;username=user              ; 使用supervisorctl连接的时候，认证的用户</span><br><span class="line">                               不设置的话，默认为不需要用户。 非必须设置</span><br><span class="line">;password=123               ; 和上面的用户名对应的密码，可以直接使用明码，也可以使用SHA加密</span><br><span class="line">                              如：&#123;SHA&#125;82ab876d1387bfafe46cc1c8a2ef074eae50cb1d</span><br><span class="line">                              默认不设置。。。非必须设置</span><br><span class="line"></span><br><span class="line">;[inet_http_server]         ; 侦听在TCP上的socket，Web Server和远程的supervisorctl都要用到他</span><br><span class="line">                              不设置的话，默认为不开启。非必须设置</span><br><span class="line">;port=127.0.0.1:9001        ; 这个是侦听的IP和端口，侦听所有IP用 :9001或*:9001。</span><br><span class="line">                              这个必须设置，只要上面的[inet_http_server]开启了，就必须设置它</span><br><span class="line">;username=user              ; 这个和上面的uinx_http_server一个样。非必须设置</span><br><span class="line">;password=123               ; 这个也一个样。非必须设置</span><br><span class="line"></span><br><span class="line">[supervisord]                ;这个主要是定义supervisord这个服务端进程的一些参数的</span><br><span class="line">                              这个必须设置，不设置，supervisor就不用干活了</span><br><span class="line">logfile=/tmp/supervisord.log ; 这个是supervisord这个主进程的日志路径，注意和子进程的日志不搭嘎。</span><br><span class="line">                               默认路径$CWD/supervisord.log，$CWD是当前目录。。非必须设置</span><br><span class="line">logfile_maxbytes=50MB        ; 这个是上面那个日志文件的最大的大小，当超过50M的时候，会生成一个新的日 </span><br><span class="line">                               志文件。当设置为0时，表示不限制文件大小</span><br><span class="line">                               默认值是50M，非必须设置。              </span><br><span class="line">logfile_backups=10           ; 日志文件保持的数量，上面的日志文件大于50M时，就会生成一个新文件。文件</span><br><span class="line">                               数量大于10时，最初的老文件被新文件覆盖，文件数量将保持为10</span><br><span class="line">                               当设置为0时，表示不限制文件的数量。</span><br><span class="line">                               默认情况下为10。。。非必须设置</span><br><span class="line">loglevel=info                ; 日志级别，有critical, error, warn, info, debug, trace, or blather等</span><br><span class="line">                               默认为info。。。非必须设置项</span><br><span class="line">pidfile=/tmp/supervisord.pid ; supervisord的pid文件路径。</span><br><span class="line">                               默认为$CWD/supervisord.pid。。。非必须设置</span><br><span class="line">nodaemon=false               ; 如果是true，supervisord进程将在前台运行</span><br><span class="line">                               默认为false，也就是后台以守护进程运行。。。非必须设置</span><br><span class="line">minfds=1024                  ; 这个是最少系统空闲的文件描述符，低于这个值supervisor将不会启动。</span><br><span class="line">                               系统的文件描述符在这里设置cat /proc/sys/fs/file-max</span><br><span class="line">                               默认情况下为1024。。。非必须设置</span><br><span class="line">minprocs=200                 ; 最小可用的进程描述符，低于这个值supervisor也将不会正常启动。</span><br><span class="line">                              ulimit  -u这个命令，可以查看linux下面用户的最大进程数</span><br><span class="line">                              默认为200。。。非必须设置</span><br><span class="line">;umask=022                   ; 进程创建文件的掩码</span><br><span class="line">                               默认为022。。非必须设置项</span><br><span class="line">;user=chrism                 ; 这个参数可以设置一个非root用户，当我们以root用户启动supervisord之后。</span><br><span class="line">                               我这里面设置的这个用户，也可以对supervisord进行管理</span><br><span class="line">                               默认情况是不设置。。。非必须设置项</span><br><span class="line">;identifier=supervisor       ; 这个参数是supervisord的标识符，主要是给XML_RPC用的。当你有多个</span><br><span class="line">                               supervisor的时候，而且想调用XML_RPC统一管理，就需要为每个</span><br><span class="line">                               supervisor设置不同的标识符了</span><br><span class="line">                               默认是supervisord。。。非必需设置</span><br><span class="line">;directory=/tmp              ; 这个参数是当supervisord作为守护进程运行的时候，设置这个参数的话，启动</span><br><span class="line">                               supervisord进程之前，会先切换到这个目录</span><br><span class="line">                               默认不设置。。。非必须设置</span><br><span class="line">;nocleanup=true              ; 这个参数当为false的时候，会在supervisord进程启动的时候，把以前子进程</span><br><span class="line">                               产生的日志文件(路径为AUTO的情况下)清除掉。有时候咱们想要看历史日志，当 </span><br><span class="line">                               然不想日志被清除了。所以可以设置为true</span><br><span class="line">                               默认是false，有调试需求的同学可以设置为true。。。非必须设置</span><br><span class="line">;childlogdir=/tmp            ; 当子进程日志路径为AUTO的时候，子进程日志文件的存放路径。</span><br><span class="line">                               默认路径是这个东西，执行下面的这个命令看看就OK了，处理的东西就默认路径</span><br><span class="line">                               python -c &quot;import tempfile;print tempfile.gettempdir()&quot;</span><br><span class="line">                               非必须设置</span><br><span class="line">;environment=KEY=&quot;value&quot;     ; 这个是用来设置环境变量的，supervisord在linux中启动默认继承了linux的</span><br><span class="line">                               环境变量，在这里可以设置supervisord进程特有的其他环境变量。</span><br><span class="line">                               supervisord启动子进程时，子进程会拷贝父进程的内存空间内容。 所以设置的</span><br><span class="line">                               这些环境变量也会被子进程继承。</span><br><span class="line">                               小例子：environment=name=&quot;haha&quot;,age=&quot;hehe&quot;</span><br><span class="line">                               默认为不设置。。。非必须设置</span><br><span class="line">;strip_ansi=false            ; 这个选项如果设置为true，会清除子进程日志中的所有ANSI 序列。什么是ANSI</span><br><span class="line">                               序列呢？就是我们的\n,\t这些东西。</span><br><span class="line">                               默认为false。。。非必须设置</span><br><span class="line"></span><br><span class="line">; the below section must remain in the config file for RPC</span><br><span class="line">; (supervisorctl/web interface) to work, additional interfaces may be</span><br><span class="line">; added by defining them in separate rpcinterface: sections</span><br><span class="line">[rpcinterface:supervisor]    ;这个选项是给XML_RPC用的，当然你如果想使用supervisord或者web server 这 </span><br><span class="line">                              个选项必须要开启的</span><br><span class="line">supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface </span><br><span class="line"></span><br><span class="line">[supervisorctl]              ;这个主要是针对supervisorctl的一些配置  </span><br><span class="line">serverurl=unix:///tmp/supervisor.sock ; 这个是supervisorctl本地连接supervisord的时候，本地UNIX socket</span><br><span class="line">                                        路径，注意这个是和前面的[unix_http_server]对应的</span><br><span class="line">                                        默认值就是unix:///tmp/supervisor.sock。。非必须设置</span><br><span class="line">;serverurl=http://127.0.0.1:9001 ; 这个是supervisorctl远程连接supervisord的时候，用到的TCP socket路径</span><br><span class="line">                                   注意这个和前面的[inet_http_server]对应</span><br><span class="line">                                   默认就是http://127.0.0.1:9001。。。非必须项</span><br><span class="line">                               </span><br><span class="line">;username=chris              ; 用户名</span><br><span class="line">                               默认空。。非必须设置</span><br><span class="line">;password=123                ; 密码</span><br><span class="line">                              默认空。。非必须设置</span><br><span class="line">;prompt=mysupervisor         ; 输入用户名密码时候的提示符</span><br><span class="line">                               默认supervisor。。非必须设置</span><br><span class="line">;history_file=~/.sc_history  ; 这个参数和shell中的history类似，我们可以用上下键来查找前面执行过的命令</span><br><span class="line">                               默认是no file的。。所以我们想要有这种功能，必须指定一个文件。。。非</span><br><span class="line">                               必须设置</span><br><span class="line"></span><br><span class="line">; The below sample program section shows all possible program subsection values,</span><br><span class="line">; create one or more &apos;real&apos; program: sections to be able to control them under</span><br><span class="line">; supervisor.</span><br><span class="line"></span><br><span class="line">;[program:theprogramname]      ;这个就是咱们要管理的子进程了，&quot;:&quot;后面的是名字，最好别乱写和实际进程</span><br><span class="line">                                有点关联最好。这样的program我们可以设置一个或多个，一个program就是</span><br><span class="line">                                要被管理的一个进程</span><br><span class="line">;command=/bin/cat              ; 这个就是我们的要启动进程的命令路径了，可以带参数</span><br><span class="line">                                例子：/home/test.py -a &apos;hehe&apos;</span><br><span class="line">                                有一点需要注意的是，我们的command只能是那种在终端运行的进程，不能是</span><br><span class="line">                                守护进程。这个想想也知道了，比如说command=service httpd start。</span><br><span class="line">                                httpd这个进程被linux的service管理了，我们的supervisor再去启动这个命令</span><br><span class="line">                                这已经不是严格意义的子进程了。</span><br><span class="line">                                这个是个必须设置的项</span><br><span class="line">;process_name=%(program_name)s ; 这个是进程名，如果我们下面的numprocs参数为1的话，就不用管这个参数</span><br><span class="line">                                 了，它默认值%(program_name)s也就是上面的那个program冒号后面的名字，</span><br><span class="line">                                 但是如果numprocs为多个的话，那就不能这么干了。想想也知道，不可能每个</span><br><span class="line">                                 进程都用同一个进程名吧。</span><br><span class="line"></span><br><span class="line">                                </span><br><span class="line">;numprocs=1                    ; 启动进程的数目。当不为1时，就是进程池的概念，注意process_name的设置</span><br><span class="line">                                 默认为1    。。非必须设置</span><br><span class="line">;directory=/tmp                ; 进程运行前，会前切换到这个目录</span><br><span class="line">                                 默认不设置。。。非必须设置</span><br><span class="line">;umask=022                     ; 进程掩码，默认none，非必须</span><br><span class="line">;priority=999                  ; 子进程启动关闭优先级，优先级低的，最先启动，关闭的时候最后关闭</span><br><span class="line">                                 默认值为999 。。非必须设置</span><br><span class="line">;autostart=true                ; 如果是true的话，子进程将在supervisord启动后被自动启动</span><br><span class="line">                                 默认就是true   。。非必须设置</span><br><span class="line">;autorestart=unexpected        ; 这个是设置子进程挂掉后自动重启的情况，有三个选项，false,unexpected</span><br><span class="line">                                 和true。如果为false的时候，无论什么情况下，都不会被重新启动，</span><br><span class="line">                                 如果为unexpected，只有当进程的退出码不在下面的exitcodes里面定义的退 </span><br><span class="line">                                 出码的时候，才会被自动重启。当为true的时候，只要子进程挂掉，将会被无</span><br><span class="line">                                 条件的重启</span><br><span class="line">;startsecs=1                   ; 这个选项是子进程启动多少秒之后，此时状态如果是running，则我们认为启</span><br><span class="line">                                 动成功了</span><br><span class="line">                                 默认值为1 。。非必须设置</span><br><span class="line">;startretries=3                ; 当进程启动失败后，最大尝试启动的次数。。当超过3次后，supervisor将把</span><br><span class="line">                                 此进程的状态置为FAIL</span><br><span class="line">                                 默认值为3 。。非必须设置</span><br><span class="line">;exitcodes=0,2                 ; 注意和上面的的autorestart=unexpected对应。。exitcodes里面的定义的</span><br><span class="line">                                 退出码是expected的。</span><br><span class="line">;stopsignal=QUIT               ; 进程停止信号，可以为TERM, HUP, INT, QUIT, KILL, USR1, or USR2等信号</span><br><span class="line">                                  默认为TERM 。。当用设定的信号去干掉进程，退出码会被认为是expected</span><br><span class="line">                                  非必须设置</span><br><span class="line">;stopwaitsecs=10               ; 这个是当我们向子进程发送stopsignal信号后，到系统返回信息</span><br><span class="line">                                 给supervisord，所等待的最大时间。 超过这个时间，supervisord会向该</span><br><span class="line">                                 子进程发送一个强制kill的信号。</span><br><span class="line">                                 默认为10秒。。非必须设置</span><br><span class="line">;stopasgroup=false             ; 这个东西主要用于，supervisord管理的子进程，这个子进程本身还有</span><br><span class="line">                                 子进程。那么我们如果仅仅干掉supervisord的子进程的话，子进程的子进程</span><br><span class="line">                                 有可能会变成孤儿进程。所以咱们可以设置可个选项，把整个该子进程的</span><br><span class="line">                                 整个进程组都干掉。 设置为true的话，一般killasgroup也会被设置为true。</span><br><span class="line">                                 需要注意的是，该选项发送的是stop信号</span><br><span class="line">                                 默认为false。。非必须设置。。</span><br><span class="line">;killasgroup=false             ; 这个和上面的stopasgroup类似，不过发送的是kill信号</span><br><span class="line">;user=chrism                   ; 如果supervisord是root启动，我们在这里设置这个非root用户，可以用来</span><br><span class="line">                                 管理该program</span><br><span class="line">                                 默认不设置。。。非必须设置项</span><br><span class="line">;redirect_stderr=true          ; 如果为true，则stderr的日志会被写入stdout日志文件中</span><br><span class="line">                                 默认为false，非必须设置</span><br><span class="line">;stdout_logfile=/a/path        ; 子进程的stdout的日志路径，可以指定路径，AUTO，none等三个选项。</span><br><span class="line">                                 设置为none的话，将没有日志产生。设置为AUTO的话，将随机找一个地方</span><br><span class="line">                                 生成日志文件，而且当supervisord重新启动的时候，以前的日志文件会被</span><br><span class="line">                                 清空。当 redirect_stderr=true的时候，sterr也会写进这个日志文件</span><br><span class="line">;stdout_logfile_maxbytes=1MB   ; 日志文件最大大小，和[supervisord]中定义的一样。默认为50</span><br><span class="line">;stdout_logfile_backups=10     ; 和[supervisord]定义的一样。默认10</span><br><span class="line">;stdout_capture_maxbytes=1MB   ; 这个东西是设定capture管道的大小，当值不为0的时候，子进程可以从stdout</span><br><span class="line">                                 发送信息，而supervisor可以根据信息，发送相应的event。</span><br><span class="line">                                 默认为0，为0的时候表达关闭管道。。。非必须项</span><br><span class="line">;stdout_events_enabled=false   ; 当设置为ture的时候，当子进程由stdout向文件描述符中写日志的时候，将</span><br><span class="line">                                 触发supervisord发送PROCESS_LOG_STDOUT类型的event</span><br><span class="line">                                 默认为false。。。非必须设置</span><br><span class="line">;stderr_logfile=/a/path        ; 这个东西是设置stderr写的日志路径，当redirect_stderr=true。这个就不用</span><br><span class="line">                                 设置了，设置了也是白搭。因为它会被写入stdout_logfile的同一个文件中</span><br><span class="line">                                 默认为AUTO，也就是随便找个地存，supervisord重启被清空。。非必须设置</span><br><span class="line">;stderr_logfile_maxbytes=1MB   ; 这个出现好几次了，就不重复了</span><br><span class="line">;stderr_logfile_backups=10     ; 这个也是</span><br><span class="line">;stderr_capture_maxbytes=1MB   ; 这个一样，和stdout_capture一样。 默认为0，关闭状态</span><br><span class="line">;stderr_events_enabled=false   ; 这个也是一样，默认为false</span><br><span class="line">;environment=A=&quot;1&quot;,B=&quot;2&quot;       ; 这个是该子进程的环境变量，和别的子进程是不共享的</span><br><span class="line">;serverurl=AUTO                ; </span><br><span class="line"></span><br><span class="line">; The below sample eventlistener section shows all possible</span><br><span class="line">; eventlistener subsection values, create one or more &apos;real&apos;</span><br><span class="line">; eventlistener: sections to be able to handle event notifications</span><br><span class="line">; sent by supervisor.</span><br><span class="line"></span><br><span class="line">;[eventlistener:theeventlistenername] ;这个东西其实和program的地位是一样的，也是suopervisor启动的子进</span><br><span class="line">                                       程，不过它干的活是订阅supervisord发送的event。他的名字就叫</span><br><span class="line">                                       listener了。我们可以在listener里面做一系列处理，比如报警等等</span><br><span class="line">                                       楼主这两天干的活，就是弄的这玩意</span><br><span class="line">;command=/bin/eventlistener    ; 这个和上面的program一样，表示listener的可执行文件的路径</span><br><span class="line">;process_name=%(program_name)s ; 这个也一样，进程名，当下面的numprocs为多个的时候，才需要。否则默认就</span><br><span class="line">                                 OK了</span><br><span class="line">;numprocs=1                    ; 相同的listener启动的个数</span><br><span class="line">;events=EVENT                  ; event事件的类型，也就是说，只有写在这个地方的事件类型。才会被发送</span><br><span class="line">                      </span><br><span class="line">                                 </span><br><span class="line">;buffer_size=10                ; 这个是event队列缓存大小，单位不太清楚，楼主猜测应该是个吧。当buffer</span><br><span class="line">                                 超过10的时候，最旧的event将会被清除，并把新的event放进去。</span><br><span class="line">                                 默认值为10。。非必须选项</span><br><span class="line">;directory=/tmp                ; 进程执行前，会切换到这个目录下执行</span><br><span class="line">                                 默认为不切换。。。非必须</span><br><span class="line">;umask=022                     ; 淹没，默认为none，不说了</span><br><span class="line">;priority=-1                   ; 启动优先级，默认-1，也不扯了</span><br><span class="line">;autostart=true                ; 是否随supervisord启动一起启动，默认true</span><br><span class="line">;autorestart=unexpected        ; 是否自动重启，和program一个样，分true,false,unexpected等，注意</span><br><span class="line">                                  unexpected和exitcodes的关系</span><br><span class="line">;startsecs=1                   ; 也是一样，进程启动后跑了几秒钟，才被认定为成功启动，默认1</span><br><span class="line">;startretries=3                ; 失败最大尝试次数，默认3</span><br><span class="line">;exitcodes=0,2                 ; 期望或者说预料中的进程退出码，</span><br><span class="line">;stopsignal=QUIT               ; 干掉进程的信号，默认为TERM，比如设置为QUIT，那么如果QUIT来干这个进程</span><br><span class="line">                                 那么会被认为是正常维护，退出码也被认为是expected中的</span><br><span class="line">;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="line">;stopasgroup=false             ; send stop signal to the UNIX process group (default false)</span><br><span class="line">;killasgroup=false             ; SIGKILL the UNIX process group (def false)</span><br><span class="line">;user=chrism                   ;设置普通用户，可以用来管理该listener进程。</span><br><span class="line">                                默认为空。。非必须设置</span><br><span class="line">;redirect_stderr=true          ; 为true的话，stderr的log会并入stdout的log里面</span><br><span class="line">                                默认为false。。。非必须设置</span><br><span class="line">;stdout_logfile=/a/path        ; 这个不说了，好几遍了</span><br><span class="line">;stdout_logfile_maxbytes=1MB   ; 这个也是</span><br><span class="line">;stdout_logfile_backups=10     ; 这个也是</span><br><span class="line">;stdout_events_enabled=false   ; 这个其实是错的，listener是不能发送event</span><br><span class="line">;stderr_logfile=/a/path        ; 这个也是</span><br><span class="line">;stderr_logfile_maxbytes=1MB   ; 这个也是</span><br><span class="line">;stderr_logfile_backups        ; 这个不说了</span><br><span class="line">;stderr_events_enabled=false   ; 这个也是错的，listener不能发送event</span><br><span class="line">;environment=A=&quot;1&quot;,B=&quot;2&quot;       ; 这个是该子进程的环境变量</span><br><span class="line">                                 默认为空。。。非必须设置</span><br><span class="line">;serverurl=AUTO                ; override serverurl computation (childutils)</span><br><span class="line"></span><br><span class="line">; The below sample group section shows all possible group values,</span><br><span class="line">; create one or more &apos;real&apos; group: sections to create &quot;heterogeneous&quot;</span><br><span class="line">; process groups.</span><br><span class="line"></span><br><span class="line">;[group:thegroupname]  ;这个东西就是给programs分组，划分到组里面的program。我们就不用一个一个去操作了</span><br><span class="line">                         我们可以对组名进行统一的操作。 注意：program被划分到组里面之后，就相当于原来</span><br><span class="line">                         的配置从supervisor的配置文件里消失了。。。supervisor只会对组进行管理，而不再</span><br><span class="line">                         会对组里面的单个program进行管理了</span><br><span class="line">;programs=progname1,progname2  ; 组成员，用逗号分开</span><br><span class="line">                                 这个是个必须的设置项</span><br><span class="line">;priority=999                  ; 优先级，相对于组和组之间说的</span><br><span class="line">                                 默认999。。非必须选项</span><br><span class="line"></span><br><span class="line">; The [include] section can just contain the &quot;files&quot; setting.  This</span><br><span class="line">; setting can list multiple files (separated by whitespace or</span><br><span class="line">; newlines).  It can also contain wildcards.  The filenames are</span><br><span class="line">; interpreted as relative to this file.  Included files *cannot*</span><br><span class="line">; include files themselves.</span><br><span class="line"></span><br><span class="line">;[include]                         ;这个东西挺有用的，当我们要管理的进程很多的时候，写在一个文件里面</span><br><span class="line">                                    就有点大了。我们可以把配置信息写到多个文件中，然后include过来</span><br><span class="line">;files = relative/directory/*.ini</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> supervisor </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix tripper和zabbix_sender]]></title>
      <url>/2017/12/24/zabbix-tripper%E5%92%8Czabbix-sender/</url>
      <content type="html"><![CDATA[<blockquote>
<p>zabbix获取key值有超时时间，如果自定义的key脚本一般需要执行很长时间，这根本没法去做监控，所以使用zabbix监控类型zabbix trapper，需要配合zabbix_sender给它传递数据</p>
</blockquote>
<a id="more"></a>
<h4 id="zabbix-sender安装"><a href="#zabbix-sender安装" class="headerlink" title="zabbix_sender安装"></a>zabbix_sender安装</h4><p>各版本客户端安装<br>centos5<br><code>rpm -ivh http://mirrors.aliyun.com/zabbix/zabbix/3.0/rhel/5/x86_64/zabbix-sender-3.0.5-1.el5.x86_64.rpm</code><br>centos6<br><code>rpm -ivh http://mirrors.aliyun.com/zabbix/zabbix/3.0/rhel/6/x86_64/zabbix-sender-3.0.5-1.el6.x86_64.rpm</code><br>centos7<br><code>rpm -ivh http://mirrors.aliyun.com/zabbix/zabbix/3.0/rhel/7/x86_64/zabbix-sender-3.0.5-1.el7.x86_64.rpm</code></p>
<h4 id="zabbix-sender格式"><a href="#zabbix-sender格式" class="headerlink" title="zabbix_sender格式"></a>zabbix_sender格式</h4><p>格式<br><code>zabbix_sender [-Vhv] {[-zpsI] -ko | [-zpI] -T -i &lt;file&gt; -r} [-c &lt;file&gt;]</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-c --config &lt;file&gt;                   <span class="comment">#配置文件绝对路径</span></span><br><span class="line">-z --zabbix-server &lt;server&gt;         <span class="comment"># zabbix server的IP地址</span></span><br><span class="line">-p --port &lt;server port&gt;              <span class="comment">#zabbix server端口.默认10051</span></span><br><span class="line">-s --host &lt;hostname&gt;                <span class="comment"># 主机名，zabbix里面配置的主机名（不是服务器的hostname），不能使用ip地址</span></span><br><span class="line">-I --<span class="built_in">source</span>-address &lt;IP address&gt;     <span class="comment">#源IP</span></span><br><span class="line">-k --key &lt;key&gt;                     <span class="comment">#  监控项的key</span></span><br><span class="line">-o --value &lt;key value&gt;               <span class="comment">#key值</span></span><br><span class="line">-i --input-file &lt;input file&gt;        <span class="comment"># 从文件里面读取hostname、key、value 一行为一条数据，使用空格作为分隔符，如果主机名带空格，那么请使用双引号包起来</span></span><br><span class="line">-T --with-timestamps              <span class="comment">#一行一条数据，空格作为分隔符: &lt;hostname&gt; &lt;key&gt; &lt;timestamp&gt; &lt;value&gt;，#配合 --input-file option，timestamp为unix时间戳</span></span><br><span class="line">-r --real-time                      <span class="comment">#将数据实时提交给服务器</span></span><br><span class="line">-v --verbose                         <span class="comment">#详细模式, -vv 更详细</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">例一:</span><br><span class="line">zabbix_sender -z server -s host -k key -o value</span><br><span class="line">例二：</span><br><span class="line">zabbix_sender -c config-file -k key -o value</span><br><span class="line">例三：</span><br><span class="line">zabbix_sender -z server -i file</span><br></pre></td></tr></table></figure>
<h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p><code>zabbix_sender -z 10.1.93.218 -s 10.1.27.31 -k mytrip -o 666</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@elk zabbix]# zabbix_sender -z 10.1.93.218 -s 10.1.27.31 -k mytrip -o 666</span><br><span class="line">info from server: &quot;processed: 1; failed: 0; total: 1; seconds spent: 0.000089&quot;</span><br><span class="line">sent: 1; skipped: 0; total: 1</span><br><span class="line"></span><br><span class="line">-z 10.1.93.218 : zabbix server</span><br><span class="line">-s 10.2.27.31 : 主机名,和web页面中要一致</span><br><span class="line">-k mytrip  :定义的key ,和web页面中要一致</span><br><span class="line">-o 666  : value,发送的值.</span><br></pre></td></tr></table></figure></p>
<p>也可一通过某些命令来获取值发送<br>获取当前登录用户数<br><code>zabbix_sender -z 10.1.93.218 -s 10.1.27.31 -k mytrip -o $(w|sed -n &#39;1,2!p&#39;| wc -l)</code></p>
<p>还可以通过读取文本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-i  # 从文件里面读取hostname、key、value 一行为一条数据</span><br><span class="line">使用空格作为分隔符，如果主机名带空格，那么请使用双引号包起来</span><br><span class="line"></span><br><span class="line">zabbix_sender -z 10.1.93.218 -i a.txt</span><br><span class="line"></span><br><span class="line">cat a.txt</span><br><span class="line">#cat f.txt</span><br><span class="line">10.1.27.31  mytrip 1</span><br><span class="line">10.1.27.31  mytrip2 2</span><br></pre></td></tr></table></figure></p>
<h4 id="web页面"><a href="#web页面" class="headerlink" title="web页面"></a>web页面</h4><p>zabbix server方面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">主机:</span><br><span class="line">  - 主机名称要和 -s 一致</span><br><span class="line">监控项:</span><br><span class="line">  - 创建监控项</span><br><span class="line">  - 类型:(zabbix tripper / 采集器)</span><br><span class="line">  - 键值: 要和 -k 一致</span><br></pre></td></tr></table></figure></p>
<p><code>zabbix_sender</code> 可通过<code>crontab</code>来定时执行.可直接写,也可写成脚本后执行,建议分类编辑为脚本.</p>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix自定义key]]></title>
      <url>/2017/12/23/zabbix%E8%87%AA%E5%AE%9A%E4%B9%89key/</url>
      <content type="html"><![CDATA[<p>当zabbix的key不能满足需求的时候,可以通过自定义key来解决.在客户端配置文件zabbix_angentd.conf里面配置UserParameter.</p>
<a id="more"></a>
<p>参数格式<br><code>UserParameter=key[*],command</code></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Key</td>
<td>唯一. [*]表示里面可以传递多个参数</td>
</tr>
<tr>
<td>Command</td>
<td>需要执行的脚本，key的[]里面的参数一一对应$1到$9，一共9个参数。$0表示脚本命令.</td>
</tr>
</tbody>
</table>
<p>首先去配置文件中,开启include<br><code>Include=/etc/zabbix/zabbix_agentd.d/*.conf</code><br>然后去目录下新建配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#新建配置文件</span><br><span class="line">[root@elk zabbix_agentd.d]# ls</span><br><span class="line">mykey.conf  userparameter_mysql.conf</span><br><span class="line">#编辑配置文件</span><br><span class="line">[root@elk zabbix_agentd.d]# cat mykey.conf </span><br><span class="line">UserParameter = mykey,/etc/zabbix/script/test.sh</span><br><span class="line"></span><br><span class="line">#编辑脚本(路径自定义)</span><br><span class="line">[root@elk zabbix_agentd.d]# cat /etc/zabbix/script/test.sh </span><br><span class="line">#!/usr/bin/env bash</span><br><span class="line">echo &apos;1234324&apos;</span><br></pre></td></tr></table></figure></p>
<p>重启服务<br><code>systemctl restart zabbix-agent.service</code></p>
<p>添加监控项<br>去前端web页面,相关主机上<code>创建监控项</code>即可,键值使用定义的key,如这里的<code>mykey</code>.信息类型根据实际情况指定</p>
<p>其他<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UserParameter=ping[*],echo $1</span><br><span class="line">web键值输入</span><br><span class="line">ping[0] - 将一直返回0</span><br><span class="line">ping[aaa] - 将一直返回 &apos;aaa&apos;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">统计一个文件中有多少行被匹配?</span><br><span class="line">UserParameter=wc[*],grep -c &quot;$2&quot; $1</span><br><span class="line">如下方法将会返回文件中出现指定字符的行数</span><br><span class="line">wc[/etc/passwd,root]</span><br><span class="line">wc[/etc/services,zabbix]</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jenkins安装和部署项目]]></title>
      <url>/2017/11/09/jenkins%E5%AE%89%E8%A3%85%E5%92%8C%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE/</url>
      <content type="html"><![CDATA[<p>大致说下jenkins自动化的流程:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">程序员---------&gt;远程仓库</span><br><span class="line">       提交至     |                           远程主机</span><br><span class="line">                 | 提取                           ↑</span><br><span class="line">                 |                               | 部署</span><br><span class="line">                 ↓       构建[编译,打包]           |</span><br><span class="line">              Jenkins -------------------&gt;Jenkins Server</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h4><p>(根据环境选择是否安装)<br><a href="https://dl1548.github.io/2017/07/12/git客户端最新版安装/">推荐阅读</a></p>
<h4 id="安装maven"><a href="#安装maven" class="headerlink" title="安装maven"></a>安装maven</h4><p>(根据环境选择是否安装)<br>maven用于构建,如果你的环境不需要构建可以不安装<br><a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">选择版本</a>下载<br><code>wget http://mirrors.hust.edu.cn/apache/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.tar.gz</code></p>
<p><em>解压</em><br><code>tar -zxvf 安装包 -C /usr/local</code><br><code>cd /usr/local</code><br><code>mv apache-maven-3.5.2 /usr/local/maven</code> #可选</p>
<p><em>添加环境变量</em><br><code>/etc/profile 或者~/.bash_profile</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#maven目录</span></span><br><span class="line"><span class="built_in">export</span> M2_HOME=/usr/<span class="built_in">local</span>/maven</span><br><span class="line"><span class="comment">#maven的bin目录</span></span><br><span class="line"><span class="built_in">export</span> M2=<span class="variable">$M2_HOME</span>/bin</span><br><span class="line"><span class="comment">#将bin加到PATH变量中</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$M2</span>:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p>
<p><em>配置生效</em><br><code>source /etc/profile</code><br><em>查看</em><br><code>mvn -version</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins /]# mvn -version</span><br><span class="line">Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T15:58:13+08:00)</span><br><span class="line">Maven home: /usr/local/maven</span><br><span class="line">Java version: 1.8.0_151, vendor: Oracle Corporation</span><br><span class="line">Java home: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.x86_64/jre</span><br><span class="line">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class="line">OS name: &quot;linux&quot;, version: &quot;3.10.0-327.el7.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure></p>
<h4 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装jenkins</h4><p>(根据环境必须安装)<br><a href="https://jenkins.io/download/" target="_blank" rel="noopener">官网下载</a>以下摘自官方<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#下载仓库源,导入公钥</span><br><span class="line">sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span><br><span class="line">sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span><br><span class="line"></span><br><span class="line">#安装</span><br><span class="line">yum -y install jenkins</span><br><span class="line">#运行(/usr/lib/jenkins)</span><br><span class="line">java -jar jenkins.war</span><br></pre></td></tr></table></figure></p>
<h4 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h4><p><a href="http://ipaddress:8080/" target="_blank" rel="noopener">http://ipaddress:8080/</a><br>若出现如下内容</p>
<blockquote>
<p>Unlock Jenkins<br>To ensure Jenkins is securely set up by the administrator, a password has been written to the log (not sure where to find it?) and this file on the server:<br>/root/.jenkins/secrets/initialAdminPassword<br>Please copy the password from either location and paste it below.<br>Administrator password</p>
</blockquote>
<p>根据提示,复制密码解锁即可.</p>
<h5 id="通过tomcat启动"><a href="#通过tomcat启动" class="headerlink" title="通过tomcat启动"></a>通过tomcat启动</h5><p><em>安装tomcat</em><br><a href="http://tomcat.apache.org/" target="_blank" rel="noopener">http://tomcat.apache.org/</a><br>下载软件包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-tomcat-7.0.75.tar.gz </span><br><span class="line">mv apache-tomcat-7.0.75 /usr/local/tomcat</span><br><span class="line">mv /usr/lib/jenkins/jenkins.war /usr/local/tomcat/webapps</span><br><span class="line">#启动</span><br><span class="line">/usr/local/tomcat/bin/startup.sh</span><br></pre></td></tr></table></figure></p>
<p>访问<br><a href="http://ipaddress:8080/" target="_blank" rel="noopener">http://ipaddress:8080/</a> jenkins</p>
<h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><p>构建,部署需要两个插件(常用于java)</p>
<blockquote>
<p>Deploy to container Plugin 和  Maven Integration plugin<br>使用git的要安装Git Plugin</p>
</blockquote>
<p>进入jenkins,警告如下</p>
<blockquote>
<p>Your container doesn’t use UTF-8 to decode URLs. If you use non-ASCII characters as a job name etc, this will cause problems. See Containers and Tomcat i18n for more details.</p>
</blockquote>
<p>去tomcat的conf/下修改serverl.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">URIEncoding</span>=<span class="string">"UTF-8"</span>         #添加此参数</span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>jenkins环境至此搭建完毕.</p>
<h4 id="熟悉jenkins"><a href="#熟悉jenkins" class="headerlink" title="熟悉jenkins"></a>熟悉jenkins</h4><p><strong>系统设置</strong></p>
<ul>
<li>包括一些全局设置,工具的设置,证书创建,插件管理等等<h5 id="全局工具设置"><a href="#全局工具设置" class="headerlink" title="全局工具设置"></a>全局工具设置</h5>JKD,GIT,MAVEN等,我的路径都是在<code>/usr/local/..</code> git要注意,写path../git/bin/git</li>
</ul>
<h5 id="安全设置"><a href="#安全设置" class="headerlink" title="安全设置"></a>安全设置</h5><p>如果要用api ,把访问控制的<code>Allow anonymous read access</code>.不然会报错.</p>
<h5 id="认证配置"><a href="#认证配置" class="headerlink" title="认证配置"></a>认证配置</h5><p>Credentials —&gt;System　—&gt; Global credentials (unrestricted) —&gt; Add Credentials<br>一般写用户名，密码描述即可．ＩＤ会自动生成且唯一</p>
<h5 id="插件管理"><a href="#插件管理" class="headerlink" title="插件管理"></a>插件管理</h5><p><code>Deploy to Containers</code> - 发布应用到tomcat(一般使用ssh)<br><code>Maven Integration</code>  - maven 集成<br><code>Publish Over SSH</code> — 该插件远程ssh登录server执行命令</p>
<p><code>Git Plugin</code> — 该插件允许使用GIT作为一个构建SCM(源代码控制管理系统)，但必须使用Git 1.3.3及以上<br><code>Subversion Plugin</code> — 该插件增加对svn(通过SVNKit)的支持。<br><code>Role-based Authorization Strategy</code> jenkins 用户权限管理</p>
<ul>
<li>系统管理-Configure Global Security-授权策略-Role-Based Strategy，勾选Role-Based Strategy保存</li>
</ul>
<p>以及其他按需安装的插件</p>
<h4 id="部署静态页面"><a href="#部署静态页面" class="headerlink" title="部署静态页面"></a>部署静态页面</h4><h5 id="部署到httpd"><a href="#部署到httpd" class="headerlink" title="部署到httpd"></a>部署到httpd</h5><p>温习下流程:</p>
<blockquote>
<ol>
<li>程序员提交代码到远程仓库.</li>
<li>jenkins 从远程仓库下载代码.</li>
<li>jenkins 构建(编译/打包)</li>
<li>jenkins 部署</li>
<li>完毕</li>
</ol>
</blockquote>
<p>代码的下载(git)要用到git plug插件(svn要用到Subversion Plug-in),部署到远端服务器需要Publish Over SSH(httpd,nginx等).如果要部署到tomcat,jboss建议使用Deploy to container Plugin,当然ssh(通过脚本)也可以</p>
<ul>
<li>新建一个自由风格的项目 命名为free(名字自定义)</li>
<li><p><code>General</code>页面,点开高级选项卡,手动指定此项目的工作空间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/jenkins/workspace/free #自定义路径</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>源码管理</code> 页面选择代码托管方式</p>
<ul>
<li>一般会有三个选择 None,Git,Subversion.根据情况选择.我选择GIT.根据情况填写仓库URL以及添加秘钥.(秘钥可以在<strong>Credentials</strong> 下先添加,这里选择.)<br>此时jenkins和git打通.</li>
</ul>
</li>
<li><p><code>构建</code> 页面选择<strong>增加构建步骤</strong>–<code>execute shell</code>用来执行脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/jenkins/workspace/free;  #切换到项目工作空间</span><br><span class="line">tar cf free.tar *;   #执行shell 打包文件</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>构建后操作</code>页面<strong>增加构建后步骤</strong>–<code>send build artifacts over SSH</code>(通过SSH将构建的东西发送到远端主机) 这个选择需要安装上文提到的ssh插件.</p>
<ul>
<li><strong>name</strong>: 这个选择需要去<code>系统管理</code>–<code>系统设置</code>–<code>Publish over SSH</code> 中添加ssh服务器.(name:自定义.hostname:主机地址.username:用户名,Remote Directory:远端主机目录,不建议填写,建议在项目下填写.点开<code>高级</code>,输入密码.点击<code>test configuration</code>,显示返回成功即可)</li>
<li><strong>Transfer Set Source files</strong> :<code>*.tar</code> 注意这个路径是针对工作空间而言的相对路径.</li>
<li><strong>Remote directory</strong> : 远端主机目录 <code>/var/www/html/</code></li>
<li><strong>Exec command</strong>: 传输后执行的命令,针对远端主机的<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd  /var/www/html/;</span><br><span class="line">tar xvf free.tar; </span><br><span class="line">保存,执行构建任务即可.</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h4 id="邮件提醒"><a href="#邮件提醒" class="headerlink" title="邮件提醒"></a>邮件提醒</h4><p>插件安装 <code>Email Extension Plugin</code></p>
<p><code>Jenkins Location</code> 中设置默认 <code>系统管理员邮件地址</code></p>
<p>在<code>系统管理</code> &gt;　<code>`系统设置</code>　中找到 <code>Extended E-mail Notification</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SMTP server : smtp.qiye.163.com</span><br><span class="line">Default user E-mail suffix : @company.com</span><br><span class="line">Default Content Type: HTML...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Default Recipients  : 设置默认收件人</span><br><span class="line">Default Content　参考如下文</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>$&#123;ENV, var="JOB_NAME"&#125;-第$&#123;BUILD_NUMBER&#125;次构建日志<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">leftmargin</span>=<span class="string">"8"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">topmargin</span>=<span class="string">"8"</span> <span class="attr">marginheight</span>=<span class="string">"4"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">offset</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"95%"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#0B610B"</span>&gt;</span>构建信息<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hr</span> <span class="attr">size</span>=<span class="string">"2"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">align</span>=<span class="string">"center"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>项目名称 ： $&#123;PROJECT_NAME&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>构建编号 ： 第$&#123;BUILD_NUMBER&#125;次构建<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>触发原因： $&#123;CAUSE&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>构建日志： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;BUILD_URL&#125;console"</span>&gt;</span>$&#123;BUILD_URL&#125;console<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>构建  Url ： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;BUILD_URL&#125;"</span>&gt;</span>$&#123;BUILD_URL&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>工作目录 ： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;PROJECT_URL&#125;ws"</span>&gt;</span>$&#123;PROJECT_URL&#125;ws<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>项目  Url ： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;PROJECT_URL&#125;"</span>&gt;</span>$&#123;PROJECT_URL&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#0B610B"</span>&gt;</span>变更集<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hr</span> <span class="attr">size</span>=<span class="string">"2"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">align</span>=<span class="string">"center"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;JELLY_SCRIPT,template="html"&#125;<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hr</span> <span class="attr">size</span>=<span class="string">"2"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">align</span>=<span class="string">"center"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后回到项目中．</p>
<p>在构建后操作中<code>Editable Email Notification</code></p>
<p><code>高级</code> –&gt; <code>Triggers</code> –&gt; <code>Add Trigger</code> —&gt; <code>Recipient List</code>这里写收件人,多个逗号分割 </p>
<p>保存即可</p>
<hr>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> jenkins </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[nginx日志变量]]></title>
      <url>/2017/10/22/nginx%E6%97%A5%E5%BF%97%E5%8F%98%E9%87%8F/</url>
      <content type="html"><![CDATA[<p>关于nginx日志变量所代表的含义解释.<br><a id="more"></a></p>
<hr>
<h4 id="nginx日志变量-log-format"><a href="#nginx日志变量-log-format" class="headerlink" title="nginx日志变量(log_format)"></a>nginx日志变量(log_format)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">$args                    #请求中的参数值</span><br><span class="line">$query_string            #同 $args</span><br><span class="line">$arg_NAME                #GET请求中NAME的值</span><br><span class="line">$is_args                 #如果请求中有参数，值为&quot;?&quot;，否则为空字符串</span><br><span class="line">$uri                     #请求中的当前URI(不带请求参数，参数位于$args)，可以不同于浏览器传递的$request_uri的值，它可以通过内部重定向，或者使用index指令进行修改，$uri不包含主机名，如&quot;/foo/bar.html&quot;。</span><br><span class="line">$document_uri            #同 $uri</span><br><span class="line">$document_root           #当前请求的文档根目录或别名</span><br><span class="line">$host                    #优先级：HTTP请求行的主机名&gt;&quot;HOST&quot;请求头字段&gt;符合请求的服务器名.请求中的主机头字段，如果请求中的主机头不可用，则为服务器处理请求的服务器名称</span><br><span class="line">$hostname                #主机名</span><br><span class="line">$https                   #如果开启了SSL安全模式，值为&quot;on&quot;，否则为空字符串。</span><br><span class="line">$binary_remote_addr      #客户端地址的二进制形式，固定长度为4个字节</span><br><span class="line">$body_bytes_sent         #传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的&quot;%B&quot;参数保持兼容</span><br><span class="line">$bytes_sent              #传输给客户端的字节数</span><br><span class="line">$connection              #TCP连接的序列号</span><br><span class="line">$connection_requests     #TCP连接当前的请求数量</span><br><span class="line">$content_length          #&quot;Content-Length&quot; 请求头字段</span><br><span class="line">$content_type            #&quot;Content-Type&quot; 请求头字段</span><br><span class="line">$cookie_name             #cookie名称</span><br><span class="line">$limit_rate              #用于设置响应的速度限制</span><br><span class="line">$msec                    #当前的Unix时间戳</span><br><span class="line">$nginx_version           #nginx版本</span><br><span class="line">$pid                     #工作进程的PID</span><br><span class="line">$pipe                    #如果请求来自管道通信，值为&quot;p&quot;，否则为&quot;.&quot;</span><br><span class="line">$proxy_protocol_addr     #获取代理访问服务器的客户端地址，如果是直接访问，该值为空字符串</span><br><span class="line">$realpath_root           #当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径</span><br><span class="line">$remote_addr             #客户端地址</span><br><span class="line">$remote_port             #客户端端口</span><br><span class="line">$remote_user             #用于HTTP基础认证服务的用户名</span><br><span class="line">$request                 #代表客户端的请求地址</span><br><span class="line">$request_body            #客户端的请求主体：此变量可在location中使用，将请求主体通过proxy_pass，fastcgi_pass，uwsgi_pass和scgi_pass传递给下一级的代理服务器</span><br><span class="line">$request_body_file       #将客户端请求主体保存在临时文件中。文件处理结束后，此文件需删除。如果需要之一开启此功能，需要设置client_body_in_file_only。如果将次文件传 递给后端的代理服务器，需要禁用request body，即设置proxy_pass_request_body off，fastcgi_pass_request_body off，uwsgi_pass_request_body off，or scgi_pass_request_body off</span><br><span class="line">$request_completion      #如果请求成功，值为&quot;OK&quot;，如果请求未完成或者请求不是一个范围请求的最后一部分，则为空</span><br><span class="line">$request_filename        #当前连接请求的文件路径，由root或alias指令与URI请求生成</span><br><span class="line">$request_length          #请求的长度 (包括请求的地址，http请求头和请求主体)</span><br><span class="line">$request_method          #HTTP请求方法，通常为&quot;GET&quot;或&quot;POST&quot;</span><br><span class="line">$request_time            #处理客户端请求使用的时间,单位为秒，精度毫秒； 从读入客户端的第一个字节开始，直到把最后一个字符发送给客户端后进行日志写入为止。</span><br><span class="line">$request_uri             #这个变量等于包含一些客户端请求参数的原始URI，它无法修改，请查看$uri更改或重写URI，不包含主机名，例如：&quot;/cnphp/test.php?arg=freemouse&quot;</span><br><span class="line">$scheme                  #请求使用的Web协议，&quot;http&quot; 或 &quot;https&quot;</span><br><span class="line">$server_addr             #服务器端地址，需要注意的是：为了避免访问linux系统内核，应将ip地址提前设置在配置文件中</span><br><span class="line">$server_name             #服务器名</span><br><span class="line">$server_port             #服务器端口</span><br><span class="line">$server_protocol         #服务器的HTTP版本，通常为 &quot;HTTP/1.0&quot; 或 &quot;HTTP/1.1&quot;</span><br><span class="line">$status                  #HTTP响应代码</span><br><span class="line">$time_iso8601            #服务器时间的ISO 8610格式</span><br><span class="line">$time_local              #服务器时间（LOG Format 格式）</span><br><span class="line">$cookie_NAME             #客户端请求Header头中的cookie变量，前缀&quot;$cookie_&quot;加上cookie名称的变量，该变量的值即为cookie名称的值</span><br><span class="line">$http_NAME               #匹配任意请求头字段；变量名中的后半部分NAME可以替换成任意请求头字段，如在配置文件中需要获取http请求头：&quot;Accept-Language&quot;，$http_accept_language即可</span><br><span class="line">$http_cookie</span><br><span class="line">$http_host               #请求地址，即浏览器中你输入的地址（IP或域名）</span><br><span class="line">$http_referer            #url跳转来源,用来记录从那个页面链接访问过来的</span><br><span class="line">$http_user_agent         #用户终端浏览器等信息</span><br><span class="line">$http_x_forwarded_for  #客户端地址(有反向代理时使用)</span><br><span class="line">$sent_http_NAME          #可以设置任意http响应头字段；变量名中的后半部分NAME可以替换成任意响应头字段，如需要设置响应头Content-length，$sent_http_content_length即可</span><br><span class="line">$sent_http_cache_control</span><br><span class="line">$sent_http_connection</span><br><span class="line">$sent_http_content_type</span><br><span class="line">$sent_http_keep_alive</span><br><span class="line">$sent_http_last_modified</span><br><span class="line">$sent_http_location</span><br><span class="line">$sent_http_transfer_encoding</span><br></pre></td></tr></table></figure>
<h4 id="默认日志格式"><a href="#默认日志格式" class="headerlink" title="默认日志格式"></a>默认日志格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot;;</span><br><span class="line"></span><br><span class="line">#main为日志格式名</span><br></pre></td></tr></table></figure>
<p>可以根据自己的情况定义不同的log格式.然后在日志的 path后调用<br><code>access_log  logs/it_access.log  main;</code></p>
<p>当日志文件中记录的值为”-“时，表示为空 .</p>
<h4 id="自定义的格式"><a href="#自定义的格式" class="headerlink" title="自定义的格式"></a>自定义的格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log_format logstash &apos;$remote_addr|$http_host|$request|$http_referer|$status |$http_user_agent|$request_time|$remote_user&apos;;</span><br></pre></td></tr></table></figure>
<p>个人定义了个logstash需要的日志格式.,这样就可以在logstash中进行match匹配正则了<br>如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">filter&#123;</span><br><span class="line">    grok&#123;</span><br><span class="line">        match =&gt; &#123;</span><br><span class="line">            &quot;message&quot; =&gt; &quot;%&#123;IP:clientIP&#125;\|%&#123;IP:serverIP&#125;\|%&#123;DATA:req_addr&#125;\|%&#123;DATA:req_url&#125;\|%&#123;DATA:req_status&#125;\|%&#123;DATA:req_browder&#125;\|%&#123;DATA:req_duration&#125;\|%&#123;DATA:req_user&#125;&quot;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
]]></content>
      
        <categories>
            
            <category> web </category>
            
            <category> nginx </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[logstash配置文件]]></title>
      <url>/2017/10/22/logstash%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>logstash以文件启动–配置文件编写<br><a id="more"></a></p>
<hr>
<blockquote>
<p>备忘</p>
</blockquote>
<h4 id="redis配置"><a href="#redis配置" class="headerlink" title="redis配置"></a>redis配置</h4><p>主要分三大块,input,filter,output,三块为同一级<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这里的key值,来源filebeat采集时output的定义.</span></span><br><span class="line">input &#123;</span><br><span class="line">    redis &#123;</span><br><span class="line">        host =&gt; <span class="string">'10.1.27.31'</span></span><br><span class="line">        data_type =&gt; <span class="string">'list'</span></span><br><span class="line">        key =&gt; <span class="string">'network'</span></span><br><span class="line">    &#125;</span><br><span class="line">    redis &#123;</span><br><span class="line">        host =&gt; <span class="string">'10.1.27.31'</span></span><br><span class="line">        data_type =&gt; <span class="string">'list'</span></span><br><span class="line">        key =&gt; <span class="string">'nginx-202'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#这里的type来源于filebeat采集时input中的定义(document_type)</span></span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">    <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">'93.218-zabbix'</span> &#123;</span><br><span class="line">        grok&#123;</span><br><span class="line">            match =&gt; &#123;</span><br><span class="line">                <span class="string">"message"</span> =&gt; <span class="string">"%&#123;IP:clientIP&#125;\|%&#123;IP:serverIP&#125;\|%&#123;DATA:req_addr&#125;\|%&#123;DATA:req_url&#125;\|%&#123;DATA:req_status&#125;\|%&#123;DATA:req_browder&#125;\|%&#123;DATA:req_duration&#125;\|%&#123;DATA:req_user&#125;"</span></span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#这里的match要根据日志格式进行匹配,这个主要是Nginx的日志</span></span><br><span class="line"><span class="comment">#Nginx中对日志进行了自定的格式化.nginx参考格式</span></span><br><span class="line"><span class="comment">#'$remote_addr|$http_host|$request|$http_referer|$status|$http_user_agent|$request_time|$remote_user';</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">'93.218-it'</span> &#123;</span><br><span class="line">        grok&#123;</span><br><span class="line">            match =&gt; &#123;</span><br><span class="line">                <span class="string">"message"</span> =&gt; <span class="string">"%&#123;IP:clientIP&#125;\|%&#123;IP:serverIP&#125;\|%&#123;DATA:req_addr&#125;\|%&#123;DATA:req_status&#125;\|%&#123;DATA:req_browder&#125;\|%&#123;DATA:req_duration&#125;\|%&#123;DATA:req_user&#125;"</span></span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#同上,参考格式</span></span><br><span class="line"><span class="comment">#'$remote_addr|$http_host|$request|$status|$http_user_agent|$request_time|$remote_user';</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过type判断,定义不同的index,kibana就能建立不同的map</span></span><br><span class="line">output &#123;</span><br><span class="line">    <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">'93.218-zabbix'</span> &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">            hosts =&gt; <span class="string">'10.1.27.31'</span></span><br><span class="line">            codec =&gt; <span class="string">'json'</span></span><br><span class="line">            index =&gt; <span class="string">'93.218-zabbix-%&#123;+YYYY.MM.dd&#125;'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">'93.218-it'</span> &#123;</span><br><span class="line">        elasticsearch &#123;</span><br><span class="line">            hosts =&gt; <span class="string">'10.1.27.31'</span></span><br><span class="line">            codec =&gt; <span class="string">'json'</span></span><br><span class="line">            index =&gt; <span class="string">'93.218-it-%&#123;+YYYY.MM.dd&#125;'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>过滤做好之后,可根据match的字段进行匹配,看自己想看的结果,以及后续的画图等</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-e0e646aa68140545.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="kibana.jpg"></p>
<hr>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> elk </category>
            
        </categories>
        
        
        <tags>
            
            <tag> elk </tag>
            
            <tag> logstash </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[rsyslog网络日志收集]]></title>
      <url>/2017/10/18/rsyslog%E7%BD%91%E7%BB%9C%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/</url>
      <content type="html"><![CDATA[<p>网络设备的日志较分散,集中管理一下,看日志就方便多了<br><a id="more"></a></p>
<hr>
<blockquote>
<p>软件rsyslog<br>centos7 默认安装</p>
</blockquote>
<h4 id="编辑参数"><a href="#编辑参数" class="headerlink" title="编辑参数"></a>编辑参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/rsyslog</span><br><span class="line">修改如下</span><br><span class="line">SYSLOGD_OPTIONS=&quot;-m 0 -r&quot;</span><br><span class="line">-m 0表示不在日志中添加时间戳消息，-r 表示允许接收外来日</span><br></pre></td></tr></table></figure>
<h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rsyslog.conf</span><br><span class="line">修改如下</span><br><span class="line"># Provides UDP syslog reception</span><br><span class="line">$ModLoad imudp #去掉注释</span><br><span class="line">$UDPServerRun 514#去掉注释</span><br><span class="line"></span><br><span class="line"># Provides TCP syslog reception</span><br><span class="line">$ModLoad imtcp#去掉注释</span><br><span class="line">$InputTCPServerRun 514#去掉注释</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### GLOBAL DIRECTIVES ####</span><br><span class="line">#添加日志接收模板：</span><br><span class="line">$template IpTemplate,&quot;/net-log/%FROMHOST-IP%_%$YEAR%-%$MONTH%-%$DAY%.log&quot;</span><br><span class="line">:FROMHOST-IP, !isequal, &quot;127.0.0.1&quot; ?IpTemplate #本地的不保存</span><br><span class="line">#*.* ?IpTemplate   #表示所有的日志都通过模板进行保存</span><br><span class="line">&amp; ~</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">$template IpTemplate 指令让rsyslog进程把日志文件写入到/net-log下指定的log文件中，指定的log文件使用客户端的IP地址命名。</span><br><span class="line">&amp; ~表示的是重定向规则，告知rsyslog进程无需进一步处理日志消息，无需写入本地日志文件。</span><br><span class="line"></span><br><span class="line">#如果要把不同服务器发送过来的日志保存到不同的文件, 可以这样操作:  </span><br><span class="line">#精确分类</span><br><span class="line">:fromhost-ip, isequal, “1.1.1.1″ /var/log/a.log  </span><br><span class="line">:FROMHOST-IP, isequal, “2.2.2.2″ /var/log/2.log  </span><br><span class="line">#根据网段分类</span><br><span class="line">:FROMHOST-IP, startswith, “3.3.3.” /var/log/c.log  </span><br><span class="line">:FROMHOST-IP, startswith, “4.4.4.” /var/log/d.log</span><br></pre></td></tr></table></figure>
<h4 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart rsyslog </span><br><span class="line">#查看进程状态。</span><br><span class="line">netstat -tulpn | grep rsyslog</span><br></pre></td></tr></table></figure>
<h4 id="配置交换机"><a href="#配置交换机" class="headerlink" title="配置交换机"></a>配置交换机</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">全局模式中：</span><br><span class="line"> logging &lt;ip-address|ipv6-address|hostname&gt;</span><br><span class="line"> logging on</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> elk </category>
            
        </categories>
        
        
        <tags>
            
            <tag> elk </tag>
            
            <tag> rsyslog </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[filebeat客户端]]></title>
      <url>/2017/10/16/filebeat%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
      <content type="html"><![CDATA[<p>Filebeat是一个日志文件托运工具，在你的服务器上filebeat后，它会监控日志目录或者指定的日志文件，追踪读取这些文件（追踪文件的变化，不停的读)并且转发这些信息到elasticsearch/logstarsh/redis/kafka/等等中<br><a id="more"></a></p>
<hr>
<p>version : 5.6</p>
<p>日志的搜集,选择filebeat还是logstash 根据个人情况,filebeat相对来说更轻便</p>
<h4 id="安装filebeat"><a href="#安装filebeat" class="headerlink" title="安装filebeat"></a>安装filebeat</h4><p><a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-installation.html" target="_blank" rel="noopener">官网说明</a><br>前提ELK已部署完毕.个人实验是输出到redis<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DEB:</span><br><span class="line">curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.6.3-amd64.deb</span><br><span class="line">sudo dpkg -i filebeat-5.6.3-amd64.deb</span><br><span class="line"></span><br><span class="line">RPM:</span><br><span class="line">curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.6.3-x86_64.rpm</span><br><span class="line">sudo rpm -vi filebeat-5.6.3-x86_64.rpm</span><br></pre></td></tr></table></figure></p>
<h4 id="filebeat-yml配置"><a href="#filebeat-yml配置" class="headerlink" title="filebeat.yml配置"></a><a href="https://www.elastic.co/guide/en/beats/filebeat/current/configuring-howto-filebeat.html" target="_blank" rel="noopener">filebeat.yml配置</a></h4><p>默认路径在 /etc/filebeat/filebeat.yml<br>模板中有各种说明,输出到各种环境的配置,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#以redis为例</span><br><span class="line">- input_type: log</span><br><span class="line">  # Paths that should be crawled and fetched. Glob based paths.</span><br><span class="line">  paths:</span><br><span class="line">    - /usr/local/nginx-1.12.1/logs/*.log</span><br><span class="line">  # - /usr/local/nginx-1.12.1/logs/*/*.log #子目录的log也会采集</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">多日志,不同源采集:</span><br><span class="line">filebeat.prospectors:</span><br><span class="line"></span><br><span class="line">- input_type: log</span><br><span class="line">  paths:</span><br><span class="line">    - /net-log/10.4.32.1*.log</span><br><span class="line">  fields:</span><br><span class="line">    log_source: 10.4.32.1</span><br><span class="line">  fields_under_root: true</span><br><span class="line">  document_type: 10.4.32.1</span><br><span class="line"></span><br><span class="line">- input_type: log</span><br><span class="line">  paths:</span><br><span class="line">    - /net-log/127.0.0.1*.log</span><br><span class="line">  fields:</span><br><span class="line">    log_source: 127.0.0.1</span><br><span class="line">  fields_under_root: true</span><br><span class="line">  document_type: 127.0.0.1</span><br><span class="line"></span><br><span class="line">#fields_under_root: true </span><br><span class="line">#此配置使field字典的数据以顶级格式出现,</span><br><span class="line">#如果字段已存在,则覆盖.</span><br><span class="line">#document_type: 127.0.0.1,定义了type值,此值可在logstash以文件启动的配置中,if[&apos;type&apos;] == 或者 if value in [&apos;type&apos;] 进行判断归类.以为filter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    -</span><br><span class="line">       paths:</span><br><span class="line">          - /home/b/*.log</span><br><span class="line">       fields:</span><br><span class="line">         log_source: b</span><br><span class="line"></span><br><span class="line">#--------------------------------redis---------------------</span><br><span class="line">output.redis:</span><br><span class="line">    hosts: [&quot;10.1.27.24&quot;]   #必须</span><br><span class="line">   #password: &quot;your pwd&quot;</span><br><span class="line">    db: 0</span><br><span class="line">    key: &quot;nginx&quot;   #必须</span><br><span class="line">    timeout: 10</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##key值的作用</span><br><span class="line">key值会传递给redis/es/logstash等,所以key的定义可以起到一定日志分类的作用.</span><br><span class="line">logstash可以根据key值决定取出哪些值.存到es或其他存储中</span><br></pre></td></tr></table></figure></p>
<h5 id="参考-logstash文件启动配置"><a href="#参考-logstash文件启动配置" class="headerlink" title="参考(logstash文件启动配置)"></a>参考(logstash文件启动配置)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">logstash的简单配置</span><br><span class="line">input &#123;</span><br><span class="line">    redis &#123;</span><br><span class="line">        host =&gt; &apos;10.1.27.24&apos;</span><br><span class="line">        data_type =&gt; &apos;list&apos;</span><br><span class="line">        key =&gt; &apos;nginx&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter&#123;</span><br><span class="line">    #if [] ...</span><br><span class="line">    grok&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">#这里可以加判断,if &apos;a&apos; in [type]&#123;.....index =&gt; &apos;a-...&apos;&#125;</span><br><span class="line">#这样可以对日志更细致的划分,索引建立的更细致</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts =&gt; &apos;10.1.27.23&apos;</span><br><span class="line">        codec =&gt; &apos;json&apos;</span><br><span class="line">        index =&gt; &apos;nginx-%&#123;+YYYY.MM.dd&#125;&apos;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-configuration-details.html" target="_blank" rel="noopener">输出到各环境的配置kafka,redis,es,logstash等</a></p>
<h4 id="启动filebeat"><a href="#启动filebeat" class="headerlink" title="启动filebeat"></a>启动filebeat</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm安装：</span><br><span class="line"></span><br><span class="line">sudo /etc/init.d/filebeat start</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> elk </category>
            
        </categories>
        
        
        <tags>
            
            <tag> elk </tag>
            
            <tag> filebeat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[elk部署]]></title>
      <url>/2017/10/14/elk%E9%83%A8%E7%BD%B2/</url>
      <content type="html"><![CDATA[<p><img src="/images/elk.png" alt="elk" align="center"><br>ELK并不是单个软件，它是一套解决方案。<br><a href="https://www.elastic.co/cn/" target="_blank" rel="noopener">ELK</a>由Elasticsearch、Logstash和Kibana三部分组件组成<br>(封面图有个歧义,kinaba是从es中取数据的,为了方便理解传值,和logstash进行了连接.)<br><a id="more"></a></p>
<hr>
<blockquote>
<p>Elasticsearch是个开源分布式搜索引擎<br>Logstash开源的工具，它可以对你的日志进行收集、分析，并将其存储供以后使用<br>kibana 开源和免费的工具，它可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面</p>
</blockquote>
<p><strong>默认端口号：</strong></p>
<ul>
<li>elasticsearch：9200 9300</li>
<li>logstash     : 9301</li>
<li>kinaba       : 5601</li>
</ul>
<p><em>流程图</em></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-5496327305930aee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="基本流程图.png"></p>
<p><a href="https://www.elastic.co/cn/downloads" target="_blank" rel="noopener">下载相关软件包</a><br>本次实验我使用的包版本如下：elasticsearch-5.6.2.tar.gz，kibana-5.6.2-linux-x86_64.tar.gz ，logstash-5.6.2.tar.gz，注意安装包版本于java版本的兼容行，这里使用的是java1.8+，centos7。</p>
<h3 id="logstash"><a href="#logstash" class="headerlink" title="logstash"></a>logstash</h3><h4 id="安装logstash"><a href="#安装logstash" class="headerlink" title="安装logstash"></a>安装logstash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装java，logstash运行依赖java，直接yum安装</span></span><br><span class="line">yum -y install java-1.8.0</span><br><span class="line">java -version</span><br><span class="line"><span class="comment">#显示如下，安装成功</span></span><br><span class="line">openjdk version <span class="string">"1.8.0_144"</span></span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_144-b01)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.144-b01, mixed mode)</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压logstash包</span></span><br><span class="line">tar -zxvf logstash-5.6.2.tar.gz -C /usr/<span class="built_in">local</span>/</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置环境变量，方便敲命令</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export PATH=\$PATH:/usr/local/logstash-5.6.2/bin"</span> &gt; /etc/profile.d/logstash.sh</span><br><span class="line">. /etc/profile</span><br></pre></td></tr></table></figure>
<h4 id="运行logstash"><a href="#运行logstash" class="headerlink" title="运行logstash"></a>运行logstash</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">logstash -e 'input&#123;stdin&#123;&#125;&#125;output&#123;stdout&#123;codec=&gt;rubydebug&#125;&#125;'</span><br><span class="line">#等待数秒后，随便输入字符串，将会得到如下json格式返回</span><br><span class="line"></span><br><span class="line">test</span><br><span class="line">&#123;</span><br><span class="line">      "@version" =&gt; "1",</span><br><span class="line">          "host" =&gt; "0.0.0.0",</span><br><span class="line">    "@timestamp" =&gt; 2017-10-10T05:34:17.427Z,</span><br><span class="line">       "message" =&gt; "test"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#常用参数解释</span><br><span class="line">-e :指定logstash的配置信息，可以用于快速测试;</span><br><span class="line">-f :指定logstash的配置文件；可以用于生产环境;</span><br></pre></td></tr></table></figure>
<h4 id="以配置文件运行logstash"><a href="#以配置文件运行logstash" class="headerlink" title="以配置文件运行logstash"></a>以配置文件运行logstash</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master config]# cat simple.conf </span><br><span class="line">input &#123; stdin &#123;&#125; &#125;</span><br><span class="line">output &#123;</span><br><span class="line">   stdout &#123; codec=&gt; rubydebug &#125;</span><br><span class="line">&#125;</span><br><span class="line">logstash -f simple.conf</span><br></pre></td></tr></table></figure>
<h4 id="输出到redis"><a href="#输出到redis" class="headerlink" title="输出到redis"></a>输出到redis</h4><p>redis要提前准备<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># cat logstash_to_redis.conf</span><br><span class="line">input &#123; stdin &#123; &#125; &#125;</span><br><span class="line">output &#123;</span><br><span class="line">    stdout &#123; codec =&gt; rubydebug &#125;</span><br><span class="line">    redis &#123;</span><br><span class="line">        host =&gt; &apos;REDIS IP &apos;</span><br><span class="line">        data_type =&gt; &apos;list&apos;</span><br><span class="line">        key =&gt; &apos;logstash:redis&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h5 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h5><p><a href="https://redis.io/download" target="_blank" rel="noopener">下载redis</a><br><a href="http://www.runoob.com/redis/redis-tutorial.html" target="_blank" rel="noopener">学习地址</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf redis-4.0.2.tar.gz -C /usr/local/</span><br><span class="line">cd  redis-4.0.2</span><br><span class="line">make</span><br><span class="line">#如果要执行make test 那么需要安装tcl</span><br><span class="line">#yum -y install tcl</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">##如若报错</span><br><span class="line">zmalloc.h:50:31: error: jemalloc/jemalloc.h: No such file or directory</span><br><span class="line">zmalloc.h:55:2: error: #error &quot;Newer version of jemalloc required&quot;</span><br><span class="line">make[1]: *** [adlist.o] Error 1</span><br><span class="line">make[1]: Leaving directory `/data0/src/redis-version/src&apos;</span><br><span class="line">make: *** [all] Error 2</span><br><span class="line">#解决办法是：</span><br><span class="line">make MALLOC=libc</span><br></pre></td></tr></table></figure></p>
<h5 id="运行redis"><a href="#运行redis" class="headerlink" title="运行redis"></a>运行redis</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#修改配置</span><br><span class="line">/usr/local/redis-version/redis.conf</span><br><span class="line">#修改 </span><br><span class="line">daemonize 为 yes #设置后台启动</span><br><span class="line">bind 为 0.0.0.0 #设置允许远程的地址</span><br><span class="line">cd src</span><br><span class="line">redis-server ../redis.conf</span><br><span class="line"></span><br><span class="line">#查看进行(默认为6379端口)</span><br><span class="line">ps -aux | grep redis </span><br><span class="line"></span><br><span class="line">#通过客户端登录</span><br><span class="line">/usr/local/redis-version/src/redis-cli </span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br><span class="line">测试redis正常</span><br></pre></td></tr></table></figure>
<h4 id="输入到redis"><a href="#输入到redis" class="headerlink" title="输入到redis"></a>输入到redis</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@master config]# cat redis.conf </span><br><span class="line">input &#123; stdin &#123; &#125; &#125;</span><br><span class="line">output &#123;</span><br><span class="line">    stdout &#123; codec =&gt; rubydebug &#125;</span><br><span class="line">    redis &#123;</span><br><span class="line">        host =&gt; &apos;10.1.27.24&apos;</span><br><span class="line">        data_type =&gt; &apos;list&apos;</span><br><span class="line">        key =&gt; &apos;logstash:redis&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#运行 logstash -f redis.conf</span><br><span class="line">输入test，返回如下</span><br><span class="line">&#123;</span><br><span class="line">      &quot;@version&quot; =&gt; &quot;1&quot;,</span><br><span class="line">          &quot;host&quot; =&gt; &quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;@timestamp&quot; =&gt; 2017-10-10T06:25:42.830Z,</span><br><span class="line">       &quot;message&quot; =&gt; &quot;test&quot;</span><br><span class="line">&#125;</span><br><span class="line">去redis查看</span><br><span class="line">[root@slave redis-4.0.2]# ./src/redis-cli monitor #这个要在logstash前打开</span><br><span class="line">OK</span><br><span class="line">1507616746.341355 [0 10.1.27.23:59337] &quot;rpush&quot; &quot;logstash:redis&quot; &quot;&#123;\&quot;@version\&quot;:\&quot;1\&quot;,\&quot;host\&quot;:\&quot;0.0.0.0\&quot;,\&quot;@timestamp\&quot;:\&quot;2017-10-10T06:25:42.830Z\&quot;,\&quot;message\&quot;:\&quot;test\&quot;&#125;&quot;</span><br></pre></td></tr></table></figure>
<h4 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup  logstash -f /usr/local/logstash-version/config/conf.d/filename.conf  &amp;&gt;/dev/null &amp;</span><br></pre></td></tr></table></figure>
<h3 id="elasticsearch"><a href="#elasticsearch" class="headerlink" title="elasticsearch"></a>elasticsearch</h3><h4 id="安装Elasticsearch"><a href="#安装Elasticsearch" class="headerlink" title="安装Elasticsearch"></a>安装Elasticsearch</h4><p>默认不能用root用户启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#添加用户和组</span><br><span class="line">groupadd es</span><br><span class="line">useradd es -g es -p password</span><br><span class="line">chown -R es:es /usr/local/elasticsearch-5.6.2</span><br><span class="line">#  启动ES（3种方式）</span><br><span class="line">su - es</span><br><span class="line">/usr/local/elasticsearch-5.6.2/bin/elasticsearch</span><br><span class="line">/usr/local/elasticsearch-5.6.2/bin/elasticsearch -d #守护进程方式启动</span><br><span class="line">nohup /usr/local/elasticsearch-5.6.2/bin/elasticsearch &gt; /var/log/es.log 2&gt;&amp;1 &amp; #推荐</span><br></pre></td></tr></table></figure></p>
<h5 id="es报错解决方案"><a href="#es报错解决方案" class="headerlink" title="es报错解决方案"></a>es报错解决方案</h5> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ERROR: [2] bootstrap checks failed</span><br><span class="line">[1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</span><br><span class="line">[2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span><br><span class="line"></span><br><span class="line">【1】无法创建文件，用户最大可创建文件数太小</span><br><span class="line">#切换到root用户</span><br><span class="line">vim /etc/security/limits.conf</span><br><span class="line">#添加以下内容</span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 131072</span><br><span class="line">* soft nproc 2048</span><br><span class="line">* hard nproc 4096</span><br><span class="line">#普通用户可以使用内存锁</span><br><span class="line">* soft memlock unlimited   </span><br><span class="line">* hard memlock unlimited</span><br><span class="line">【2】虚拟内存太小</span><br><span class="line">#切换到root</span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">#添加内容：</span><br><span class="line">vm.max_map_count=655360</span><br><span class="line">#运行命令生效</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>
<h4 id="检查es启动状态-并访问"><a href="#检查es启动状态-并访问" class="headerlink" title="检查es启动状态,并访问"></a>检查es启动状态,并访问</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# netstat -tnlp |grep java</span><br><span class="line">tcp6       0      0 :::9200                 :::*                    LISTEN      14610/java          </span><br><span class="line">tcp6       0      0 :::9300                 :::*                    LISTEN      14610/java</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#http://IPADDRESS:9200/</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span> : <span class="string">"-fiwSlM"</span>,</span><br><span class="line">  "cluster_name" : "elasticsearch",  #默认的集群名</span><br><span class="line">  "cluster_uuid" : "biIeKipDSyKCRpS84bb0Ng",</span><br><span class="line">  "version" : &#123;</span><br><span class="line">    "number" : "5.6.2",</span><br><span class="line">    "build_hash" : "57e20f3",</span><br><span class="line">    "build_date" : "2017-09-23T13:16:45.703Z",</span><br><span class="line">    "build_snapshot" : false,</span><br><span class="line">    "lucene_version" : "6.6.1"</span><br><span class="line">  &#125;,</span><br><span class="line">  "tagline" : "You Know, for Search"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">此时目录下会多个data文件夹，默认的数据目录</span><br></pre></td></tr></table></figure>
<h4 id="elasticsearch配置文件详解"><a href="#elasticsearch配置文件详解" class="headerlink" title="elasticsearch配置文件详解"></a>elasticsearch配置文件详解</h4><p>[root@es-node-01 ~]# cat /usr/local/elasticsearch-6.6.2/config/elasticsearch.yml | grep ^[a-Z]</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"># 集群名,多个节点定义统一名字</span><br><span class="line">cluster.name: zili-es-cluster</span><br><span class="line">#节点名,自定义</span><br><span class="line">node.name: zilies-1</span><br><span class="line"># 数据和日志目录.用户要有权限读写   </span><br><span class="line">path.data: /usr/local/elasticsearch-6.6.2/data</span><br><span class="line">path.logs: /usr/local/elasticsearch-6.6.2/logs</span><br><span class="line"># 内存锁定.普通用户支持内存所需另外设置</span><br><span class="line">bootstrap.memory_lock: true</span><br><span class="line"># 当前地址</span><br><span class="line">network.host: 192.168.1.130</span><br><span class="line">http.port: 9200</span><br><span class="line"># 集群内主机</span><br><span class="line">discovery.zen.ping.unicast.hosts: [&quot;192.168.1.130&quot;, &quot;192.168.1.131&quot;,&quot;192.168.1.132&quot;]</span><br><span class="line"># (集群总节点数量/2)+1</span><br><span class="line">discovery.zen.minimum_master_nodes: 2</span><br><span class="line"></span><br><span class="line"># http://192.168.1.130:9200/_cluster/health?pretty  可查看集群相关信息</span><br><span class="line">=======================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[此链接为出处](http://www.cnblogs.com/zlslch/p/6419948.html)</span><br><span class="line"></span><br><span class="line">​```bash</span><br><span class="line">elasticsearch-.yml（中文配置详解）</span><br><span class="line"></span><br><span class="line"># ======================== Elasticsearch Configuration =========================</span><br><span class="line">#</span><br><span class="line"># NOTE: Elasticsearch comes with reasonable defaults for most settings.</span><br><span class="line"># Before you set out to tweak and tune the configuration, make sure you</span><br><span class="line"># understand what are you trying to accomplish and the consequences.</span><br><span class="line">#</span><br><span class="line"># The primary way of configuring a node is via this file. This template lists</span><br><span class="line"># the most important settings you may want to configure for a production cluster.</span><br><span class="line">#</span><br><span class="line"># Please see the documentation for further information on configuration options:</span><br><span class="line"># &lt;http://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration.html&gt;</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Cluster -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Use a descriptive name for your cluster:</span><br><span class="line"># 集群名称，默认是elasticsearch</span><br><span class="line"># cluster.name: my-application</span><br><span class="line">#</span><br><span class="line"># ------------------------------------ Node ------------------------------------</span><br><span class="line">#</span><br><span class="line"># Use a descriptive name for the node:</span><br><span class="line"># 节点名称，默认从elasticsearch-2.4.3/lib/elasticsearch-2.4.3.jar!config/names.txt中随机选择一个名称</span><br><span class="line"># node.name: node-1</span><br><span class="line">#</span><br><span class="line"># Add custom attributes to the node:</span><br><span class="line"># </span><br><span class="line"># node.rack: r1</span><br><span class="line">#</span><br><span class="line"># ----------------------------------- Paths ------------------------------------</span><br><span class="line">#</span><br><span class="line"># Path to directory where to store the data (separate multiple locations by comma):</span><br><span class="line"># 可以指定es的数据存储目录，默认存储在es_home/data目录下</span><br><span class="line"># path.data: /path/to/data</span><br><span class="line">#</span><br><span class="line"># Path to log files:</span><br><span class="line"># 可以指定es的日志存储目录，默认存储在es_home/logs目录下</span><br><span class="line"># path.logs: /path/to/logs</span><br><span class="line">#</span><br><span class="line"># ----------------------------------- Memory -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Lock the memory on startup:</span><br><span class="line"># 锁定物理内存地址，防止elasticsearch内存被交换出去,也就是避免es使用swap交换分区</span><br><span class="line"># bootstrap.memory_lock: true</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># 确保ES_HEAP_SIZE参数设置为系统可用内存的一半左右</span><br><span class="line"># Make sure that the `ES_HEAP_SIZE` environment variable is set to about half the memory</span><br><span class="line"># available on the system and that the owner of the process is allowed to use this limit.</span><br><span class="line"># </span><br><span class="line"># 当系统进行内存交换的时候，es的性能很差</span><br><span class="line"># Elasticsearch performs poorly when the system is swapping the memory.</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Network -----------------------------------</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># 为es设置ip绑定，默认是127.0.0.1，也就是默认只能通过127.0.0.1 或者localhost才能访问</span><br><span class="line"># es1.x版本默认绑定的是0.0.0.0 所以不需要配置，但是es2.x版本默认绑定的是127.0.0.1，需要配置</span><br><span class="line"># Set the bind address to a specific IP (IPv4 or IPv6):</span><br><span class="line">#</span><br><span class="line"># network.host: 192.168.0.1</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># 为es设置自定义端口，默认是9200</span><br><span class="line"># 注意：在同一个服务器中启动多个es节点的话，默认监听的端口号会自动加1：例如：9200，9201，9202...</span><br><span class="line"># Set a custom port for HTTP:</span><br><span class="line">#</span><br><span class="line"># http.port: 9200</span><br><span class="line">#</span><br><span class="line"># For more information, see the documentation at:</span><br><span class="line"># &lt;http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html&gt;</span><br><span class="line">#</span><br><span class="line"># --------------------------------- Discovery ----------------------------------</span><br><span class="line">#</span><br><span class="line"># 当启动新节点时，通过这个ip列表进行节点发现，组建集群</span><br><span class="line"># 默认节点列表：</span><br><span class="line"># 127.0.0.1，表示ipv4的回环地址。</span><br><span class="line">#   [::1]，表示ipv6的回环地址</span><br><span class="line">#</span><br><span class="line"># 在es1.x中默认使用的是组播(multicast)协议，默认会自动发现同一网段的es节点组建集群，</span><br><span class="line"># 在es2.x中默认使用的是单播(unicast)协议，想要组建集群的话就需要在这指定要发现的节点信息了。</span><br><span class="line"># 注意：如果是发现其他服务器中的es服务，可以不指定端口[默认9300]，如果是发现同一个服务器中的es服务，就需要指定端口了。</span><br><span class="line"># Pass an initial list of hosts to perform discovery when new node is started:</span><br><span class="line"># </span><br><span class="line"># The default list of hosts is [&quot;127.0.0.1&quot;, &quot;[::1]&quot;]</span><br><span class="line">#</span><br><span class="line"># discovery.zen.ping.unicast.hosts: [&quot;host1&quot;, &quot;host2&quot;]</span><br><span class="line">#</span><br><span class="line"># 通过配置这个参数来防止集群脑裂现象 (集群总节点数量/2)+1</span><br><span class="line"># Prevent the &quot;split brain&quot; by configuring the majority of nodes (total number of nodes / 2 + 1):</span><br><span class="line">#</span><br><span class="line"># discovery.zen.minimum_master_nodes: 3</span><br><span class="line">#</span><br><span class="line"># For more information, see the documentation at:</span><br><span class="line"># &lt;http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery.html&gt;</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Gateway -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Block initial recovery after a full cluster restart until N nodes are started:</span><br><span class="line"># 一个集群中的N个节点启动后,才允许进行数据恢复处理，默认是1</span><br><span class="line"># gateway.recover_after_nodes: 3</span><br><span class="line">#</span><br><span class="line"># For more information, see the documentation at:</span><br><span class="line"># &lt;http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html&gt;</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Various -----------------------------------</span><br><span class="line"># 在一台服务器上禁止启动多个es服务</span><br><span class="line"># Disable starting multiple nodes on a single system:</span><br><span class="line">#</span><br><span class="line"># node.max_local_storage_nodes: 1</span><br><span class="line">#</span><br><span class="line"># 设置是否可以通过正则或者_all删除或者关闭索引库，默认true表示必须需要显式指定索引库名称</span><br><span class="line"># 生产环境建议设置为true，删除索引库的时候必须显式指定，否则可能会误删索引库中的索引库。</span><br><span class="line"># Require explicit names when deleting indices:</span><br><span class="line">#</span><br><span class="line"># action.destructive_requires_name: true</span><br><span class="line"> 集群名称，默认是elasticsearch</span><br><span class="line"></span><br><span class="line">　　输入，http://192.168.80.200:9200/</span><br></pre></td></tr></table></figure>
<h4 id="logstash和elasticsearch结合"><a href="#logstash和elasticsearch结合" class="headerlink" title="logstash和elasticsearch结合"></a>logstash和elasticsearch结合</h4><blockquote>
<p>结合有两种方法，直接结合，通过redis结合</p>
</blockquote>
<p><em>直接结合</em><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#编写logstash配置文件</span><br><span class="line"># cat logstash-elasticsearch.conf </span><br><span class="line">input &#123; stdin &#123;&#125; &#125;</span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123; hosts =&gt; "IPADDRESS" &#125;    #此处用hosts</span><br><span class="line">    stdout &#123; codec=&gt; rubydebug &#125;</span><br><span class="line">｝</span><br><span class="line"></span><br><span class="line">#通过配置文件启动logstash即可</span><br></pre></td></tr></table></figure></p>
<p><em>与redis结合</em></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"># cat  config/logstash-redis.conf</span><br><span class="line">input &#123;</span><br><span class="line">    redis &#123;</span><br><span class="line">        host =&gt; '10.1.27.24' #redis地址</span><br><span class="line">        data_type =&gt; 'list'</span><br><span class="line">        key =&gt; 'logstash:redis'</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts =&gt; '10.1.27.23'  #hosts</span><br><span class="line">        codec =&gt; 'json'</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#http://10.1.27.23:9200/_search?pretty</span><br><span class="line">#浏览器访问es地址，会发现redis的内容也会显示出来。</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">7</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">10</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">10</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">7</span>,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [</span><br><span class="line">   &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"logstash-2017.10.11"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"logs"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"AV8JbX8-FBpUgNjayMTu"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"@version"</span> : <span class="string">"1"</span>,</span><br><span class="line">          <span class="attr">"host"</span> : <span class="string">"0.0.0.0"</span>,</span><br><span class="line">          <span class="attr">"@timestamp"</span> : <span class="string">"2017-10-11T03:14:51.802Z"</span>,</span><br><span class="line">          <span class="attr">"message"</span> : <span class="string">"ceshi"</span>   #此消息为直接结合的</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span> : <span class="string">"logstash-2017.10.11"</span>,</span><br><span class="line">        <span class="attr">"_type"</span> : <span class="string">"redis-input"</span>,</span><br><span class="line">        <span class="attr">"_id"</span> : <span class="string">"AV8KRKarFBpUgNjayMT2"</span>,</span><br><span class="line">        <span class="attr">"_score"</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"_source"</span> : &#123;</span><br><span class="line">          <span class="attr">"@version"</span> : <span class="string">"1"</span>,</span><br><span class="line">          <span class="attr">"host"</span> : <span class="string">"0.0.0.0"</span>,</span><br><span class="line">          <span class="attr">"@timestamp"</span> : <span class="string">"2017-10-11T07:09:29.575Z"</span>,</span><br><span class="line">          "message" : "redisredisredisredisredisredis", #此内容为redis</span><br><span class="line">          "type" : "redis-input"  #这里可以看出，类型为配置里定义的类型名</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">     &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Kinaba"><a href="#Kinaba" class="headerlink" title="Kinaba"></a>Kinaba</h3><h4 id="安装kibana"><a href="#安装kibana" class="headerlink" title="安装kibana"></a>安装kibana</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># tar zxf kibana--VERSION -C /usr/local</span><br></pre></td></tr></table></figure>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/kibana-VERSION /config/kibana.yml</span><br><span class="line">#修改如下</span><br><span class="line">server.host: &quot;0.0.0.0&quot;</span><br><span class="line">elasticsearch_url: &quot;http://es的IP地址:9200&quot;</span><br><span class="line"></span><br><span class="line">#访问kibana地址</span><br><span class="line">http://10.1.27.23:5601</span><br></pre></td></tr></table></figure>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/kibana-VERSION-linux-x64/bin/kibana</span><br></pre></td></tr></table></figure>
<p>点击Create 创建一个索引</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-508cca05a115d518.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><em>然后点击左侧discovery 发现es的日志，选择时间段即可查看日志</em></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-4d01152e4e9a2bfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>ELK部署，完。</p>
<hr>
<p>访问出现</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-4d9b7d02de047f0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>换个浏览器访问</p>
<hr>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> elk </category>
            
        </categories>
        
        
        <tags>
            
            <tag> elk </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[oracle-11g安装-linux]]></title>
      <url>/2017/09/22/oracle%E5%AE%89%E8%A3%85-linux/</url>
      <content type="html"><![CDATA[<p>需要图形化</p>
<table>
<thead>
<tr>
<th>内存大小</th>
<th>swap空间需求</th>
</tr>
</thead>
<tbody>
<tr>
<td>4G &lt; mem &lt;8G</td>
<td>2*mem</td>
</tr>
<tr>
<td>8G &lt; mem &lt;32G</td>
<td>1.5*mem</td>
</tr>
<tr>
<td>32G &lt; mem</td>
<td>32G</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h4 id="硬件环境"><a href="#硬件环境" class="headerlink" title="硬件环境"></a>硬件环境</h4><p>系统需要图形化</p>
<h5 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h5><p>内存: 大于4G <code>grep MemTotal /proc/meminfo</code><br>swap:  <code>grep SwapTotal /proc/meminfo</code></p>
<table>
<thead>
<tr>
<th>内存大小</th>
<th>swap空间需求</th>
</tr>
</thead>
<tbody>
<tr>
<td>4G &lt; mem &lt;8G</td>
<td>2*mem</td>
</tr>
<tr>
<td>8G &lt; mem &lt;32G</td>
<td>1.5*mem</td>
</tr>
<tr>
<td>32G &lt; mem</td>
<td>32G</td>
</tr>
</tbody>
</table>
<h5 id="硬盘"><a href="#硬盘" class="headerlink" title="硬盘"></a>硬盘</h5><p>/tmp 空间大于1G <code>df -h /tmp</code><br>空间需求</p>
<table>
<thead>
<tr>
<th>安装模式</th>
<th>软件所需空间</th>
<th>数据文件所需空间</th>
</tr>
</thead>
<tbody>
<tr>
<td>企业版 Enterprise Edition</td>
<td>4.35G</td>
<td>1.68G</td>
</tr>
<tr>
<td>标准版 Standard Edition</td>
<td>3.73G</td>
<td>1.48G</td>
</tr>
</tbody>
</table>
<h4 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h4><h5 id="hosts"><a href="#hosts" class="headerlink" title="hosts"></a>hosts</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line">#添加信息格式如下</span><br><span class="line">IP hostname  #10.1.27.25 oracle</span><br></pre></td></tr></table></figure>
<h5 id="软件包"><a href="#软件包" class="headerlink" title="软件包"></a>软件包</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">binutils</span><br><span class="line">compat-libcap1</span><br><span class="line">compat-libstdc++-33</span><br><span class="line">elfutils-libelf</span><br><span class="line">elfutils-libelf-devel</span><br><span class="line">gcc-4.1.2 </span><br><span class="line">gcc-c++-4.1.2 </span><br><span class="line">glibc-2.5-24 </span><br><span class="line">glibc-2.5-24 (32 bit) </span><br><span class="line">glibc-common-2.5 </span><br><span class="line">glibc-devel-2.5 </span><br><span class="line">glibc-devel-2.5 (32 bit) </span><br><span class="line">glibc-headers-2.5 </span><br><span class="line">ksh-20060214 </span><br><span class="line">libaio-0.3.106</span><br><span class="line">libaio-0.3.106 (32 bit)</span><br><span class="line">libaio-devel-0.3.106 </span><br><span class="line">libaio-devel-0.3.106 (32 bit) </span><br><span class="line">libgcc-4.1.2libgcc-4.1.2 (32 bit) </span><br><span class="line">libstdc++-4.1.2 </span><br><span class="line">libstdc++-4.1.2 (32 bit) </span><br><span class="line">libstdc++-devel 4.1.2 </span><br><span class="line">make-3.81 </span><br><span class="line">numactl-devel-0.9.8.x86_64 </span><br><span class="line">sysstat-7.0.2 </span><br><span class="line">unixODBC-2.2.11 (32-bit) or later</span><br><span class="line">unixODBC-devel-2.2.11 (64-bit) or later</span><br><span class="line">unixODBC-2.2.11 (64-bit) or later </span><br><span class="line">检查方法：#rpm -q 包名称    //不需要写后面的版本号</span><br><span class="line">安装方法：#rpm –ivh 包名称</span><br><span class="line">也可以通过yum安装</span><br></pre></td></tr></table></figure>
<h4 id="用户和组"><a href="#用户和组" class="headerlink" title="用户和组"></a>用户和组</h4><p>可在/etc/groups 查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">groupadd oinstall –g 1000 #指定组ID</span><br><span class="line">groupadd dba –g 1001</span><br><span class="line">groupadd oper –g 1002</span><br><span class="line">useradd -g oinstall -G dba oracle #oracle所属组和附加组</span><br><span class="line">passwd oracle #设置密码</span><br></pre></td></tr></table></figure></p>
<h4 id="核心参数"><a href="#核心参数" class="headerlink" title="核心参数"></a>核心参数</h4><p><strong>vim /etc/sysctl.conf</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">添加以下内容：</span><br><span class="line">fs.aio-max-nr = 1048576</span><br><span class="line">fs.file-max = 6815744</span><br><span class="line">kernel.shmall = 2097152</span><br><span class="line">kernel.shmmax = 536870912</span><br><span class="line">kernel.shmmni = 4096</span><br><span class="line">kernel.sem = 250 32000 100 128 </span><br><span class="line">net.ipv4.ip_local_port_range = 9000 65500 </span><br><span class="line">net.core.rmem_default = 262144 </span><br><span class="line">net.core.rmem_max = 4194304 </span><br><span class="line">net.core.wmem_default = 262144 </span><br><span class="line">net.core.wmem_max = 1048586 </span><br><span class="line"></span><br><span class="line">#安装oracle 12C 内核有变动，值如下。</span><br><span class="line">shmmax  67286788096</span><br><span class="line">shmall 13141950</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. 使核心参数生效</span><br><span class="line"># /sbin/sysctl –p</span><br></pre></td></tr></table></figure></p>
<p><strong>vim /etc/security/limits.conf</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#添加以下内容：</span><br><span class="line">oracle soft nproc 2047 </span><br><span class="line">oracle hard nproc 16384 </span><br><span class="line">oracle soft nofile 1024 </span><br><span class="line">oracle hard nofile 65536 </span><br><span class="line">oracle soft stack 10240</span><br></pre></td></tr></table></figure></p>
<p><strong>/etc/pam.d/login</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">添加以下内容：</span><br><span class="line">session required pam_limits.so</span><br></pre></td></tr></table></figure></p>
<p><strong>vi /etc/profile</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">添加以下内容：</span><br><span class="line">if [ $USER = &quot;oracle&quot; ]; then</span><br><span class="line">  if [ $SHELL = &quot;/bin/ksh&quot; ]; then</span><br><span class="line">    ulimit -p 16384</span><br><span class="line">    ulimit -n 65536</span><br><span class="line">  else</span><br><span class="line">    ulimit -u 16384 </span><br><span class="line">    ulimit -n 65536</span><br><span class="line">  fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p>
<h5 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h5><p><a href="http://www.jianshu.com/p/23ee9db2a620" target="_blank" rel="noopener">原链接更为详细</a><br>ulimit</p>
<blockquote>
<p> 1.只对当前tty（终端有效），若要每次都生效的话，可以把ulimit参数放到对应用户的.bash_profile里面或/etc/profile；<br>2.ulimit命令本身就有分软硬设置，加-H就是硬，加-S就是软；<br>3.默认显示的是软限制，如果运行ulimit命令修改的时候没有加上的话，就是两个参数一起改变.生效；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">命令参数</span><br><span class="line">-H 设置硬件资源限制.</span><br><span class="line">-S 设置软件资源限制.</span><br><span class="line">-a 显示当前所有的资源限制.</span><br><span class="line">-c size:设置core文件的最大值.单位:blocks</span><br><span class="line">-d size:设置数据段的最大值.单位:kbytes</span><br><span class="line">-f size:设置创建文件的最大值.单位:blocks</span><br><span class="line">-l size:设置在内存中锁定进程的最大值.单位:kbytes</span><br><span class="line">-m size:设置可以使用的常驻内存的最大值.单位:kbytes</span><br><span class="line">-n size:设置内核可以同时打开的文件描述符的最大值.单位:n</span><br><span class="line">-p size:设置管道缓冲区的最大值.单位:kbytes</span><br><span class="line">-s size:设置堆栈的最大值.单位:kbytes</span><br><span class="line">-t size:设置CPU使用时间的最大上限.单位:seconds</span><br><span class="line">-v size:设置虚拟内存的最大值.单位:kbytes</span><br><span class="line">unlimited 是一个特殊值，用于表示不限制</span><br></pre></td></tr></table></figure></p>
<p>/etc/security/limit.conf 和vim /etc/sysctl.conf<br>一个是针对用户的,一个是针对系统的<br>要使 limits.conf 文件配置生效，必须要确保 pam_limits.so 文件被加入到启动文件中,所以修改/etc/pam.d/login,并添加相关内容</p>
</blockquote>
<h4 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /u01/app/</span><br><span class="line">chown -R oracle:oinstall /u01/app/ </span><br><span class="line">chmod -R 775 /u01/app/</span><br></pre></td></tr></table></figure>
<h4 id="oracle用户环境变量"><a href="#oracle用户环境变量" class="headerlink" title="oracle用户环境变量"></a>oracle用户环境变量</h4><p>vi /home/oracle/.bash_profile<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">export TMP=/tmp</span><br><span class="line">export TMPDIR=$TMP</span><br><span class="line">export ORACLE_BASE=/u01/app/oracle</span><br><span class="line">export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/db_1</span><br><span class="line">export ORACLE_SID=db11g</span><br><span class="line">export ORACLE_TERM=xterm</span><br><span class="line">export PATH=/usr/sbin:$PATH</span><br><span class="line">export PATH=$ORACLE_HOME/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/usr/X11R6/lib64/</span><br><span class="line">export CLASSPATH=$ORACLE_HOME/JRE:$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib</span><br><span class="line">export NLS_LANG=&quot;SIMPLIFIED CHINESE_CHINA.ZHS16GBK&quot;</span><br><span class="line">umask 022</span><br></pre></td></tr></table></figure></p>
<h4 id="下载解压包"><a href="#下载解压包" class="headerlink" title="下载解压包"></a>下载解压包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">链接: https://pan.baidu.com/s/1nvIGppJ</span><br><span class="line">密码: whna</span><br></pre></td></tr></table></figure>
<h4 id="安装oracle"><a href="#安装oracle" class="headerlink" title="安装oracle"></a>安装oracle</h4><p>切换oracle 用户，进入解压路径下 database 目录，运行./runInstaller 命令，开始安装</p>
<ul>
<li>Next—-&gt; Yes</li>
<li>选择”Skip Software updates”,点击”Next”按钮</li>
<li>选择”Install database software only”,点击”Next”按钮</li>
<li>选择”Single instance database installation”，点击”Next”按钮</li>
<li>将”Simplified Chinese”通过”&gt;”按钮添加到”Selected Languages”，点击”Next”按钮</li>
<li>选择”Enterprise Edition”,点击”Next”按钮</li>
<li>确认”Oracle Base”,”Software Location”路径,点击”Next”按钮</li>
<li>确认”Inventory Directory”路径和”oraInventory Group Name”用户组,点击”Next”按钮</li>
<li>确认 database 相关的用户组，第二行选择 oper 用户组，点击”Next”按钮<ul>
<li>如果出现缺少pdksh-5.2.14 忽略即可.新的oracle都使用ksh包了,这个安装了就好</li>
</ul>
</li>
<li>点击”Install”按钮，开始安装</li>
<li>等待安装完成(会提示登录root,执行脚本)</li>
<li>用 root 用户先执行orainstRoot.sh脚本，完成之后再用 root 用户执行 root.sh 脚本</li>
<li>点击”OK”按钮</li>
<li>点击”Close”按钮 –完成</li>
</ul>
<h4 id="创建监听"><a href="#创建监听" class="headerlink" title="创建监听"></a>创建监听</h4><p>使用 oracle 用户执行 netca 命令创建监听</p>
<ul>
<li>选择”Listener configuration”,点击”Next”按钮</li>
<li>选择”Add”,点击”Next”按钮</li>
<li>Listener name(可默认) 点击”Next”按钮</li>
<li>选择tcp协议.点击”Next”按钮</li>
<li>选择”Use the standard port number of 1521”,点击”Next”按钮</li>
<li>选择”No”,点击”Next”按钮</li>
<li>点击”Next”按钮</li>
<li>点击”Finish”按钮</li>
</ul>
<h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><p>使用 oracle 用户执行 dbca 命令创建数据库</p>
<ul>
<li>点击”Next”按钮 </li>
<li>选择”Create a Database” ，点击“Next” 按钮</li>
<li>选择”General Purpose or Transaction Processing”类型。生成环境按需求选择,一般选择”Custom Database”类型。 点击”Next”按钮 </li>
<li>输入”Golbal Database Name”,”SID Prefix”:db11g 点击”Next”按钮</li>
<li>不勾选”Configure Enterprise Manager”,点击”Next”按钮</li>
<li>勾选use the same …输入 sys,system 统一密码:oracle 点击”Next”按钮</li>
<li>提示密码不符合 Oracle 推荐要求，忽略，点击”Yes”按钮</li>
<li>选择”Storage Type”为”File System”选择”使用 Oracle-Managed Files”,在”Database File Location”输入:{ORACLE_BASE}/oradata 点击”Next”按钮</li>
<li>不勾选”Specify Fast Recovery Area”和”Enable Archiving”,点击”Next”按钮</li>
<li>把复选框都去掉勾,点击”Next”按钮</li>
<li>在”Memory”选项卡选择”Typical” 自动分配内存</li>
<li>在”调整内存”选项卡中，设置最大进程数为500</li>
<li>在”Character Sets”选项卡选择”Choose from the list of character sets”, 选择 “ZHS16GBK”，“Default Territory”选项卡选择 China，点击“Next”按钮</li>
<li>将重做日志组调整为5组，每组2个大小为128m 的重做日志文件，点击“下一步”</li>
<li>勾选create database 和 Generate Database Create Scripts  点击”Finish”按钮</li>
<li>点击”OK”按钮</li>
<li>脚本创建完成，点击”OK”按钮</li>
<li>点击”Exit”按钮退出，至此，数据库创建完成。</li>
</ul>
<h4 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h4><h5 id="取消密码限制"><a href="#取消密码限制" class="headerlink" title="取消密码限制"></a>取消密码限制</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sqlplus “/as sysdba”</span><br><span class="line">SQL&gt; ALTER PROFILE DEFAULT LIMIT COMPOSITE_LIMIT UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT SESSIONS_PER_USER UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT CPU_PER_SESSION UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT CPU_PER_CALL UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT LOGICAL_READS_PER_SESSION UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT LOGICAL_READS_PER_CALL UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT IDLE_TIME UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT CONNECT_TIME UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT PRIVATE_SGA UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT FAILED_LOGIN_ATTEMPTS UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT PASSWORD_REUSE_TIME UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT PASSWORD_REUSE_MAX UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT PASSWORD_LOCK_TIME UNLIMITED;</span><br><span class="line">ALTER PROFILE DEFAULT LIMIT PASSWORD_GRACE_TIME UNLIMITED;</span><br></pre></td></tr></table></figure>
<h5 id="关闭数据库审计"><a href="#关闭数据库审计" class="headerlink" title="关闭数据库审计"></a>关闭数据库审计</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">1、查看审计功能是否开启</span><br><span class="line">su – oracle</span><br><span class="line">sqlplus “/as sysdba”</span><br><span class="line">SQL&gt; show parameter audit_trail</span><br><span class="line">NAME          TYPE     VALUE</span><br><span class="line">-------------------- ----------- ------------------------------</span><br><span class="line">audit_trail     string      DB</span><br><span class="line">说明：VALUE值为DB，表面审计功能为开启的状态</span><br><span class="line"></span><br><span class="line">2、关闭oracle的审计功能</span><br><span class="line">SQL&gt; alter system set audit_trail=FALSE scope=spfile;</span><br><span class="line">System altered.</span><br><span class="line"></span><br><span class="line">3、重启数据库</span><br><span class="line">SQL&gt; shutdown immediate;</span><br><span class="line">SQL&gt; startup;</span><br><span class="line"> </span><br><span class="line">4、验证审计是否已经被关闭</span><br><span class="line">SQL&gt; show parameter audit_trail</span><br><span class="line">NAME      TYPE       VALUE</span><br><span class="line">------------- ----------- ------------------------------</span><br><span class="line">audit_trail   string      FALSE</span><br><span class="line">说明：VALUE值为FALSE，表面审计功能为关闭的状态</span><br><span class="line">lsnrctl status   监听状态查看</span><br><span class="line">SQL&gt; show user --显示当前连接用户 </span><br><span class="line">SQL&gt; show error　　 --显示错误</span><br><span class="line">sqlplus /nolog       SQL&gt;connect / as sysdba ;</span><br><span class="line">查看当前的所有数据库: select * from v$database;   select name from v$database;</span><br><span class="line">进入test数据库：database test;  查看所有的数据库实例：select * from v$instance;</span><br><span class="line">更改数据库用户的密码：(将sys与system的密码改为test.)</span><br><span class="line">alter user sys indentified by test;</span><br><span class="line">alter user system indentified by test;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql主从同步]]></title>
      <url>/2017/09/04/mysql%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5/</url>
      <content type="html"><![CDATA[<p>数据库,还是做个备份吧…<br>前提：数据库版本一致，初始化数据一致（数据库一致）<br><a id="more"></a></p>
<h3 id="主服务器"><a href="#主服务器" class="headerlink" title="主服务器"></a>主服务器</h3><h4 id="新建同步用户"><a href="#新建同步用户" class="headerlink" title="新建同步用户"></a>新建同步用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT REPLICATION SLAVE ON *.* TO backup@&apos;%&apos; IDENTIFIED BY &apos;backup&apos;;</span><br><span class="line">#新建backupDB用户，%代表任何ip都可连接， 密码backup</span><br></pre></td></tr></table></figure>
<h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p><code>/etc/my.cnf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">log-bin=/var/lib/mysql/mysql-bin#二进制文件保存位置,这些文件是mysql的事务日志记录。</span><br><span class="line">server-id=1  #唯一标示</span><br><span class="line"></span><br><span class="line">#最大连接数,按需更改</span><br><span class="line">max_connections=10000</span><br><span class="line"></span><br><span class="line">character-set-server=utf8</span><br><span class="line"></span><br><span class="line">#每个bin-log最大大小，当此大小等于500M时会自动生成一个新的日志文件。一条记录不会写在2个日志文件中，所以有时日志文件会超过此大小。</span><br><span class="line">max_binlog_size = 500M</span><br><span class="line"></span><br><span class="line">#日志缓存大小</span><br><span class="line">binlog_cache_size = 128K</span><br><span class="line"></span><br><span class="line">#当Slave从Master数据库读取日志时更新新写入日志中，如果只启动log-bin而没有启动log-slave-updates则Slave只记录针对自己数据库操作的更新。</span><br><span class="line">log-slave-updates</span><br><span class="line"></span><br><span class="line">#设置bin-log日志文件保存的天数，此参数mysql5.0以下版本不支持。</span><br><span class="line">expire_logs_days=30</span><br><span class="line"></span><br><span class="line">#设置bin-log日志文件格式为：MIXED，可以防止主键重复。</span><br><span class="line">binlog_format=&quot;MIXED&quot;</span><br><span class="line"></span><br><span class="line">#要同步的数据库,可指定多个,需复制此参数</span><br><span class="line">#binlog-do-db=zabbix </span><br><span class="line">#binlog-do-db=it</span><br><span class="line"></span><br><span class="line">#要同步多个数据库，就在slave多加几个replicate-db-db=数据库名</span><br><span class="line"></span><br><span class="line">#binlog_ignore_db=mysql   #忽略的数据库</span><br><span class="line">#binlog_ignore_db=information_schema</span><br><span class="line">#binlog_ignore_db=performance_schema</span><br><span class="line"></span><br><span class="line">#auto-increment-increment = 10</span><br><span class="line">#auto-increment-offset=1</span><br><span class="line">#这俩设置标示这台服务器上插入的第一个id就是 1， 第二行的id就是 11了,主主备份可以避免重复</span><br></pre></td></tr></table></figure>
<p>复制的几种模式解释<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">– 基于SQL语句的复制(statement-based replication, SBR)，</span><br><span class="line">– 基于行的复制(row-based replication, RBR)，</span><br><span class="line">– 混合模式复制(mixed-based replication, MBR)。</span><br><span class="line">相应地，binlog的格式也有三种：STATEMENT，ROW，MIXED。 MBR 模式中，SBR 模式是默认的。</span><br><span class="line">在运行时可以动态改动 binlog的格式，除了以下几种情况：</span><br><span class="line">1.存储流程或者触发器中间</span><br><span class="line">2.启用了NDB</span><br><span class="line">3.当前会话试用 RBR 模式，并且已打开了临时表</span><br><span class="line">如果binlog采用了 MIXED 模式，那么在以下几种情况下会自动将binlog的模式由 SBR 模式改成 RBR 模式</span><br></pre></td></tr></table></figure></p>
<h4 id="mysql-bin"><a href="#mysql-bin" class="headerlink" title="mysql-bin"></a>mysql-bin</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mariadb.service</span><br><span class="line"></span><br><span class="line">#锁表,禁止写操作.</span><br><span class="line">FLUSH TABLES WITH READ LOCK;</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+---------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB                            |</span><br><span class="line">+------------------+----------+--------------+---------------------------------------------+</span><br><span class="line">| mysql-bin.000001 |      245 | it           | mysql,information_schema,performance_schema |</span><br><span class="line">+------------------+----------+--------------+---------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<p><em>这里要注意</em> <code>| mysql-bin.000001 |      245</code> 后面的从服务会用到<br>所以，此时，就不要对主数据库进行操作了，以免值变化。</p>
<h3 id="从服务器"><a href="#从服务器" class="headerlink" title="从服务器"></a>从服务器</h3><p>从服务如果是克隆的主服务器,需要注意 data/mysql.auto.cnf删除,并重启服务器.否则无法完成克隆<br>因为两台服务器mysql的server-uuid 是相同的.</p>
<h4 id="修改配置-1"><a href="#修改配置-1" class="headerlink" title="修改配置"></a>修改配置</h4><p><code>/etc/my.cnf</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">server-id=2  #唯一标示</span><br><span class="line">#只读,建议开启,防止slave写了数据导致主从出现问题.</span><br><span class="line">read_only=on</span><br><span class="line">#replicate-do-db=it</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#下面这些主要是做主主配置</span><br><span class="line">#log-bin=/var/lib/mysql/mysql-bin #二进制文件保存位置</span><br><span class="line">#log_slave_updates = 1 #slave将复制事件写进自己的二进制日志</span><br><span class="line"></span><br><span class="line">slave-skip-errors=1007,1008,1053,1062,1213,1158,1159</span><br><span class="line"></span><br><span class="line">#error code代表的错误如下：</span><br><span class="line">    1007：数据库已存在，创建数据库失败</span><br><span class="line">    1008：数据库不存在，删除数据库失败</span><br><span class="line">    1050：数据表已存在，创建数据表失败</span><br><span class="line">    1051：数据表不存在，删除数据表失败</span><br><span class="line">    1053：复制过程中主服务器宕机</span><br><span class="line">    1054：字段不存在，或程序文件跟数据库有冲突</span><br><span class="line">    1060：字段重复，导致无法插入</span><br><span class="line">    1061：重复键名</span><br><span class="line">    1062：主键冲突 Duplicate entry &apos;%s&apos; for key %d</span><br><span class="line">    1068：定义了多个主键</span><br><span class="line">    1094：位置线程ID</span><br><span class="line">    1146：数据表缺失，请恢复数据库</span><br><span class="line">    1158：网络错误，出现读错误，请检查网络连接状况</span><br><span class="line">    1159：网络错误，读超时，请检查网络连接状况</span><br><span class="line">    1213: 死锁</span><br></pre></td></tr></table></figure>
<h4 id="重启并进入数据库"><a href="#重启并进入数据库" class="headerlink" title="重启并进入数据库"></a>重启并进入数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mariadb.service</span><br><span class="line"></span><br><span class="line">#这里用到了master数据库的状态值</span><br><span class="line">change master to master_host=&apos;10.1.*.*(master的IP)&apos;,master_user=&apos;backup&apos;,master_password=&apos;backup&apos;,master_log_file=&apos;mysql-bin.000001&apos;,master_log_pos=245;</span><br><span class="line"></span><br><span class="line">#开启slave</span><br><span class="line">start slave</span><br><span class="line">#查看状态</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 10.1.。。。</span><br><span class="line">                  Master_User: backup</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000001</span><br><span class="line">          Read_Master_Log_Pos: 468</span><br><span class="line">               Relay_Log_File: mariadb-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 529</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class="line">             Slave_IO_Running: Yes   #这里要是YES</span><br><span class="line">            Slave_SQL_Running: Yes   #这里要是YES</span><br><span class="line">              Replicate_Do_DB: it</span><br><span class="line">略....</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#记得解锁主库</span><br><span class="line">UNLOCK TABLES;</span><br></pre></td></tr></table></figure>
<p>然后主服务器又任何操作，从服务器就同步过来了。</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>关于主从备份优缺点机制等,<a href="https://blog.csdn.net/www63912/article/details/53443490" target="_blank" rel="noopener">推荐阅读</a></p>
<h4 id="解除主从"><a href="#解除主从" class="headerlink" title="解除主从"></a>解除主从</h4><p>两个办法</p>
<ol>
<li>彻底解除主从复制关系</li>
</ol>
<ul>
<li>stop slave;</li>
<li>reset slave; #或直接删除master.info和relay-log.info这两个文件</li>
<li>修改my.cnf删除主从相关配置参数</li>
</ul>
<ol>
<li>让slave不随MySQL自动启动<br>修改my.cnf<br>在[mysqld]中增加 skip-slave-start 选项</li>
</ol>
<h4 id="mysqldump需注意"><a href="#mysqldump需注意" class="headerlink" title="mysqldump需注意"></a>mysqldump需注意</h4><p><code>mysqldump --master-data --single-transaction --user=username --password=password dbname&gt; dumpfilename</code></p>
<p>这样就可以保留 <code>file</code> 和 <code>position</code> 的信息，在新搭建一个slave的时候，还原完数据库<br> file 和 position 的信息也随之更新，接着再start slave 就可以很迅速的完成增量同步！</p>
<h4 id="链条式同步"><a href="#链条式同步" class="headerlink" title="链条式同步"></a>链条式同步</h4><p> 如果想实现 主-从（主）-从 这样的链条式结构，需要设置：<br><code>log-slave-updates</code> #只有加上它，从前一台机器上同步过来的数据才能同步到下一台机器</p>
<p>二进制日志也是必须开启的：<br><code>log-bin=/opt/mysql/binlogs/bin-log</code><br><code>log-bin-index=/opt/mysql/binlogs/bin-log.index</code></p>
<p>还可以设置一个log保存周期：<br><code>expire_logs_days=14</code></p>
<hr>
]]></content>
      
        <categories>
            
            <category> database </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx负载/反向代理]]></title>
      <url>/2017/08/18/nginx%E7%AE%80%E5%8D%95%E7%9A%84%E8%B4%9F%E8%BD%BD-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>用Nginx实现简单的负载和代理转发.<br><a id="more"></a></p>
<h4 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h4><p>nginx默认使用80端口，请确保80未被使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Nginx</span><br><span class="line"># wget http://www.nginx.org/download/nginx-[version].tar.gz</span><br><span class="line">Nginx cache purge 模块(可选)</span><br><span class="line"># wget http://labs.frickle.com/files/ngx_cache_purge-[version].tar.gz</span><br><span class="line"></span><br><span class="line">#编译安装</span><br><span class="line">./configure \</span><br><span class="line">--prefix=/usr/local/nginx-[version] \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_realip_module \ </span><br><span class="line">--add-module=../ngx_cache_purge-1.3</span><br><span class="line"># make</span><br><span class="line"># make install</span><br><span class="line"></span><br><span class="line">#启动，停止，重载nginx</span><br><span class="line">/usr/local/nginx-[version]/sbin/nginx   #启动</span><br><span class="line">/usr/local/nginx-[version]/sbin/nginx -t #测试，检测配置</span><br><span class="line">/usr/local/nginx-[version]/sbin/nginx -s stop</span><br><span class="line">/usr/local/nginx-[version]/sbin/nginx -s reload</span><br><span class="line"></span><br><span class="line">打开浏览器，访问nginx地址，出现welcome nginx则配置成功</span><br></pre></td></tr></table></figure></p>
<h4 id="nginx-负载"><a href="#nginx-负载" class="headerlink" title="nginx 负载"></a>nginx 负载</h4><p>新建配置文件blance-test.conf<strong><em>然后在nginx.conf 中include blance-test.conf</em></strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">upstream blance-test &#123;</span><br><span class="line">    server 192.168.1.11:80;</span><br><span class="line">    server 192.168.1.22:80;</span><br><span class="line">&#125;</span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.example.com; </span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class="line">        proxy_pass http://blance-test;</span><br><span class="line">    &#125;</span><br><span class="line">    access_log logs/blance-test_access.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h5 id="proxy-set-header"><a href="#proxy-set-header" class="headerlink" title="proxy_set_header"></a>proxy_set_header</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">重点看下proxy_set_header X-Forwarded-For</span><br><span class="line">当使用了代理时，web服务器无法取得真实IP，为了避免这个情况，</span><br><span class="line">代理服务器通常会增加一个叫做x_forwarded_for的头信息，</span><br><span class="line">把连接它的客户端IP（即客户端IP）加到这个头信息里，</span><br><span class="line">这样就能保证网站的web服务器能获取到真实IP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$host </span><br><span class="line"> #请求中的主机头(Host)字段，如果请求中的主机头不可用或者空，</span><br><span class="line">则为处理请求的server名称(处理请求的server的server_name的值)。小写，不含端口。</span><br><span class="line"></span><br><span class="line">$remote_addr;   </span><br><span class="line"> #客户端的IP地址（中间无代理则是真实客户端IP，有代理则是代理IP）</span><br><span class="line"></span><br><span class="line">$proxy_add_x_forwarded_for;  </span><br><span class="line">#就是$http_x_forwarded_for加上$remote_addr </span><br><span class="line">官方解释 </span><br><span class="line">$proxy_add_x_forwarded_for</span><br><span class="line">the “X-Forwarded-For” client request header field with the $remote_addr variable appended to it, separated by a comma. If the “X-Forwarded-For” field is not present in the client request header, the $proxy_add_x_forwarded_for variable is equal to the $remote_addr variable.</span><br></pre></td></tr></table></figure>
<h4 id="nginx-反向代理"><a href="#nginx-反向代理" class="headerlink" title="nginx 反向代理"></a>nginx 反向代理</h4><p><strong><em>可选配置，与http同级</em></strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">client_max_body_size 50m; #缓冲区代理缓冲用户端请求的最大字节数</span><br><span class="line"> client_body_buffer_size 256k;</span><br><span class="line"> client_header_timeout 3m;</span><br><span class="line"> client_body_timeout 3m;</span><br><span class="line"> send_timeout 3m;</span><br><span class="line"> proxy_connect_timeout 300s; #nginx跟后端服务器连接超时时间(代理连接超时)</span><br><span class="line"> proxy_read_timeout 300s; #连接成功后，后端服务器响应时间(代理接收超时)</span><br><span class="line"> proxy_send_timeout 300s;</span><br><span class="line"> proxy_buffer_size 64k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小</span><br><span class="line"> proxy_buffers 4 32k; #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span><br><span class="line"> proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2）</span><br><span class="line"> proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传递请求，而不缓冲到磁盘</span><br><span class="line"> proxy_ignore_client_abort on; #不允许代理端主动关闭连接</span><br></pre></td></tr></table></figure></p>
<p>新建配置文件reverse-proxy.conf<strong><em>然后在nginx.conf 中include reverse-proxy.conf</em></strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen          7001;</span><br><span class="line">    server_name     192.168.1.202:7001;</span><br><span class="line">    charset utf-8;</span><br><span class="line">    location /console &#123;</span><br><span class="line">       # proxy_set_header Host $host:$proxy_port;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class="line">        proxy_pass http://192.168.1.11:7001;</span><br><span class="line">    &#125;</span><br><span class="line">    access_log logs/192.168.1.11:7001_access.log;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen          8001;</span><br><span class="line">    server_name     192.168.1.202:8001;</span><br><span class="line">    charset utf-8;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_set_header Host $host:$proxy_port;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class="line">        proxy_pass http://192.168.1.11:8001;</span><br><span class="line">    &#125;</span><br><span class="line">    access_log logs/192.168.1.11:8001_access.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里要说明下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server_name </span><br><span class="line">#主要用于配置基于名称的虚拟主机，可匹配正则，如果没有域名可填写IP，不填或随便填写一个</span><br><span class="line">#nginx 根据 server_name 匹配 HTTP 请求头的 host，去决定使用那个 server</span><br><span class="line">#如果都没有匹配则使用默认的。如果没有默认就是第一个server</span><br><span class="line"></span><br><span class="line">$http_host 和 $host的区别</span><br><span class="line"></span><br><span class="line">$host 上边描述过，主机头(Host)字段，如果不可用或空就是server_name的值。</span><br><span class="line">$http_host  可以理解请求地址，即浏览器中你输入的地址（IP或域名）</span><br><span class="line">那么这两个使用哪个好一些呢？</span><br><span class="line">如果Host请求头部没有出现在请求头中，则$http_host值为空，但是$host值为主域名，</span><br><span class="line">一般而言，会用$host代替$http_host，避免http请求中丢失Host头部的情况下Host不被重写。</span><br><span class="line">如果对端口又要求可加上 :$proxy_port</span><br></pre></td></tr></table></figure></p>
<p><a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#.24proxy_add_x_forwarded_for" target="_blank" rel="noopener">官方关于nginx 代理模块的文章</a></p>
<blockquote>
<p>Nginx访问日志 IP统计<br>awk ‘{print $1}’ access.log | sort | uniq -c|sort -n</p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> web </category>
            
            <category> nginx </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ssh不能连接(yum被破坏)]]></title>
      <url>/2017/08/09/ssh%E4%B8%8D%E8%83%BD%E8%BF%9E%E6%8E%A5/</url>
      <content type="html"><![CDATA[<p>同事反应，云主机能ping但ssh不上。<br>本地登录后，检查防火墙,ssh服务，发现服务没有了，然后就想安装<code>openssh-server</code>,结果yum不能用了<br><a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">YumRepo Error: All mirror URLs are not using ftp, http[s] or file. </span><br><span class="line">/Eg. </span><br><span class="line">removing mirrorlist with no valid mirrors: /var/cache/yum/x86_64/6/base/mirrorlist.txt </span><br><span class="line">Error: Cannot find a valid baseurl for repo: base</span><br></pre></td></tr></table></figure>
<p>查看防火墙，网络状态，以及DNS。能否ping通yum源。<code>mirrorlist.centos.org</code><br><strong>能通则可以排除网络问题</strong></p>
<p>检查仓库是否正常,检查变量等信息是否正常。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br><span class="line">能否正常显示版本号等信息</span><br><span class="line"></span><br><span class="line">LSB Version:    :base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch</span><br><span class="line">Distributor ID: CentOS</span><br><span class="line">Description:    CentOS release 6.7 (Final)</span><br><span class="line">Release:    6.7</span><br><span class="line">Codename:   Final</span><br><span class="line"></span><br><span class="line"># rpm -q --qf %&#123;version&#125; centos-release;echo</span><br><span class="line">6</span><br><span class="line"># rpm -q --qf %&#123;arch&#125; centos-release;echo</span><br><span class="line">x86_64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">不正常则备份仓库配置，并手动修改*.repo文件，将$releasever变量全替换成6即可正常yum了。</span><br><span class="line"></span><br><span class="line">如果是7版本则换成7</span><br></pre></td></tr></table></figure></p>
<hr>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ssh </tag>
            
            <tag> yum </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git拉取权限拒绝]]></title>
      <url>/2017/08/03/git%E6%8B%89%E5%8F%96%E6%9D%83%E9%99%90%E6%8B%92%E7%BB%9D/</url>
      <content type="html"><![CDATA[<p>自己挖的坑…<br><a id="more"></a><br>由于昨晚在家新增和修改了文件,今早到公司就进行了个pull的操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">来自 git.oschina.net:user/django</span><br><span class="line"> * branch            master     -&gt; FETCH_HEAD</span><br><span class="line">更新 c1dc841..f21e3fe</span><br><span class="line">error: unable to unlink old &apos;study/app1/__pycache__/__init__.cpython-35.pyc&apos; (权限不够)</span><br></pre></td></tr></table></figure></p>
<p>全是权限不足,第一反应是sudo的原因.没多想就直接sudo操作了,然后提示</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Permission denied (publickey).</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure>
<p>搜索</p>
<p>解决办法都是说重新生成秘钥.然后复制到git.<br>但是自己的密钥并没有变更过,以防万一,还是操作了一遍.</p>
<p>并没有解决问题.</p>
<p>想想如果不是远程的问题,那就是本地的了.</p>
<p>原来昨晚创建了新的文件夹用的是sudo创建的…</p>
<p>更改文件夹所属就好了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown user:group /dir</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[双网卡绑定-bond]]></title>
      <url>/2017/07/16/%E5%8F%8C%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A-bond/</url>
      <content type="html"><![CDATA[<p>linux双网卡绑定<br><a href="http://blog.51cto.com/lixin15/1769338" target="_blank" rel="noopener">源文</a></p>
<a id="more"></a>
<h4 id="是否支持"><a href="#是否支持" class="headerlink" title="是否支持"></a>是否支持</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#cat /boot/config-2.6.32-573.el6.x86_64 |grep -i bonding</span><br><span class="line">CONFIG_BONDING=m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># modinfo bonding</span><br><span class="line">filename:       /lib/modules/2.6.32-431.el6.x86_64/kernel/drivers/net/bonding/bonding.ko</span><br><span class="line">author:         Thomas Davis, tadavis@lbl.gov and many others</span><br><span class="line">description:    Ethernet Channel Bonding Driver, v3.6.0</span><br><span class="line">version:        3.6.0</span><br><span class="line">license:        GPL</span><br><span class="line">srcversion:     353B1DC123506708446C57B</span><br><span class="line">depends:        8021q,ipv6</span><br><span class="line">vermagic:       2.6.32-431.el6.x86_64 SMP mod_unload modversions</span><br></pre></td></tr></table></figure>
<h4 id="bond模式"><a href="#bond模式" class="headerlink" title="bond模式"></a>bond模式</h4><p>bond的模式常用的有两种：0和1</p>
<h5 id="mode-0"><a href="#mode-0" class="headerlink" title="mode=0"></a>mode=0</h5><p>(balance-rr）</p>
<pre><code>表示负载分担round-robin，并且是轮询的方式比如第一个包走eth0，第二个包走eth1，直到数据包发送完毕。

优点：流量提高一倍

缺点：需要接入交换机做端口聚合，否则可能无法使用
</code></pre><h5 id="mode-1"><a href="#mode-1" class="headerlink" title="mode=1"></a>mode=1</h5><p>（active-backup）</p>
<pre><code>表示主备模式，即同时只有1块网卡在工作。

优点：冗余性高

缺点：链路利用率低，两块网卡只有1块在工作
</code></pre><h5 id="mode-2"><a href="#mode-2" class="headerlink" title="mode=2"></a>mode=2</h5><p>(balance-xor)(平衡策略)</p>
<pre><code>表示XOR Hash负载分担，和交换机的聚合强制不协商方式配合。（需要xmit_hash_policy，需要交换机配置port channel）

特点：基于指定的传输HASH策略传输数据包。缺省的策略是：(源MAC地址 XOR 目标MAC地址) % slave数量。其他的传输策略可以通过xmit_hash_policy选项指定，此模式提供负载平衡和容错能力
</code></pre><h5 id="mode-3"><a href="#mode-3" class="headerlink" title="mode=3"></a>mode=3</h5><p>(broadcast)(广播策略)</p>
<pre><code>表示所有包从所有网络接口发出，这个不均衡，只有冗余机制，但过于浪费资源。此模式适用于金融行业，因为他们需要高可靠性的网络，不允许出现任何问题。需要和交换机的聚合强制不协商方式配合。

特点：在每个slave接口上传输每个数据包，此模式提供了容错能力
</code></pre><h5 id="mode-4"><a href="#mode-4" class="headerlink" title="mode=4"></a>mode=4</h5><p>(802.3ad)(IEEE 802.3ad 动态链接聚合)</p>
<pre><code>表示支持802.3ad协议，和交换机的聚合LACP方式配合（需要xmit_hash_policy）.标准要求所有设备在聚合操作时，要在同样的速率和双工模式，而且，和除了balance-rr模式外的其它bonding负载均衡模式一样，任何连接都不能使用多于一个接口的带宽。

特点：创建一个聚合组，它们共享同样的速率和双工设定。根据802.3ad规范将多个slave工作在同一个激活的聚合体下。外出流量的slave选举是基于传输hash策略，该策略可以通过xmit_hash_policy选项从缺省的XOR策略改变到其他策略。需要注意的是，并不是所有的传输策略都是802.3ad适应的，尤其考虑到在802.3ad标准43.2.4章节提及的包乱序问题。不同的实现可能会有不同的适应性。

必要条件：

    条件1：ethtool支持获取每个slave的速率和双工设定

    条件2：switch(交换机)支持IEEE802.3ad Dynamic link aggregation

    条件3：大多数switch(交换机)需要经过特定配置才能支持802.3ad模式
</code></pre><h5 id="mode-5"><a href="#mode-5" class="headerlink" title="mode=5"></a>mode=5</h5><p>(balance-tlb)(适配器传输负载均衡)</p>
<pre><code>是根据每个slave的负载情况选择slave进行发送，接收时使用当前轮到的slave。该模式要求slave接口的网络设备驱动有某种ethtool支持；而且ARP监控不可用。

特点：不需要任何特别的switch(交换机)支持的通道bonding。在每个slave上根据当前的负载（根据速度计算）分配外出流量。如果正在接受数据的slave出故障了，另一个slave接管失败的slave的MAC地址。

必要条件：

    ethtool支持获取每个slave的速率
</code></pre><h5 id="mode-6"><a href="#mode-6" class="headerlink" title="mode=6"></a>mode=6</h5><p>(balance-alb)(适配器适应性负载均衡)</p>
<pre><code>在5的tlb基础上增加了rlb(接收负载均衡receiveload balance).不需要任何switch(交换机)的支持。接收负载均衡是通过ARP协商实现的.

特点：该模式包含了balance-tlb模式，同时加上针对IPV4流量的接收负载均衡(receiveload balance, rlb)，而且不需要任何switch(交换机)的支持。接收负载均衡是通过ARP协商实现的。bonding驱动截获本机发送的ARP应答，并把源硬件地址改写为bond中某个slave的唯一硬件地址，从而使得不同的对端使用不同的硬件地址进行通信。来自服务器端的接收流量也会被均衡。当本机发送ARP请求时，bonding驱动把对端的IP信息从ARP包中复制并保存下来。当ARP应答从对端到达时，bonding驱动把它的硬件地址提取出来，并发起一个ARP应答给bond中的某个slave。使用ARP协商进行负载均衡的一个问题是：每次广播 ARP请求时都会使用bond的硬件地址，因此对端学习到这个硬件地址后，接收流量将会全部流向当前的slave。这个问题可以通过给所有的对端发送更新（ARP应答）来解决，应答中包含他们独一无二的硬件地址，从而导致流量重新分布。当新的slave加入到bond中时，或者某个未激活的slave重新激活时，接收流量也要重新分布。接收的负载被顺序地分布（round robin）在bond中最高速的slave上当某个链路被重新接上，或者一个新的slave加入到bond中，接收流量在所有当前激活的slave中全部重新分配，通过使用指定的MAC地址给每个 client发起ARP应答。下面介绍的updelay参数必须被设置为某个大于等于switch(交换机)转发延时的值，从而保证发往对端的ARP应答不会被switch(交换机)阻截。
</code></pre><h5 id="bond模式小结："><a href="#bond模式小结：" class="headerlink" title="bond模式小结："></a>bond模式小结：</h5><pre><code>mode5和mode6不需要交换机端的设置，网卡能自动聚合。mode4需要支持802.3ad。mode0，mode2和mode3理论上需要静态聚合方式。
</code></pre><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><h5 id="物理网卡配置"><a href="#物理网卡配置" class="headerlink" title="物理网卡配置"></a>物理网卡配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#cat ifcfg-eth0    </span><br><span class="line">DEVICE=eth0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">MASTER=bond0</span><br><span class="line">SLAVE=yes         //可以没有此字段，就需要开机执行ifenslave bond0 eth0 eth1命令了。</span><br><span class="line"></span><br><span class="line">#cat ifcfg-eth1    </span><br><span class="line">DEVICE=eth1</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">MASTER=bond0</span><br><span class="line">SLAVE=yes</span><br></pre></td></tr></table></figure>
<h5 id="配置bond"><a href="#配置bond" class="headerlink" title="配置bond"></a>配置bond</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#cat ifcfg-bond0     //需要手工创建</span><br><span class="line">DEVICE=bond0</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=xx.xx.xx.xx</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">DNS1=8.8.8.8</span><br><span class="line">DNS2=114.114.114.114</span><br><span class="line">GATEWAY=xx.xx.xx.1</span><br><span class="line">#USERCTL=no #表明该设备是否只能由root用戶來控制（可选）</span><br></pre></td></tr></table></figure>
<p>#cat/etc/modprobe.d/modprobe.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">alias bond0 bonding</span><br><span class="line">options bond0 miimon=100 mode=0 #fail_over_mac=1 此参数用于vm workstation</span><br><span class="line"></span><br><span class="line">配置bond0的链路检查时间为100ms，模式为0</span><br><span class="line"></span><br><span class="line">bond0获取mac地址有两种方式,一种是从第一个活跃网卡中获取mac地址，然后其余的SLAVE网卡的mac地址都使用该mac地址；另一种是使用fail_over_mac参数，是bond0使用当前活跃网卡的mac地址，mac地址或者活跃网卡的转换而变。  </span><br><span class="line">svmware workstation不支持第一种获取mac地址的方式，那么可以使用fail_over_mac=1参数</span><br></pre></td></tr></table></figure>
<p>加载bond模块<br><code>modprobe bonding</code></p>
<p>查看结果<br><code>cat/proc/net/bonding/bond0</code></p>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> bond </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git客户端最新版安装]]></title>
      <url>/2017/07/12/git%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%9C%80%E6%96%B0%E7%89%88%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>升级Git为最新版<br><a id="more"></a><br>centos7环境</p>
<blockquote>
<p>系统默认安装为1.8版本，源码安装2.9</p>
</blockquote>
<h4 id="卸载并安装"><a href="#卸载并安装" class="headerlink" title="卸载并安装"></a>卸载并安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#卸载默认版本</span><br><span class="line">yum remove git -y</span><br><span class="line"></span><br><span class="line">#安装依赖库</span><br><span class="line">yum -y install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class="line">yum -y install gcc perl-ExtUtils-MakeMaker</span><br><span class="line"></span><br><span class="line">#新建文件夹，下载git源码包</span><br><span class="line">mkdir /usr/local/git</span><br><span class="line">cd 进去</span><br><span class="line">wget https://github.com/git/git/archive/v2.9.2.tar.gz</span><br><span class="line"></span><br><span class="line">#解压包</span><br><span class="line">tar -zxvf  包名</span><br><span class="line"></span><br><span class="line">#安装git</span><br><span class="line">make prefix=/usr/local/git all</span><br><span class="line">make prefix=/usr/local/git install</span><br><span class="line"></span><br><span class="line">#添加环境变量</span><br><span class="line">vi /etc/profile  </span><br><span class="line">export PATH=&quot;/usr/local/git/bin:$PATH&quot; </span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line">#查看版本</span><br><span class="line">git --version   #应该是git version 2.9.2</span><br><span class="line"></span><br><span class="line">#设置git默认路径</span><br><span class="line"> ln -s /usr/local/git/bin/git-upload-pack /usr/bin/git-upload-pack </span><br><span class="line">ln -s /usr/local/git/bin/git-receive-pack /usr/bin/git-receive-pack </span><br><span class="line">安装完毕！</span><br></pre></td></tr></table></figure>
<h4 id="创建git用户和组"><a href="#创建git用户和组" class="headerlink" title="创建git用户和组"></a>创建git用户和组</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  groupadd git</span><br><span class="line">  useradd git -g git </span><br><span class="line">  passwd git </span><br><span class="line"></span><br><span class="line">#切换git用户 避免权限问题</span><br><span class="line">su - git</span><br></pre></td></tr></table></figure>
<h4 id="Git-SSH-密钥认证"><a href="#Git-SSH-密钥认证" class="headerlink" title="Git SSH 密钥认证"></a>Git SSH 密钥认证</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#生成密钥</span><br><span class="line">ssh-keygen -t rsa -C &quot;****@sina.com&quot;</span><br><span class="line">#会多出两个密钥文件</span><br><span class="line">id_rsa  id_rsa.pub</span><br><span class="line">#复制.pub的内容到你的git账户下</span><br></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-865aa385b099b9d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sshkey.png"></p>
<h4 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line">#oschina的</span><br><span class="line">ssh -T git@git.oschina.net</span><br><span class="line">输入yes 会在当前目录生成known_hosts，认证成功！</span><br><span class="line"></span><br><span class="line">至此，git实现免密连接</span><br></pre></td></tr></table></figure>
<p>可以做先关git的操作了</p>
<h4 id="禁止git用户shell登录"><a href="#禁止git用户shell登录" class="headerlink" title="禁止git用户shell登录"></a>禁止git用户shell登录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/password</span><br><span class="line">git:x:502:502::/home/git:/bin/bash</span><br><span class="line">修改为</span><br><span class="line">git:x:502:502::/home/git:/usr/local/git/bin/git-shell</span><br></pre></td></tr></table></figure>
<p>完</p>
<hr>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[keepalive]]></title>
      <url>/2017/06/06/keepalive/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Keepalived使用的vrrp协议方式，虚拟路由冗余协议 (Virtual Router Redundancy Protocol，简称VRRP).<br>Keepalived模拟路由器的高可用，Heartbeat或Corosync的目的是实现Service的高可用。</p>
</blockquote>
<a id="more"></a>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>如无特殊需求,直接yum安装<code>yum install keepalived</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">主配置文件：/etc/keepalived/keepalived.conf</span><br><span class="line">主程序文件：/usr/sbin/keepalived</span><br><span class="line">Unit File：keepalived.service</span><br><span class="line">Unit File的环境配置文件：/etc/sysconfig/keepalived</span><br></pre></td></tr></table></figure></p>
<h4 id="单主模式"><a href="#单主模式" class="headerlink" title="单主模式"></a>单主模式</h4><p>10.1.27.23 主,27.24 备,vip:27.21</p>
<h5 id="master"><a href="#master" class="headerlink" title="master"></a>master</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@master keepalived]<span class="comment"># cat keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;   <span class="comment">#全局配置</span></span><br><span class="line">   router_id haproxy1 <span class="comment">#一般为hostnmae</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script checkhaproxy</span><br><span class="line">&#123;</span><br><span class="line">    script <span class="string">"/etc/keepalived/check.sh"</span> <span class="comment">#haproxy 健康检测</span></span><br><span class="line">    interval 3 <span class="comment">#3秒检查一次</span></span><br><span class="line">    weight -10</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;       <span class="comment">#vrrp命名,多个的时候,命名要不一致.</span></span><br><span class="line">    state MASTER         <span class="comment">#虚拟机路由器状态MASTER/BACKUP</span></span><br><span class="line">    interface eno16777984  <span class="comment">#通过那个网卡发送vrrp广播</span></span><br><span class="line">    virtual_router_id 51 <span class="comment">#虚拟路由器ID,如果有多个VI要注意区分这个ID</span></span><br><span class="line">    priority 100  <span class="comment">#优先级,越大越优先(取值范围1-255)</span></span><br><span class="line">    advert_int 1 <span class="comment">#广播时间间隔,默认1s</span></span><br><span class="line">    authentication &#123;  <span class="comment">#传递信息认证方式,密码仅支持8位</span></span><br><span class="line">        auth_type PASS  </span><br><span class="line">        auth_pass lizili</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;  <span class="comment">#虚拟路由地址</span></span><br><span class="line">        10.1.27.21/24</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        checkhaproxy  <span class="comment">#执行健康检测脚本</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="slave"><a href="#slave" class="headerlink" title="slave"></a>slave</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@slave keepalived]# cat keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id haproxy2</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script checkhaproxy</span><br><span class="line">&#123;</span><br><span class="line">    script &quot;/etc/keepalived/check.sh&quot;</span><br><span class="line">    interval 3</span><br><span class="line">    weight -10</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eno16777984</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 90</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass lizili</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.1.27.21/24</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        checkhaproxy</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="check脚本"><a href="#check脚本" class="headerlink" title="check脚本"></a>check脚本</h4><p>755权限<br>vim /etc/keepalived/check.sh<br>防止haproxy服务关闭keepalived不切,前提保证keepalive和haproxy都处于开启运行状态.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">if [ $(ps -C haproxy --no-header | wc -l) -eq 0 ]; then</span><br><span class="line">     /etc/init.d/haproxy  start</span><br><span class="line">fi</span><br><span class="line">sleep 2</span><br><span class="line">if [ $(ps -C haproxy --no-header | wc -l) -eq 0 ]; then</span><br><span class="line">    systemctl stop keepalived.service</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p>
<h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p>两台都安装httpd服务<code>yum -y install httpd</code><br><code>vi /var/www/html/index.html</code><br>内容分别写上本机IP,然后通过浏览器访问vip,应该能查看到master的IP地址.<br>然后关闭master的keepalived服务,刷新网页,应该出现slave的地址</p>
<h4 id="邮件告警"><a href="#邮件告警" class="headerlink" title="邮件告警"></a>邮件告警</h4><p>建议一定加上.<br>安装mailx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#安装mailx邮件服务</span><br><span class="line">yum install mailx -y</span><br><span class="line"></span><br><span class="line">#配置文件追加信息（/etc/mail.rc）</span><br><span class="line">vim /etc/mail.rc</span><br><span class="line">#发件人信息</span><br><span class="line">set from=lizili@xxxxxx.com</span><br><span class="line">set smtp=smtp.xxxxxx.com</span><br><span class="line">set smtp-auth-user=lizili</span><br><span class="line">set smtp-auth-password=xxxxxx</span><br><span class="line">set smtp-auth=login</span><br><span class="line"></span><br><span class="line">#测试发送</span><br><span class="line">echo &quot;hello world&quot; | mail -s &quot;hello&quot; lizili@xxxxxx.com</span><br><span class="line">#echo &quot;邮件内容&quot; | mail -s &quot;标题&quot; 邮箱地址</span><br><span class="line">#邮件策略上,把账号加如白名单,以防被拉黑.</span><br></pre></td></tr></table></figure></p>
<p>配置keepalived<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#在VRRP实例中虚拟IP下配置添加以下信息</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    #Keepalived进入MASTER状态执行脚本</span><br><span class="line">    notify_master &quot;/etc/keepalived/mail_notify.sh master&quot;</span><br><span class="line">    #Keepalived进入BACKUP状态执行脚本</span><br><span class="line">    notify_backup &quot;/etc/keepalived/mail_notify.sh backup&quot;</span><br><span class="line">    #Keepalived进入FAULT状态执行脚本</span><br><span class="line">    notify_fault &quot;/etc/keepalived/mail_notify.sh fault&quot;</span><br><span class="line">｝</span><br></pre></td></tr></table></figure></p>
<p>新建脚本 755权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/keepalived/mail_notify.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;keepalived 10.1.27.23 $1 状态被激活，请确认服务运行状态&quot;|mail -s &quot;keepalived状态切换&quot; lizili@wondersgroup.com</span><br></pre></td></tr></table></figure></p>
<h4 id="双主模式"><a href="#双主模式" class="headerlink" title="双主模式"></a>双主模式</h4><p>配置并没有太大的变化,在添加一个vrrp实例即可,配置如下<br>master<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vrrp_instance VI_2 &#123;       #vrrp命名,多个的时候,命名要不一致.</span><br><span class="line">    state BACKUP         #修改为backup</span><br><span class="line">    interface eno16777984  #通过那个网卡发送vrrp广播</span><br><span class="line">    virtual_router_id 52 #虚拟路由器ID,如果有多个VI要注意区分这个ID</span><br><span class="line">    priority 99  #优先级,越大越优先(取值范围1-255)</span><br><span class="line">    advert_int 1 #广播时间间隔,默认1s</span><br><span class="line">    authentication &#123;  #传递信息认证方式,密码仅支持8位</span><br><span class="line">        auth_type PASS  </span><br><span class="line">        auth_pass lizili</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;  #虚拟路由地址</span><br><span class="line">        10.1.27.11</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>slave</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eno16777984</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass lizili</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.1.27.11</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其实就是增加新的配置 VI_2 使用Server B 做主，如此 Server A、B 各自拥有主虚拟 IP，同时备份对方的虚拟 IP, 这个方案可以是不同的服务，或者是同一服务的访问分流(配合 DNS 使用)</p>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>相关的内核参数<br>HAProxy+Keepalived架构需要注意的内核参数有：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/etc/systcl.conf</span><br><span class="line"></span><br><span class="line">net.ipv4.ip_forward = 1 #开启IP转发功能</span><br><span class="line">net.ipv4.ip_nonlocal_bind = 1 #开启允许绑定非本机的IP</span><br><span class="line"></span><br><span class="line">systcl -p</span><br></pre></td></tr></table></figure></p>
<p>如果使用LVS的DR或者TUN模式结合Keepalived需要在后端真实服务器上特别设置两个arp相关的参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.conf.lo.arp_ignore = 1</span><br><span class="line">net.ipv4.conf.lo.arp_announce = 2</span><br><span class="line">net.ipv4.conf.all.arp_ignore = 1</span><br><span class="line">net.ipv4.conf.all.arp_announce = 2</span><br></pre></td></tr></table></figure></p>
<hr>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> keepalive </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[django时间问题]]></title>
      <url>/2017/05/19/django%E6%97%B6%E9%97%B4%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>配置文件settings.py中，有两个配置参数是跟时间与时区有关的</p>
<blockquote>
<p>TIME_ZONE  和 USE_TZ</p>
</blockquote>
<p>如果<code>USE_TZ</code>设置为<code>True</code>时，<br>使用系统默认设置的时区<code>America/Chicago</code><br>此时的TIME_ZONE不起任何作用</p>
<p>如果<code>USE_TZ</code> 设置为<code>False</code><br><code>TIME_ZONE</code>设置为<code>None</code>，使用默认的<code>America/Chicago</code>时间。<br><code>TIME_ZONE</code>设置为其它时区的话，</p>
<p>Windows系统，则<code>TIME_ZONE</code>无用，Django使用本机的时间。</p>
<p>如果为其他系统，以设置为准,上海的UTC时间 <code>USE_TZ = False, TIME_ZONE = &#39;Asia/Shanghai&#39;</code></p>
<hr>
]]></content>
      
        <categories>
            
            <category> web </category>
            
            <category> django </category>
            
        </categories>
        
        
        <tags>
            
            <tag> django </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Django静态文件]]></title>
      <url>/2017/05/17/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>Django静态文件配置<br><a id="more"></a></p>
<p>Django 1.10</p>
<h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Project/</span><br><span class="line">├── db.sqlite3</span><br><span class="line">├── manage.py</span><br><span class="line">├── Project</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── settings.py</span><br><span class="line">│   ├── urls.py</span><br><span class="line">│   ├── wsgi.py</span><br><span class="line">├── app01</span><br><span class="line">│   ├── admin.py</span><br><span class="line">│   ├── apps.py</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── migrations</span><br><span class="line">│   │   ├── __init__.py</span><br><span class="line">│   ├── models.py</span><br><span class="line">│   ├── static  #静态文件位置</span><br><span class="line">│   │   └── css.css</span><br><span class="line">│   ├── templates  #网页模版位置</span><br><span class="line">│   │   └── index.html</span><br><span class="line">│   ├── tests.py</span><br><span class="line">│   ├── views.py</span><br><span class="line">└── templates</span><br></pre></td></tr></table></figure>
<h4 id="settings修改-项目下"><a href="#settings修改-项目下" class="headerlink" title="settings修改(项目下)"></a>settings修改(项目下)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在STATIC_URL = &apos;/static/&apos;  后添加</span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, &apos;static&apos;)</span><br><span class="line">#如若不行，添加如下信息</span><br><span class="line">STATICFILES_DIRS = (</span><br><span class="line">     os.path.join(BASE_DIR, &apos;/home/ubuntu/django/wechat/zbx/static&apos;),     #路径          </span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h4 id="urls修改-项目下"><a href="#urls修改-项目下" class="headerlink" title="urls修改(项目下)"></a>urls修改(项目下)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#导入库文件</span><br><span class="line">from django.conf import settings</span><br><span class="line">from django.conf.urls.static import static</span><br><span class="line">末尾追加</span><br><span class="line">+ static(settings.STATIC_URL, document_root = settings.STATIC_ROOT)</span><br><span class="line"></span><br><span class="line">#最后类似</span><br><span class="line"></span><br><span class="line">from django.conf import settings</span><br><span class="line">from django.conf.urls.static import static</span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(r&apos;^admin/&apos;, admin.site.urls),</span><br><span class="line">] + static(settings.STATIC_URL, document_root = settings.STATIC_ROOT)</span><br></pre></td></tr></table></figure>
<h4 id="网页模版下引用"><a href="#网页模版下引用" class="headerlink" title="网页模版下引用"></a>网页模版下引用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css.css&quot;&gt;</span><br></pre></td></tr></table></figure>
<p>重新运行项目即可使用了。</p>
]]></content>
      
        <categories>
            
            <category> web </category>
            
            <category> django </category>
            
        </categories>
        
        
        <tags>
            
            <tag> django </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[iSCSI存储]]></title>
      <url>/2017/05/15/iSCSI%E5%AD%98%E5%82%A8/</url>
      <content type="html"><![CDATA[<p>临时需要个挂个iSCSI,发现基本想不起来,果然好记性不如烂笔头,还是写一下比较好-。-</p>
<a id="more"></a>
<blockquote>
<p>摘:<br>iSCSI是一种基于TCP/IP 的协议，用来建立和管理IP存储设备、主机和客户机等之间的相互连接，并创建存储区域网络（SAN）。SAN 使得SCSI 协议应用于高速数据传输网络成为可能，这种传输以数据块级别（block-level）在多个数据存储网络间进行。SCSI 结构基于C/S模式，其通常应用环境是：设备互相靠近，并且这些设备由SCSI 总线连接。<br>·<br>简单说<br>iSCSI就是把SCSI指令通过TCP/IP协议封装起来，在以太网中传输。iSCSI 可以实现在IP网络上传递和运行SCSI协议，使其能够在诸如高速千兆以太网上进行数据存取，实现了数据的网际传递和管理。基于iSCSI建立的存储区域网（SAN）与基于光纤的FC-SAN相比，具有很好的性价比。</p>
</blockquote>
<p>关闭了selinux 和防火墙，centos7<br>target （服务器）： 192.168.247.149<br>Initiator（客户端）：192.168.247.154</p>
<h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><h5 id="新加硬盘做存储"><a href="#新加硬盘做存储" class="headerlink" title="新加硬盘做存储"></a>新加硬盘做存储</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br></pre></td></tr></table></figure>
<h5 id="创建磁盘并格式化"><a href="#创建磁盘并格式化" class="headerlink" title="创建磁盘并格式化"></a>创建磁盘并格式化</h5><blockquote>
<p>一个硬盘主 分区至少有1个，最多4个，扩展分区可以没有，最多1个。且主分区+扩展分区总共不能超过4个。<br>为了突破这最多四个主分区的限制，管理员可以把其中一个主分区设置为扩展分区(注意只能够使用一个扩展分区)来进行扩充。而在扩充分区下，又可以建立多个逻辑分区。也就是说，扩展分区是无法直接使用的，必须在细分成逻辑分区才可以用来存储数据。通常情况下，逻辑分区的起始位置及结束位置记录在每个逻辑分区的第一个扇区，这也叫做扩展分区表。在扩展分区下，系统管理员可以根据实际情况建立多个逻辑分区，将一个扩展分区划割成多个区域来使用。</p>
</blockquote>
<p>格式化为LVM（LVM是 Logical Volume Manager逻辑卷管理）<br>LVM的好处就是可以按需分配，动态管理<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p       <span class="comment">#必须要一个主分区</span></span><br><span class="line">Partition number (1-4, default 1): </span><br><span class="line">First sector (2048-41943039, default 2048): </span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-41943039, default 41943039): </span><br><span class="line">Using default value 41943039</span><br><span class="line">Partition 1 of <span class="built_in">type</span> Linux and of size 20 GiB is <span class="built_in">set</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): t    <span class="comment">#类型</span></span><br><span class="line">Selected partition 1        <span class="comment">#编号 可按  L  查看要创建的格式</span></span><br><span class="line">Hex code (<span class="built_in">type</span> L to list all codes): 8e</span><br><span class="line">Changed <span class="built_in">type</span> of partition <span class="string">'Linux'</span> to <span class="string">'Linux LVM'</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p      <span class="comment">#查看</span></span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0xea844b86</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    41943039    20970496   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">保存即可</span><br><span class="line"></span><br><span class="line">partprobe <span class="comment">#是配置生效</span></span><br></pre></td></tr></table></figure></p>
<h5 id="创建逻辑卷"><a href="#创建逻辑卷" class="headerlink" title="创建逻辑卷"></a>创建逻辑卷</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root~] ]$pvcreate /dev/sdb1</span><br><span class="line">  Physical volume &quot;/dev/sdb1&quot; successfully created</span><br><span class="line">[root~] ]$pvs</span><br><span class="line">  PV         VG     Fmt  Attr PSize  PFree </span><br><span class="line">  /dev/sda2  centos lvm2 a--  59.78g     0 </span><br><span class="line">  /dev/sdb1         lvm2 ---  20.00g 20.00g</span><br><span class="line">[root~] ]$vgcreate vg_iscsi /dev/sdb1</span><br><span class="line">  Volume group &quot;vg_iscsi&quot; successfully created</span><br><span class="line">[root~] ]$vgs</span><br><span class="line">  VG       #PV #LV #SN Attr   VSize  VFree </span><br><span class="line">  centos     1   2   0 wz--n- 59.78g     0 </span><br><span class="line">  vg_iscsi   1   0   0 wz--n- 20.00g 20.00g</span><br><span class="line">[root~] ]$lvcreate -l 100%FREE -n /dev/vg_iscsi/lv_iscsi</span><br><span class="line">  Logical volume &quot;lv_iscsi&quot; created.</span><br><span class="line">[root~] ]$lvs</span><br><span class="line">  LV       VG       Attr       LSize  Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root     centos   -wi-ao---- 57.78g                                                    </span><br><span class="line">  swap     centos   -wi-ao----  2.00g                                                    </span><br><span class="line">  lv_iscsi vg_iscsi -wi-a----- 20.00g</span><br></pre></td></tr></table></figure>
<h5 id="安装配置target"><a href="#安装配置target" class="headerlink" title="安装配置target"></a>安装配置target</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">[root~] ]$yum -y install targetcli</span><br><span class="line">[root~] ]$targetcli </span><br><span class="line">#最初状态</span><br><span class="line">/&gt; ls</span><br><span class="line">o- / ......................................................................................................................... [...]</span><br><span class="line">  o- backstores .............................................................................................................. [...]</span><br><span class="line">  | o- block .................................................................................................. [Storage Objects: 0]</span><br><span class="line">  | o- fileio ................................................................................................. [Storage Objects: 0]</span><br><span class="line">  | o- pscsi .................................................................................................. [Storage Objects: 0]</span><br><span class="line">  | o- ramdisk ................................................................................................ [Storage Objects: 0]</span><br><span class="line">  o- iscsi ............................................................................................................ [Targets: 0]</span><br><span class="line">  o- loopback ......................................................................................................... [Targets: 0]</span><br><span class="line">/&gt; cd backstores/block </span><br><span class="line">/backstores/block&gt; create sdb1_iscsi /dev/vg_iscsi/lv_iscsi</span><br><span class="line">Created block storage object sdb1_iscsi using /dev/vg_iscsi/lv_iscsi.</span><br><span class="line">切换到iscsi下</span><br><span class="line">/iscsi&gt; create iqn.2017-05.com.master:ip149   #注意全局唯一，格式iqn.日期（日期只能有年月并且月份必须加0.颠倒的domain：自定义标识</span><br><span class="line">/iscsi/iqn.20...149/tpg1/acls&gt; create iqn.2017-05.com.master:ip149</span><br><span class="line">Created Node ACL for iqn.2017-05.com.master:ip149</span><br><span class="line">/iscsi/iqn.20...149/tpg1/acls&gt; cd ../luns </span><br><span class="line">/iscsi/iqn.20...149/tpg1/luns&gt; create /backstores/block/sdb1_iscsi</span><br><span class="line">/iscsi/iqn.20...149/tpg1/luns&gt; cd ../portals/</span><br><span class="line">/iscsi/iqn.20.../tpg1/portals&gt; create 192.168.247.149</span><br><span class="line">Using default IP port 3260</span><br><span class="line">/iscsi/iqn.20.../tpg1/portals&gt; cd /</span><br><span class="line">#完成状态</span><br><span class="line">/&gt; ls</span><br><span class="line">o- / ......................................................................................................................... [...]</span><br><span class="line">  o- backstores .............................................................................................................. [...]</span><br><span class="line">  | o- block .................................................................................................. [Storage Objects: 1]</span><br><span class="line">  | | o- sdb1_iscsi ........................................................ [/dev/vg_iscsi/lv_iscsi (20.0GiB) write-thru activated]</span><br><span class="line">  | o- fileio ................................................................................................. [Storage Objects: 0]</span><br><span class="line">  | o- pscsi .................................................................................................. [Storage Objects: 0]</span><br><span class="line">  | o- ramdisk ................................................................................................ [Storage Objects: 0]</span><br><span class="line">  o- iscsi ............................................................................................................ [Targets: 1]</span><br><span class="line">  | o- iqn.2017-05.com.master:ip149 ...................................................................................... [TPGs: 1]</span><br><span class="line">  |   o- tpg1 ............................................................................................... [no-gen-acls, no-auth]</span><br><span class="line">  |     o- acls .......................................................................................................... [ACLs: 1]</span><br><span class="line">  |     | o- iqn.2017-05.com.master:ip149 ......................................................................... [Mapped LUNs: 1]</span><br><span class="line">  |     |   o- mapped_lun0 ............................................................................ [lun0 block/sdb1_iscsi (rw)]</span><br><span class="line">  |     o- luns .......................................................................................................... [LUNs: 1]</span><br><span class="line">  |     | o- lun0 ...................................................................... [block/sdb1_iscsi (/dev/vg_iscsi/lv_iscsi)]</span><br><span class="line">  |     o- portals .................................................................................................... [Portals: 1]</span><br><span class="line">  |       o- 0.0.0.0:3260 ..................................................................................................... [OK]</span><br><span class="line">  o- loopback ......................................................................................................... [Targets: 0]</span><br><span class="line">/&gt; exit</span><br></pre></td></tr></table></figure>
<h5 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root~] ]$systemctl start target.service </span><br><span class="line">[root~] ]$systemctl enable target.service </span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/target.service to /usr/lib/systemd/system/target.service.</span><br><span class="line">[root~] ]$</span><br></pre></td></tr></table></figure>
<h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> [root~] ]$yum -y install iscsi-initiator*</span><br><span class="line"> [root~] ]$vim /etc/iscsi/initiatorname.iscsi </span><br><span class="line">InitiatorName=iqn.2017-05.com.master:ip149 #服务器的iqn</span><br><span class="line"></span><br><span class="line">[root@minion-02 /]# systemctl restart iscsi</span><br><span class="line">[root@minion-02 /]# iscsiadm -m discovery -t st -p 192.168.247.149</span><br><span class="line">192.168.247.149:3260,1 iqn.2017-05.com.master:ip149</span><br><span class="line">[root@minion-02 /]# iscsiadm -m node -T iqn.2017-05.com.master:ip149 -p 192.168.247.149 -l</span><br><span class="line">Logging in to [iface: default, target: iqn.2017-05.com.master:ip149, portal: 192.168.247.149,3260] (multiple)</span><br><span class="line">Login to [iface: default, target: iqn.2017-05.com.master:ip149, portal: 192.168.247.149,3260] successful.</span><br><span class="line">[root@minion-02 /]# fdisk -l</span><br><span class="line">#可以看到iscsi已经挂上 为sdb</span><br><span class="line">Disk /dev/sdb: 21.5 GB, 21470642176 bytes, 41934848 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 4194304 bytes</span><br><span class="line">[root@minion-02 /]# </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#sdb就像是新加的硬盘，我们可以fdisk 它</span><br><span class="line"> n  p 1 enter enter w</span><br><span class="line">我们可以对这个盘进行单独的挂载。切记不可扩展到某个分区</span><br></pre></td></tr></table></figure>
<h5 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@minion-02 /]#  mkfs.xfs /dev/sdb1</span><br><span class="line">[root@minion-02 /]#  mkdir /mnt/iscsi</span><br><span class="line">[root@minion-02 /]#  mount /dev/sdb1 /mnt/iscsi/</span><br><span class="line">[root@minion-02 /]# blkid</span><br><span class="line">/dev/sda1 : UUID=&quot;64f589c2-2ac4-47f7-8d35-170913a2563f&quot; TYPE=”xfs”</span><br><span class="line">[root@minion-02 /]# vim /etc/fstab</span><br><span class="line">UUID=&quot;64f589c2-2ac4-47f7-8d35-170913a2563f&quot;     /mnt/iscsi   xfs     defaults,_netdev        0 0</span><br><span class="line"></span><br><span class="line">fstab一定呀写对，不然系统重启会启动不起来，特别注意。</span><br><span class="line">万一 启动不起来怎么办？</span><br><span class="line">重启虚拟机  按 e 进行编辑</span><br><span class="line">修改ro  rd........等  为 rd.break</span><br><span class="line"></span><br><span class="line">switch_root:/# mount –o remount,rw /sysroot/</span><br><span class="line">switch_root:/# chroot /sysroot/</span><br><span class="line">sh-4.2#vi /etc/fstab    #重新编辑</span><br><span class="line">##这里还可以修改root密码。</span><br><span class="line">passwd root</span><br><span class="line"></span><br><span class="line">如果开了seLinux.记得 touch /.autorelabel 这句是为了selinux生效,否则系统无法正常启动</span><br><span class="line">如果忘记密码也可用这个办法修改</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> iSCSI </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Django连接MySql]]></title>
      <url>/2017/05/13/django%E8%BF%9E%E6%8E%A5MySql/</url>
      <content type="html"><![CDATA[<p><strong>前言</strong><br>Django默认连接的是sqlite,简单的开发测试还不错,随着需求的增加,难免需要更换</p>
<a id="more"></a>
<h4 id="setting-py"><a href="#setting-py" class="headerlink" title="setting.py"></a>setting.py</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    &apos;default&apos;: &#123;</span><br><span class="line">#        &apos;ENGINE&apos;: &apos;django.db.backends.sqlite3&apos;,</span><br><span class="line">#        &apos;NAME&apos;: os.path.join(BASE_DIR, &apos;db.sqlite3&apos;),</span><br><span class="line">         &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,</span><br><span class="line">         #数据库名字</span><br><span class="line">         &apos;NAME&apos;: &apos;study&apos;, </span><br><span class="line">         &apos;USER&apos;: &apos;root&apos;,</span><br><span class="line">         &apos;PASSWORD&apos;: &apos;centos&apos;,</span><br><span class="line">         &apos;HOST&apos;: &apos;127.0.0.1&apos;,</span><br><span class="line">         &apos;PORT&apos;: &apos;3306&apos;,</span><br><span class="line">         &apos;OPTIONS&apos;: &#123;</span><br><span class="line">            &apos;autocommit&apos;: True,</span><br><span class="line">            &apos;init_command&apos;: &quot;SET sql_mode=&apos;STRICT_TRANS_TABLES&apos;&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="安装相关模块"><a href="#安装相关模块" class="headerlink" title="安装相关模块"></a>安装相关模块</h4><blockquote>
<p>python3 不在支持MySQLdb<br>安装pymsql  <code>pip3 install pymysql</code></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#去项目下修改__init__.py,使其默认数据库模块为pymysql</span><br><span class="line">import pymysql</span><br><span class="line">pymysql.install_as_MySQLdb()</span><br></pre></td></tr></table></figure>
<h4 id="项目下执行"><a href="#项目下执行" class="headerlink" title="项目下执行"></a>项目下执行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure>
<p>如果有类似如下报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/usr/lib64/python2.7/site-packages/pymysql/cursors.py:165: Warning: (3135, u&quot;&apos;NO_ZERO_DATE&apos;, &apos;NO_ZERO_IN_DATE&apos; and &apos;ERROR_FOR_DIVISION_BY_ZERO&apos; sql modes should be used with strict mode. They will be merged with strict mode in a future release.&quot;)</span><br><span class="line">  result = self._query(query)</span><br><span class="line">/usr/lib64/python2.7/site-packages/pymysql/cursors.py:165: Warning: (3090, u&quot;Changing sql mode &apos;NO_AUTO_CREATE_USER&apos; is deprecated. It will be removed in a future release.&quot;)</span><br><span class="line">  result = self._query(query)</span><br></pre></td></tr></table></figure></p>
<p>更改 setting.py DATABASES 中 <code>&#39;init_command&#39;: &quot;SET sql_mode=&#39;traditional&#39;&quot;,</code></p>
<h4 id="操纵models-py"><a href="#操纵models-py" class="headerlink" title="操纵models.py"></a>操纵models.py</h4><p><strong>数据库相关一般都写在这个模块下</strong> 前提，应用要加到setting中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">from django.db import models</span><br><span class="line"></span><br><span class="line"># Create your models here.</span><br><span class="line">#新建了一个Student类，继承自models.Model</span><br><span class="line">class Student(models.Model):</span><br><span class="line">    name = models.CharField(max_length=128)</span><br><span class="line">    age = models.IntegerField(max_length=3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#上面代码其实就相当于原生sql</span><br><span class="line"></span><br><span class="line">CREATE TABLE myapp_person (</span><br><span class="line">    &quot;id&quot; serial NOT NULL PRIMARY KEY,</span><br><span class="line">    &quot;name&quot; varchar(30) NOT NULL,</span><br><span class="line">    &quot;age&quot; int() NOT NULL</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">#然后进行同步</span><br><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br><span class="line"></span><br><span class="line">#生成一个</span><br><span class="line">项目名称+下划线+小写类名的表</span><br><span class="line">比如项目叫study_1，那表名就叫study_1_student</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#插入数据</span><br><span class="line">class Student(models.Model):</span><br><span class="line">        Student.objects.create(name=&apos;lizili&apos;,age=18)</span><br><span class="line">        Student.objects.create(name=&apos;vic&apos;,age=22)</span><br><span class="line">        Student.objects.create(name=&apos;zhang&apos;,age=12)</span><br><span class="line"></span><br><span class="line">#返回数据</span><br><span class="line">    def __str__(self):  #固定格式</span><br><span class="line">        return u&apos;name: %s , age:%s&apos; % (self.name,self.age)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#需要数据的页面</span><br><span class="line">#导入</span><br><span class="line">from study_1.models import Student</span><br><span class="line">#查询，展示</span><br><span class="line">def test(request):</span><br><span class="line">    student_list = Student.objects.all()</span><br><span class="line">    student_str = map(str,student_list)</span><br><span class="line">    return HttpResponse(student_str)</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> web </category>
            
            <category> django </category>
            
        </categories>
        
        
        <tags>
            
            <tag> django </tag>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix监控MySQL性能]]></title>
      <url>/2017/05/01/zabbix%E7%9B%91%E6%8E%A7MySQL%E6%80%A7%E8%83%BD/</url>
      <content type="html"><![CDATA[<p>套用自带模板监控mysql性能</p>
<a id="more"></a>
<h4 id="安装agent"><a href="#安装agent" class="headerlink" title="安装agent"></a>安装agent</h4><p><a href="http://blog.dl1548.site/2017/04/18/zabbix-agent%E5%AE%89%E8%A3%85/" target="_blank" rel="noopener">查看此链接</a></p>
<h4 id="DB权限"><a href="#DB权限" class="headerlink" title="DB权限"></a>DB权限</h4><ol>
<li>在客户端的mysql里添加权限,使用zabbix账号连接本地的mysql<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all on *.* to zabbix@&apos;localhost&apos; identified by &quot;zabbix”;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="编辑-my-cnf"><a href="#编辑-my-cnf" class="headerlink" title="编辑 my.cnf"></a>编辑 my.cnf</h4><p><code>/etc/zabbix/etc/my.cnf</code> (需新建)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#zabbix Agent</span><br><span class="line">[mysql]</span><br><span class="line">host=localhost</span><br><span class="line">user=zabbix</span><br><span class="line">password=zabbix</span><br><span class="line">socket=/var/lib/mysql/mysql.sock  #具体根据个人情况</span><br><span class="line">[mysqladmin]</span><br><span class="line">host=localhost</span><br><span class="line">user=zabbix</span><br><span class="line">password=zabbix</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br></pre></td></tr></table></figure></p>
<h4 id="修改agentd"><a href="#修改agentd" class="headerlink" title="修改agentd"></a>修改agentd</h4><p><code>/etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf</code><br><code>HOME=/var/lib/zabbix</code> 修改为 <code>HOME=/etc/zabbix/etc/</code></p>
<p>其他<br><code>zabbix_agentd.conf</code>配置文件中<br><code>Include</code>选择要包含 <code>zabbix_agentd.d</code></p>
<p><code>service zabbix-agent restart</code></p>
<p>然后去web端口,添加主机 套用内置mysql模板就可以了.</p>
<h4 id="关于userparameter-mysql-conf"><a href="#关于userparameter-mysql-conf" class="headerlink" title="关于userparameter_mysql.conf"></a>关于userparameter_mysql.conf</h4><p> 还有一种配置</p>
<h5 id="新建脚本"><a href="#新建脚本" class="headerlink" title="新建脚本"></a>新建脚本</h5><p><code>vim /etc/zabbix/chk_mysql.sh</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># 用户名</span><br><span class="line">MYSQL_USER=&apos;zabbix&apos;</span><br><span class="line"># 密码</span><br><span class="line">MYSQL_PWD=&apos;zabbix&apos;</span><br><span class="line"># 主机地址/IP</span><br><span class="line">MYSQL_HOST=&apos;127.0.0.1&apos;</span><br><span class="line"># 端口</span><br><span class="line">MYSQL_PORT=&apos;3306&apos;</span><br><span class="line"># 数据连接</span><br><span class="line">MYSQL_CONN=&quot;/usr/bin/mysqladmin -u$&#123;MYSQL_USER&#125; -p$&#123;MYSQL_PWD&#125; -h$&#123;MYSQL_HOST&#125; -P$&#123;MYSQL_PORT&#125;&quot;</span><br><span class="line"># 参数是否正确</span><br><span class="line">if [ $# -ne &quot;1&quot; ];then </span><br><span class="line">    echo &quot;arg error!&quot; </span><br><span class="line">fi </span><br><span class="line"># 获取数据</span><br><span class="line">case $1 in </span><br><span class="line">    Uptime) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; status|cut -f2 -d&quot;:&quot;|cut -f1 -d&quot;T&quot;` </span><br><span class="line">        echo $result </span><br><span class="line">        ;; </span><br><span class="line">    Com_update) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_update&quot;|cut -d&quot;|&quot; -f3` </span><br><span class="line">        echo $result </span><br><span class="line">        ;; </span><br><span class="line">    Slow_queries) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; status |cut -f5 -d&quot;:&quot;|cut -f1 -d&quot;O&quot;` </span><br><span class="line">        echo $result </span><br><span class="line">        ;; </span><br><span class="line">    Com_select) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_select&quot;|cut -d&quot;|&quot; -f3` </span><br><span class="line">        echo $result </span><br><span class="line">                ;; </span><br><span class="line">    Com_rollback) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_rollback&quot;|cut -d&quot;|&quot; -f3` </span><br><span class="line">                echo $result </span><br><span class="line">                ;; </span><br><span class="line">    Questions) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; status|cut -f4 -d&quot;:&quot;|cut -f1 -d&quot;S&quot;` </span><br><span class="line">                echo $result </span><br><span class="line">                ;; </span><br><span class="line">    Com_insert) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_insert&quot;|cut -d&quot;|&quot; -f3` </span><br><span class="line">                echo $result </span><br><span class="line">                ;; </span><br><span class="line">    Com_delete) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_delete&quot;|cut -d&quot;|&quot; -f3` </span><br><span class="line">                echo $result </span><br><span class="line">                ;; </span><br><span class="line">    Com_commit) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_commit&quot;|cut -d&quot;|&quot; -f3` </span><br><span class="line">                echo $result </span><br><span class="line">                ;; </span><br><span class="line">    Bytes_sent) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Bytes_sent&quot; |cut -d&quot;|&quot; -f3` </span><br><span class="line">                echo $result </span><br><span class="line">                ;; </span><br><span class="line">    Bytes_received) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Bytes_received&quot; |cut -d&quot;|&quot; -f3` </span><br><span class="line">                echo $result </span><br><span class="line">                ;; </span><br><span class="line">    Com_begin) </span><br><span class="line">        result=`$&#123;MYSQL_CONN&#125; extended-status |grep -w &quot;Com_begin&quot;|cut -d&quot;|&quot; -f3` </span><br><span class="line">                echo $result </span><br><span class="line">                ;; </span><br><span class="line"></span><br><span class="line">        *) </span><br><span class="line">        echo &quot;Usage:$0(Uptime|Com_update|Slow_queries|Com_select|Com_rollback|Questions|Com_insert|Com_delete|Com_commit|Bytes_sent|Bytes_received|Com_begin)&quot; </span><br><span class="line">        ;; </span><br><span class="line">esac</span><br></pre></td></tr></table></figure></p>
<h5 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf</span><br><span class="line"></span><br><span class="line">#UserParameter=mysql.status[*],echo &quot;show global status where Variable_name=&apos;$1&apos;;&quot; | HOME=/var/lib/zabbix mysql -N | awk &apos;&#123;print $$2&#125;&apos;</span><br><span class="line">UserParameter=mysql.status[*],/etc/zabbix/chk_mysql.sh $1</span><br><span class="line"></span><br><span class="line">#UserParameter=mysql.size[*],bash -c &apos;echo &quot;select sum($(case &quot;$3&quot; in both|&quot;&quot;) echo &quot;data_length+index_length&quot;;; data|index) echo &quot;$3_length&quot;;; free) echo &quot;data_free&quot;;; esac)) from information_schema.tables$([[ &quot;$1&quot; = &quot;all&quot; || ! &quot;$1&quot; ]] || echo &quot; where table_schema=\&quot;$1\&quot;&quot;)$([[ &quot;$2&quot; = &quot;all&quot; || ! &quot;$2&quot; ]] || echo &quot;and table_name=\&quot;$2\&quot;&quot;);&quot; | HOME=/var/lib/zabbix mysql -N&apos;</span><br><span class="line"></span><br><span class="line">#UserParameter=mysql.ping,HOME=/var/lib/zabbix mysqladmin ping | grep -c alive</span><br><span class="line">UserParameter=mysql.ping,mysqladmin -uzabbix -pzabbix -P3306 -h127.0.0.1  ping | grep -c alive</span><br><span class="line">UserParameter=mysql.version,mysql -V</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu安装Django-mysql]]></title>
      <url>/2017/04/29/ubuntu%E5%AE%89%E8%A3%85Django-mysql/</url>
      <content type="html"><![CDATA[<h4 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mysql-server mysql-client libmysqlclient-dev</span><br></pre></td></tr></table></figure>
<h4 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h4><p><strong>并重置密码 修改配置</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql start</span><br><span class="line">#重置密码,注意符合复杂度</span><br><span class="line">mysql_secure_installation</span><br><span class="line">#注释 vi /etc/mysql/mysql.conf.d/mysqld.cnf  </span><br><span class="line">bind-address = 127.0.0.1</span><br><span class="line">#连接数据库开启root远程</span><br><span class="line">mysql -u -p  xxxxx</span><br><span class="line">grant all privileges on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;******&apos;;</span><br><span class="line">flush privileges</span><br><span class="line">或退出重启</span><br><span class="line">/etc/init.d/mysql restart</span><br></pre></td></tr></table></figure></p>
<h4 id="安装pip3"><a href="#安装pip3" class="headerlink" title="安装pip3"></a>安装pip3</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python3-pip</span><br></pre></td></tr></table></figure>
<h4 id="安装django"><a href="#安装django" class="headerlink" title="安装django"></a>安装django</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install django==1.10</span><br></pre></td></tr></table></figure>
<h4 id="使用django"><a href="#使用django" class="headerlink" title="使用django"></a>使用django</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir django</span><br><span class="line">cd django</span><br><span class="line">sudo django-admin startproject study</span><br><span class="line">cd study</span><br><span class="line">sudo python3 manage.py startapp app1</span><br><span class="line">sudo python3 manage.py runserver 0.0.0.0:8000</span><br><span class="line"></span><br><span class="line">#本机打开127.0.0.1:8000即可看到 </span><br><span class="line">It worked!</span><br><span class="line">Congratulations on your first Django-powered page.</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> django </tag>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[centos密码破解]]></title>
      <url>/2017/04/24/centos%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</url>
      <content type="html"><![CDATA[<blockquote>
<p>破解centos密码</p>
</blockquote>
<a id="more"></a>
<h5 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">rd.break方法：</span><br><span class="line">- 启动的时候，在启动界面，相应启动项，内核名称上按“e”；</span><br><span class="line">- 进入后，找到linux16开头的地方，按“end”键到最后，输入rd.break，按ctrl+x进入；</span><br><span class="line">- 进去后输入命令mount，发现根为/sysroot/，并且不能写，只有ro=readonly权限；</span><br><span class="line">- mount -o remount,rw /sysroot/，重新挂载，之后mount，发现有了r,w权限；</span><br><span class="line">- chroot /sysroot/ 改变根；</span><br><span class="line">- passwd  root 修改root密码</span><br><span class="line">- 如果开了seLinux.记得 touch /.autorelabel 这句是为了selinux生效,否则系统无法正常启动</span><br><span class="line">- exit 退出重启</span><br><span class="line"></span><br><span class="line">init方法：</span><br><span class="line"></span><br><span class="line">- 启动系统，并在GRUB2启动屏显时，按下e键进入编辑模式。</span><br><span class="line">- 在linux16/linux/linuxefi所在参数行尾添加以下内容：init=/bin/sh</span><br><span class="line">-  按Ctrl+x启动到shell。</span><br><span class="line">- 挂载文件系统为可写模式：mount –o remount,rw /</span><br><span class="line">- 运行passwd,并按提示修改root密码。</span><br><span class="line">- 如何之前系统启用了selinux，必须运行以下命令，否则将无法正常启动系统：touch /.autorelabel</span><br><span class="line">-  运行命令exec /sbin/init来正常启动，或者用命令exec /sbin/reboot重启</span><br></pre></td></tr></table></figure>
<h5 id="centos6"><a href="#centos6" class="headerlink" title="centos6"></a>centos6</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 重启系统，在开机启动的时候能看到引导目录，用上下方向键选择你忘记密码的那个系统，然后按e。</span><br><span class="line">- 选择第二项—kernel，然后继续按”E”</span><br><span class="line">- 在rhgb quiet后回车输入single或者1，然后回车</span><br><span class="line">- 然后回车后，回到该界面，然后按b进行重新引导系统</span><br><span class="line">- 启动后，我们发现直接进入系统，无需要输入账户及密码</span><br><span class="line">- 进入后，我们可以根据passwd root来修改密码了</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu16安装后]]></title>
      <url>/2017/04/22/ubuntu16%E5%AE%89%E8%A3%85%E5%90%8E/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h4 id="更新root密码"><a href="#更新root密码" class="headerlink" title="更新root密码"></a>更新root密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">passwd root</span><br></pre></td></tr></table></figure>
<h4 id="触摸板控制"><a href="#触摸板控制" class="headerlink" title="触摸板控制"></a>触摸板控制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">重启后失效</span><br><span class="line">关闭触摸板： sudo modprobe -r psmouse </span><br><span class="line">打开触摸板： sudo modprobe psmouse</span><br><span class="line"></span><br><span class="line">方案二,安装应用进行管理</span><br><span class="line">sudo add-apt-repository ppa:atareao/atareao</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install touchpad-indicator</span><br></pre></td></tr></table></figure>
<h4 id="更新补丁"><a href="#更新补丁" class="headerlink" title="更新补丁"></a>更新补丁</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>
<h4 id="卸载libreOffice"><a href="#卸载libreOffice" class="headerlink" title="卸载libreOffice"></a>卸载libreOffice</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove libreoffice-common</span><br></pre></td></tr></table></figure>
<h4 id="删Amazon的链接"><a href="#删Amazon的链接" class="headerlink" title="删Amazon的链接"></a>删Amazon的链接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove unity-webapps-common</span><br></pre></td></tr></table></figure>
<h4 id="删除不常用软件"><a href="#删除不常用软件" class="headerlink" title="删除不常用软件"></a>删除不常用软件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注意按需删除，如无强迫症不建议删除。比如雷鸟邮件客户端，其实也挺好用的。另：删除后如果需要以后可在安装</span><br><span class="line">sudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot </span><br><span class="line">sudo apt-get remove gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku  landscape-client-ui-install  </span><br><span class="line"></span><br><span class="line">sudo apt-get remove onboard deja-dup</span><br></pre></td></tr></table></figure>
<h4 id="安装Unity-Tweak-Tool"><a href="#安装Unity-Tweak-Tool" class="headerlink" title="安装Unity Tweak Tool"></a>安装Unity Tweak Tool</h4><p>可用来启动点击图标最小化，调整主题等功能<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install unity-tweak-tool</span><br></pre></td></tr></table></figure></p>
<h4 id="安装wps"><a href="#安装wps" class="headerlink" title="安装wps"></a>安装wps</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install wps-office</span><br><span class="line">#消除wps打开提示字体缺失</span><br><span class="line">链接: https://pan.baidu.com/s/1jIR4R8U 密码: 1ka9</span><br><span class="line">#下载解压，切换到目录内</span><br><span class="line">sudo cp -rp * /usr/share/fonts/wps-office/</span><br><span class="line">#生成字体的索引信息：</span><br><span class="line">sudo mkfontscale</span><br><span class="line">sudo mkfontdir</span><br><span class="line">#更新字体缓存</span><br><span class="line">sudo fc-cache</span><br></pre></td></tr></table></figure>
<h4 id="安装chrome"><a href="#安装chrome" class="headerlink" title="安装chrome"></a>安装chrome</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">官网下载chrome的Linux版本，或者</span><br><span class="line">链接: http://pan.baidu.com/s/1i59oUpB 密码: 5rnt</span><br><span class="line"></span><br><span class="line">sudo apt-get install libappindicator1 libindicator7 </span><br><span class="line">sudo dpkg -i google-chrome-stable_current_amd64.deb </span><br><span class="line">sudo apt-get -f install</span><br></pre></td></tr></table></figure>
<h4 id="安装flash"><a href="#安装flash" class="headerlink" title="安装flash"></a>安装flash</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">系统设置--软件和更新--其他软件----（勾选第一个）</span><br><span class="line">sudo apt-get install flashplugin-installer</span><br></pre></td></tr></table></figure>
<h4 id="安装下载应用"><a href="#安装下载应用" class="headerlink" title="安装下载应用"></a>安装下载应用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install uget  #下载工具</span><br><span class="line">sudo apt-get install aria2   #插件</span><br><span class="line">#打开软件</span><br><span class="line">编辑---设置---插件，启用aria2，启用aria2插件</span><br><span class="line">分类---属性---默认设置，设置默认的下载路径。最大连接数等</span><br></pre></td></tr></table></figure>
<p>####安装第三方wechat（electronic-wechat-linux）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">自行搜索安装包，或者</span><br><span class="line">链接: http://pan.baidu.com/s/1dFalmVn 密码: q4es</span><br><span class="line">开箱即用</span><br></pre></td></tr></table></figure></p>
<h4 id="安装网易云音乐"><a href="#安装网易云音乐" class="headerlink" title="安装网易云音乐"></a>安装网易云音乐</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">去网易官网下载包或者</span><br><span class="line">链接: https://pan.baidu.com/s/1pLM9QR5 密码: 5jrd</span><br><span class="line">sudo dpkg -i 包名</span><br><span class="line">sudo apt-get -f  install 包名（-f修复依赖关系）</span><br></pre></td></tr></table></figure>
<h4 id="安装便签"><a href="#安装便签" class="headerlink" title="安装便签"></a>安装便签</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install  xpad</span><br></pre></td></tr></table></figure>
<h4 id="安装搜狗输入法"><a href="#安装搜狗输入法" class="headerlink" title="安装搜狗输入法"></a>安装搜狗输入法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">添加源 sudo vim /etc/apt/sources.list.d/ubuntukylin.list</span><br><span class="line">deb http://archive.ubuntukylin.com:10006/ubuntukylin trusty main</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install sogoupinyin</span><br></pre></td></tr></table></figure>
<h4 id="安装大小写提示"><a href="#安装大小写提示" class="headerlink" title="安装大小写提示"></a>安装大小写提示</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:tsbarnes/indicator-keylock</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install indicator-keylock</span><br></pre></td></tr></table></figure>
<h4 id="安装vim-git-filezilla"><a href="#安装vim-git-filezilla" class="headerlink" title="安装vim git filezilla"></a>安装vim git filezilla</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vim git filezilla</span><br></pre></td></tr></table></figure>
<h4 id="安装sublime-3"><a href="#安装sublime-3" class="headerlink" title="安装sublime 3"></a>安装sublime 3</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/sublime-text-3 </span><br><span class="line">sudo apt-get update  </span><br><span class="line">sudo apt-get install sublime-text</span><br><span class="line"></span><br><span class="line">#注册</span><br><span class="line">—– BEGIN LICENSE —– </span><br><span class="line">Country Rebel </span><br><span class="line">Single User License </span><br><span class="line">EA7E-993095 </span><br><span class="line">19176BCE 3FF86EA0 3CE86508 6BE4DCA7 </span><br><span class="line">9F74D761 4D0CAD8B E4033008 43FC73F3 </span><br><span class="line">1C01F6DD C4829BE9 E7830578 A4823ADC </span><br><span class="line">61B224F1 DC93C458 ABAAAE0F 925C32D4 </span><br><span class="line">04A83C36 813FF6C8 9877942C 4418F99C </span><br><span class="line">2F15E5B8 544EDB80 D9A86985 4CBBA6A8 </span><br><span class="line">998DE3E4 7FB33E15 6CD30357 6DC96CEA </span><br><span class="line">ECB1BC4E D8010D5A 77BA86C8 BA7F76CC </span><br><span class="line">—— END LICENSE ——</span><br><span class="line"></span><br><span class="line">win系统</span><br><span class="line">----- BEGIN LICENSE -----</span><br><span class="line">TwitterInc</span><br><span class="line">200 User License</span><br><span class="line">EA7E-890007</span><br><span class="line">1D77F72E 390CDD93 4DCBA022 FAF60790</span><br><span class="line">61AA12C0 A37081C5 D0316412 4584D136</span><br><span class="line">94D7F7D4 95BC8C1C 527DA828 560BB037</span><br><span class="line">D1EDDD8C AE7B379F 50C9D69D B35179EF</span><br><span class="line">2FE898C4 8E4277A8 555CE714 E1FB0E43</span><br><span class="line">D5D52613 C3D12E98 BC49967F 7652EED2</span><br><span class="line">9D2D2E61 67610860 6D338B72 5CF95C69</span><br><span class="line">E36B85CC 84991F19 7575D828 470A92AB</span><br><span class="line">------ END LICENSE ------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ctrl + 飘（ESC下面）然后输入以下代码</span><br><span class="line">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</span><br><span class="line"></span><br><span class="line">win系统</span><br><span class="line">import urllib.request,os,hashlib; h = &apos;eb2297e1a458f27d836c04bb0cbaf282&apos; + &apos;d0e7a3098092775ccb37ca9d6b2e4b7d&apos;; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &apos;http://packagecontrol.io/&apos; + pf.replace(&apos; &apos;, &apos;%20&apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&apos;Error validating download (got %s instead of %s), please try manual install&apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &apos;wb&apos; ).write(by)</span><br><span class="line"></span><br><span class="line">如果不成功，下载包 手动安装</span><br><span class="line">https://packagecontrol.io/installation</span><br><span class="line"></span><br><span class="line">然后按下Ctrl+Shift+P调出命令面板</span><br><span class="line">输入install 调出 Install Package 选项并回车，然后在列表中选中要安装的插件。</span><br><span class="line"></span><br><span class="line">ChineseLocalizations #中文汉化</span><br><span class="line"></span><br><span class="line">Boxy Theme  #主题</span><br><span class="line">SFTP   #如其名</span><br><span class="line">Sublime CodeIntel #代码提示和补全插件</span><br><span class="line">Bracket Highlighter #匹配括号</span><br><span class="line">Emmet  #前端神器（前身Zen Coding）</span><br><span class="line">Alignment  #代码对齐</span><br><span class="line">SidebarEnhancements #侧边栏功能增加</span><br><span class="line"></span><br><span class="line">Markdown Editing // Markdown编辑和语法高亮支持 </span><br><span class="line">Markdown Preview// Markdown导出html预览支持 </span><br><span class="line">shift+ctrl+p  输入mp可浏览器浏览</span><br><span class="line"></span><br><span class="line">align arguments</span><br><span class="line">ChineseLocalIzations</span><br><span class="line">ConvertToUTF8   #解决中文乱码</span><br><span class="line">Ctags</span><br><span class="line">filediff</span><br><span class="line">pretty json</span><br><span class="line">wordHighlight</span><br><span class="line">zzzzzzzz-localization</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Perference----&gt;Package Settings-------&gt;SFTP-------&gt;setting user</span><br><span class="line">&#123;</span><br><span class="line">    &quot;email&quot;: &quot;xiaosong@xiaosong.me&quot;,</span><br><span class="line">    &quot;product_key&quot;: &quot;d419f6-de89e9-0aae59-2acea1-07f92a&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">##个人配置</span><br><span class="line">    &quot;font_size&quot;: 12,</span><br><span class="line">    &quot;ignored_packages&quot;:</span><br><span class="line">    [</span><br><span class="line">        &quot;Vintage&quot;</span><br><span class="line">    ],</span><br><span class="line">     // 设置tab的大小为4</span><br><span class="line">    &quot;tab_size&quot;:4,</span><br><span class="line">    // 使用空格代替tab</span><br><span class="line">    &quot;translate_tabs_to_spaces&quot;: true,</span><br><span class="line"> </span><br><span class="line">    // 添加行宽标尺</span><br><span class="line">    &quot;rulers&quot;: [80, 100],</span><br><span class="line">    // 显示空白字符</span><br><span class="line">    &quot;draw_white_space&quot;: &quot;all&quot;,</span><br><span class="line">    // 保存时自动去除行末空白</span><br><span class="line">    &quot;trim_trailing_white_space_on_save&quot;: true,</span><br><span class="line">    // 保存时自动增加文件末尾换行</span><br><span class="line">    &quot;ensure_newline_at_eof_on_save&quot;: true,</span><br><span class="line">    // 默认编码格式</span><br><span class="line">    &quot;default_encoding&quot;: &quot;UTF-8&quot;</span><br><span class="line"></span><br><span class="line">#解决无法输入中文的问题</span><br><span class="line">git clone https://github.com/lyfeyaj/sublime-text-imfix.git</span><br><span class="line">或链接: https://pan.baidu.com/s/1gf1l1jP 密码: piug</span><br><span class="line">移动subl到/usr/bin/，移动sublime-imfix.so到/opt/sublime_text/（sublime的安装目录）</span><br><span class="line">命令行 输入 subl 如果启动成功，即可输入中文</span><br></pre></td></tr></table></figure>
<h4 id="经典下拉菜单指示器"><a href="#经典下拉菜单指示器" class="headerlink" title="经典下拉菜单指示器"></a>经典下拉菜单指示器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:diesch/testing</span><br><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install classicmenu-indicator</span><br></pre></td></tr></table></figure>
<h4 id="安装截图"><a href="#安装截图" class="headerlink" title="安装截图"></a>安装截图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">自带的也很好用，但是shutter更丰富。</span><br><span class="line">sudo apt-get install shutter</span><br></pre></td></tr></table></figure>
<h4 id="安装unrar"><a href="#安装unrar" class="headerlink" title="安装unrar"></a>安装unrar</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用来解压rar</span><br><span class="line">sudo apt-get install unrar</span><br></pre></td></tr></table></figure>
<h4 id="vpn安装"><a href="#vpn安装" class="headerlink" title="vpn安装"></a>vpn安装</h4><p>(本人根据公司情况安装,并不适合每个人)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://support.arraynetworks.com.cn/troubleshooting</span><br><span class="line">下载相关软件以及说明书</span><br><span class="line">或 链接: https://pan.baidu.com/s/1hr9GD7Y 密码: d2kk</span><br></pre></td></tr></table></figure></p>
<h4 id="安装kvm虚拟机"><a href="#安装kvm虚拟机" class="headerlink" title="安装kvm虚拟机"></a>安装kvm虚拟机</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">1. 检查CPU是否支持虚拟化技术</span><br><span class="line">egrep &quot;(svm|vmx)&quot; /proc/cpuinfo</span><br><span class="line">有结果输出,类似如下信息,则可以安装</span><br><span class="line">flags       : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts</span><br><span class="line"></span><br><span class="line">2. 安装kvm依赖</span><br><span class="line">sudo apt-get install qemu-kvm</span><br><span class="line">sudo apt-get install qemu</span><br><span class="line">sudo apt-get install virt-manager</span><br><span class="line">sudo apt-get install virt-viewer </span><br><span class="line">sudo apt-get install libvirt-bin </span><br><span class="line">sudo apt-get install bridge-utils</span><br><span class="line"></span><br><span class="line">3. 配置网络</span><br><span class="line">sudo cp /etc/network/interfaces /etc/network/interfaces-bak   #备份配置</span><br><span class="line">sudo vim /etc/network/interfaces</span><br><span class="line">#修改配置如下</span><br><span class="line">auto br0</span><br><span class="line">iface br0 inet static</span><br><span class="line">address 192.168.1.130</span><br><span class="line">network 192.168.1.0</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">broadcast 192.168.1.255</span><br><span class="line">#gateway 192.168.1.1</span><br><span class="line">dns-nameservers 223.5.5.5</span><br><span class="line">bridge_ports eth0</span><br><span class="line">bridge_stp off</span><br><span class="line"></span><br><span class="line">4. 重启</span><br><span class="line">sudo reboot</span><br><span class="line">5. 打开程序</span><br><span class="line">virt-manager</span><br></pre></td></tr></table></figure>
<h4 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#Flatabulous主题</span><br><span class="line">sudo add-apt-repository ppa:noobslab/themes</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install flatabulous-theme</span><br><span class="line">#图包</span><br><span class="line">sudo add-apt-repository ppa:noobslab/icons</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ultra-flat-icons</span><br><span class="line"></span><br><span class="line">#Numix主题 （图包好看 可配Flatabulous主题）</span><br><span class="line">sudo add-apt-repository ppa:numix/ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install numix-gtk-theme numix-icon-theme-circle</span><br><span class="line"></span><br><span class="line">#壁纸更换</span><br><span class="line">sudo apt-get install variety</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix-agent安装]]></title>
      <url>/2017/04/18/zabbix-agent%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>监控路由交换等,由于本身不能安装软件,所以通常使用SNMP协议进行数据的采集.<br>但是,对于系统的监控最好还是采用agent进行采集,方便.<br><a id="more"></a></p>
<blockquote>
<p>Zabbix3.2 CentOS7 x64</p>
</blockquote>
<h4 id="Yum源配置"><a href="#Yum源配置" class="headerlink" title="Yum源配置"></a>Yum源配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#centos7</span><br><span class="line">rpm -ivh http://repo.zabbix.com/zabbix/3.2/rhel/7/x86_64/zabbix-release-3.2-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line">#centos6 </span><br><span class="line">rpm -ivh http://repo.zabbix.com/zabbix/3.2/rhel/6/x86_64/zabbix-release-3.2-1.el6.noarch.rpm</span><br></pre></td></tr></table></figure>
<h4 id="zabbix-agent安装配置"><a href="#zabbix-agent安装配置" class="headerlink" title="zabbix_agent安装配置"></a>zabbix_agent安装配置</h4><h5 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yum install zabbix-agent -y</span><br><span class="line">vim /etc/zabbix/zabbix_agentd.conf </span><br><span class="line">Server= 服务端IP #用于被动模式</span><br><span class="line">ServerActive= 服务端IP#用于主动模式</span><br><span class="line"></span><br><span class="line">Hostname=本机Ip #不要用127.0.0.1 </span><br><span class="line">#或者 弄个唯一名字，这里的名字在服务端添加主机的时候要用！建议使用IP</span><br><span class="line">主动模式失败，  `Received empty response from Zabbix Agent at [10.1.93.252]. Assuming that ...` 不知为何，</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl start zabbix-agent#启动zabbix agent</span><br></pre></td></tr></table></figure>
<p>主动和被动的区别。以agent端为出发，agent主动发送就是主动，被动接受就是被动。</p>
<h5 id="Ubuntu-amd64"><a href="#Ubuntu-amd64" class="headerlink" title="Ubuntu amd64"></a>Ubuntu amd64</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#下载软件包</span><br><span class="line">wget http://repo.zabbix.com/zabbix/3.2/ubuntu/pool/main/z/zabbix/zabbix-agent_3.2.4-1+trusty_amd64.deb</span><br><span class="line"></span><br><span class="line">#然后安装</span><br><span class="line">dpkg -i zabbix....deb</span><br><span class="line"></span><br><span class="line">##再修改配置，同centos</span><br></pre></td></tr></table></figure>
<h5 id="windows-agent安装"><a href="#windows-agent安装" class="headerlink" title="windows agent安装"></a>windows agent安装</h5><p>下载agent包 <a href="http://www.zabbix.com/download" target="_blank" rel="noopener">http://www.zabbix.com/download</a></p>
<p>拷贝zabbix_agents_3.2.0.win\bin\win64下所有文件（非文件夹）到C:\Program Files\zabbix下<br>32位到 C:\Program Files x86\zabbix下</p>
<p>新建文件C:\Program Files\zabbix\zabbix_agent.conf<br>复制代码，主要修改地方同linux。不要写错，否则服务启动不起来s<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br></pre></td><td class="code"><pre><span class="line">第一种：</span><br><span class="line">Server= 服务端IP #用于被动模式</span><br><span class="line">ServerActive= 服务端IP#用于主动模式</span><br><span class="line">Hostname=本机Ip #不要用127.0.0.1 </span><br><span class="line"></span><br><span class="line">如果有特殊需求</span><br><span class="line"></span><br><span class="line">第二种：</span><br><span class="line"></span><br><span class="line"># This is a configuration file for Zabbix agent service (Windows)</span><br><span class="line"># To get more information about Zabbix, visit http://www.zabbix.com</span><br><span class="line"></span><br><span class="line">############ GENERAL PARAMETERS #################</span><br><span class="line"></span><br><span class="line">### Option: LogType</span><br><span class="line">#   Specifies where log messages are written to:</span><br><span class="line">#       system  - Windows event log</span><br><span class="line">#       file    - file specified with LogFile parameter</span><br><span class="line">#       console - standard output</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># LogType=file</span><br><span class="line"></span><br><span class="line">### Option: LogFile</span><br><span class="line">#   Log file name for LogType &apos;file&apos; parameter.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># LogFile=</span><br><span class="line"></span><br><span class="line">LogFile=c:\zabbix_agentd.log</span><br><span class="line"></span><br><span class="line">### Option: LogFileSize</span><br><span class="line">#   Maximum size of log file in MB.</span><br><span class="line">#   0 - disable automatic log rotation.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range: 0-1024</span><br><span class="line"># Default:</span><br><span class="line"># LogFileSize=1</span><br><span class="line"></span><br><span class="line">### Option: DebugLevel</span><br><span class="line">#   Specifies debug level:</span><br><span class="line">#   0 - basic information about starting and stopping of Zabbix processes</span><br><span class="line">#   1 - critical information</span><br><span class="line">#   2 - error information</span><br><span class="line">#   3 - warnings</span><br><span class="line">#   4 - for debugging (produces lots of information)</span><br><span class="line">#   5 - extended debugging (produces even more information)</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range: 0-5</span><br><span class="line"># Default:</span><br><span class="line"># DebugLevel=3</span><br><span class="line"></span><br><span class="line">### Option: SourceIP</span><br><span class="line">#   Source IP address for outgoing connections.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># SourceIP=</span><br><span class="line"></span><br><span class="line">### Option: EnableRemoteCommands</span><br><span class="line">#   Whether remote commands from Zabbix server are allowed.</span><br><span class="line">#   0 - not allowed</span><br><span class="line">#   1 - allowed</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># EnableRemoteCommands=0</span><br><span class="line"></span><br><span class="line">### Option: LogRemoteCommands</span><br><span class="line">#   Enable logging of executed shell commands as warnings.</span><br><span class="line">#   0 - disabled</span><br><span class="line">#   1 - enabled</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># LogRemoteCommands=0</span><br><span class="line"></span><br><span class="line">##### Passive checks related</span><br><span class="line"></span><br><span class="line">### Option: Server</span><br><span class="line">#   List of comma delimited IP addresses (or hostnames) of Zabbix servers.</span><br><span class="line">#   Incoming connections will be accepted only from the hosts listed here.</span><br><span class="line">#   If IPv6 support is enabled then &apos;127.0.0.1&apos;, &apos;::127.0.0.1&apos;, &apos;::ffff:127.0.0.1&apos; are treated equally.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># Server=</span><br><span class="line"></span><br><span class="line">Server=127.0.0.1</span><br><span class="line"></span><br><span class="line">### Option: ListenPort</span><br><span class="line">#   Agent will listen on this port for connections from the server.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range: 1024-32767</span><br><span class="line"># Default:</span><br><span class="line"># ListenPort=10050</span><br><span class="line"></span><br><span class="line">### Option: ListenIP</span><br><span class="line">#       List of comma delimited IP addresses that the agent should listen on.</span><br><span class="line">#       First IP address is sent to Zabbix server if connecting to it to retrieve list of active checks.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># ListenIP=0.0.0.0</span><br><span class="line"></span><br><span class="line">### Option: StartAgents</span><br><span class="line">#   Number of pre-forked instances of zabbix_agentd that process passive checks.</span><br><span class="line">#   If set to 0, disables passive checks and the agent will not listen on any TCP port.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range: 0-100</span><br><span class="line"># Default:</span><br><span class="line"># StartAgents=3</span><br><span class="line"></span><br><span class="line">##### Active checks related</span><br><span class="line"></span><br><span class="line">### Option: ServerActive</span><br><span class="line">#   List of comma delimited IP:port (or hostname:port) pairs of Zabbix servers for active checks.</span><br><span class="line">#   If port is not specified, default port is used.</span><br><span class="line">#   IPv6 addresses must be enclosed in square brackets if port for that host is specified.</span><br><span class="line">#   If port is not specified, square brackets for IPv6 addresses are optional.</span><br><span class="line">#   If this parameter is not specified, active checks are disabled.</span><br><span class="line">#   Example: ServerActive=127.0.0.1:20051,zabbix.domain,[::1]:30051,::1,[12fc::1]</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># ServerActive=</span><br><span class="line"></span><br><span class="line">ServerActive=127.0.0.1</span><br><span class="line"></span><br><span class="line">### Option: Hostname</span><br><span class="line">#   Unique, case sensitive hostname.</span><br><span class="line">#   Required for active checks and must match hostname as configured on the server.</span><br><span class="line">#   Value is acquired from HostnameItem if undefined.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># Hostname=</span><br><span class="line"></span><br><span class="line">Hostname=Windows host</span><br><span class="line"></span><br><span class="line">### Option: HostnameItem</span><br><span class="line">#   Item used for generating Hostname if it is undefined. Ignored if Hostname is defined.</span><br><span class="line">#   Does not support UserParameters or aliases.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># HostnameItem=system.hostname</span><br><span class="line"></span><br><span class="line">### Option: HostMetadata</span><br><span class="line">#   Optional parameter that defines host metadata.</span><br><span class="line">#   Host metadata is used at host auto-registration process.</span><br><span class="line">#   An agent will issue an error and not start if the value is over limit of 255 characters.</span><br><span class="line">#   If not defined, value will be acquired from HostMetadataItem.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range: 0-255 characters</span><br><span class="line"># Default:</span><br><span class="line"># HostMetadata=</span><br><span class="line">HostMetadata=wonders_windows_1</span><br><span class="line"></span><br><span class="line">### Option: HostMetadataItem</span><br><span class="line">#   Optional parameter that defines an item used for getting host metadata.</span><br><span class="line">#   Host metadata is used at host auto-registration process.</span><br><span class="line">#   During an auto-registration request an agent will log a warning message if</span><br><span class="line">#   the value returned by specified item is over limit of 255 characters.</span><br><span class="line">#   This option is only used when HostMetadata is not defined.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># HostMetadataItem=</span><br><span class="line"></span><br><span class="line">### Option: RefreshActiveChecks</span><br><span class="line">#   How often list of active checks is refreshed, in seconds.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range: 60-3600</span><br><span class="line"># Default:</span><br><span class="line"># RefreshActiveChecks=120</span><br><span class="line"></span><br><span class="line">### Option: BufferSend</span><br><span class="line">#   Do not keep data longer than N seconds in buffer.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range: 1-3600</span><br><span class="line"># Default:</span><br><span class="line"># BufferSend=5</span><br><span class="line"></span><br><span class="line">### Option: BufferSize</span><br><span class="line">#   Maximum number of values in a memory buffer. The agent will send</span><br><span class="line">#   all collected data to Zabbix server or Proxy if the buffer is full.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range: 2-65535</span><br><span class="line"># Default:</span><br><span class="line"># BufferSize=100</span><br><span class="line"></span><br><span class="line">### Option: MaxLinesPerSecond</span><br><span class="line">#   Maximum number of new lines the agent will send per second to Zabbix Server</span><br><span class="line">#   or Proxy processing &apos;log&apos;, &apos;logrt&apos; and &apos;eventlog&apos; active checks.</span><br><span class="line">#   The provided value will be overridden by the parameter &apos;maxlines&apos;,</span><br><span class="line">#   provided in &apos;log&apos;, &apos;logrt&apos; or &apos;eventlog&apos; item keys.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range: 1-1000</span><br><span class="line"># Default:</span><br><span class="line"># MaxLinesPerSecond=20</span><br><span class="line"></span><br><span class="line">############ ADVANCED PARAMETERS #################</span><br><span class="line"></span><br><span class="line">### Option: Alias</span><br><span class="line">#   Sets an alias for an item key. It can be used to substitute long and complex item key with a smaller and simpler one.</span><br><span class="line">#   Multiple Alias parameters may be present. Multiple parameters with the same Alias key are not allowed.</span><br><span class="line">#   Different Alias keys may reference the same item key.</span><br><span class="line">#   For example, to retrieve paging file usage in percents from the server:</span><br><span class="line">#   Alias=pg_usage:perf_counter[\Paging File(_Total)\% Usage]</span><br><span class="line">#   Now shorthand key pg_usage may be used to retrieve data.</span><br><span class="line">#   Aliases can be used in HostMetadataItem but not in HostnameItem or PerfCounter parameters.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range:</span><br><span class="line"># Default:</span><br><span class="line"></span><br><span class="line">### Option: Timeout</span><br><span class="line">#   Spend no more than Timeout seconds on processing.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range: 1-30</span><br><span class="line"># Default:</span><br><span class="line"># Timeout=3</span><br><span class="line"></span><br><span class="line">### Option: PerfCounter</span><br><span class="line">#   Syntax: &lt;parameter_name&gt;,&quot;&lt;perf_counter_path&gt;&quot;,&lt;period&gt;</span><br><span class="line">#   Defines new parameter &lt;parameter_name&gt; which is an average value for system performance counter &lt;perf_counter_path&gt; for the specified time period &lt;period&gt; (in seconds).</span><br><span class="line">#   For example, if you wish to receive average number of processor interrupts per second for last minute, you can define new parameter &quot;interrupts&quot; as following:</span><br><span class="line">#   PerfCounter = interrupts,&quot;\Processor(0)\Interrupts/sec&quot;,60</span><br><span class="line">#   Please note double quotes around performance counter path.</span><br><span class="line">#   Samples for calculating average value will be taken every second.</span><br><span class="line">#   You may run &quot;typeperf -qx&quot; to get list of all performance counters available in Windows.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range:</span><br><span class="line"># Default:</span><br><span class="line"></span><br><span class="line">### Option: Include</span><br><span class="line">#   You may include individual files in the configuration file.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># Include=</span><br><span class="line"></span><br><span class="line"># Include=c:\zabbix\zabbix_agentd.userparams.conf</span><br><span class="line"># Include=c:\zabbix\zabbix_agentd.conf.d\</span><br><span class="line"># Include=c:\zabbix\zabbix_agentd.conf.d\*.conf</span><br><span class="line"></span><br><span class="line">####### USER-DEFINED MONITORED PARAMETERS #######</span><br><span class="line"></span><br><span class="line">### Option: UnsafeUserParameters</span><br><span class="line">#   Allow all characters to be passed in arguments to user-defined parameters.</span><br><span class="line">#   The following characters are not allowed:</span><br><span class="line">#   \ &apos; &quot; ` * ? [ ] &#123; &#125; ~ $ ! &amp; ; ( ) &lt; &gt; | # @</span><br><span class="line">#   Additionally, newline characters are not allowed.</span><br><span class="line">#   0 - do not allow</span><br><span class="line">#   1 - allow</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Range: 0-1</span><br><span class="line"># Default:</span><br><span class="line"># UnsafeUserParameters=0</span><br><span class="line"></span><br><span class="line">### Option: UserParameter</span><br><span class="line">#   User-defined parameter to monitor. There can be several user-defined parameters.</span><br><span class="line">#   Format: UserParameter=&lt;key&gt;,&lt;shell command&gt;</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># UserParameter=</span><br><span class="line"></span><br><span class="line">####### TLS-RELATED PARAMETERS #######</span><br><span class="line"></span><br><span class="line">### Option: TLSConnect</span><br><span class="line">#   How the agent should connect to server or proxy. Used for active checks.</span><br><span class="line">#   Only one value can be specified:</span><br><span class="line">#       unencrypted - connect without encryption</span><br><span class="line">#       psk         - connect using TLS and a pre-shared key</span><br><span class="line">#       cert        - connect using TLS and a certificate</span><br><span class="line">#</span><br><span class="line"># Mandatory: yes, if TLS certificate or PSK parameters are defined (even for &apos;unencrypted&apos; connection)</span><br><span class="line"># Default:</span><br><span class="line"># TLSConnect=unencrypted</span><br><span class="line"></span><br><span class="line">### Option: TLSAccept</span><br><span class="line">#   What incoming connections to accept.</span><br><span class="line">#   Multiple values can be specified, separated by comma:</span><br><span class="line">#       unencrypted - accept connections without encryption</span><br><span class="line">#       psk         - accept connections secured with TLS and a pre-shared key</span><br><span class="line">#       cert        - accept connections secured with TLS and a certificate</span><br><span class="line">#</span><br><span class="line"># Mandatory: yes, if TLS certificate or PSK parameters are defined (even for &apos;unencrypted&apos; connection)</span><br><span class="line"># Default:</span><br><span class="line"># TLSAccept=unencrypted</span><br><span class="line"></span><br><span class="line">### Option: TLSCAFile</span><br><span class="line">#   Full pathname of a file containing the top-level CA(s) certificates for</span><br><span class="line">#   peer certificate verification.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># TLSCAFile=</span><br><span class="line"></span><br><span class="line">### Option: TLSCRLFile</span><br><span class="line">#   Full pathname of a file containing revoked certificates.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># TLSCRLFile=</span><br><span class="line"></span><br><span class="line">### Option: TLSServerCertIssuer</span><br><span class="line">#      Allowed server certificate issuer.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># TLSServerCertIssuer=</span><br><span class="line"></span><br><span class="line">### Option: TLSServerCertSubject</span><br><span class="line">#      Allowed server certificate subject.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># TLSServerCertSubject=</span><br><span class="line"></span><br><span class="line">### Option: TLSCertFile</span><br><span class="line">#   Full pathname of a file containing the agent certificate or certificate chain.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># TLSCertFile=</span><br><span class="line"></span><br><span class="line">### Option: TLSKeyFile</span><br><span class="line">#   Full pathname of a file containing the agent private key.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># TLSKeyFile=</span><br><span class="line"></span><br><span class="line">### Option: TLSPSKIdentity</span><br><span class="line">#   Unique, case sensitive string used to identify the pre-shared key.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># TLSPSKIdentity=</span><br><span class="line"></span><br><span class="line">### Option: TLSPSKFile</span><br><span class="line">#   Full pathname of a file containing the pre-shared key.</span><br><span class="line">#</span><br><span class="line"># Mandatory: no</span><br><span class="line"># Default:</span><br><span class="line"># TLSPSKFile=</span><br></pre></td></tr></table></figure></p>
<h4 id="注册zabbix服务"><a href="#注册zabbix服务" class="headerlink" title="注册zabbix服务"></a>注册zabbix服务</h4><p>管理员身份运行cmd</p>
<p>切换到zabbix目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">zabbix_agentd.exe -c .C:\Program Files\zabbix\zabbix_agentd.win.conf -i</span><br><span class="line"></span><br><span class="line"> -c  表示配置文件路径 -i  表示安装 </span><br><span class="line">删除的话： -d  表示卸载</span><br><span class="line">zabbix_agentd.exe  -s #启动</span><br><span class="line">或者去服务里面手动启动</span><br></pre></td></tr></table></figure></p>
<p>完</p>
<hr>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix </tag>
            
            <tag> zabbix agent </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix-grafana]]></title>
      <url>/2017/04/11/zabbix-grafana/</url>
      <content type="html"><![CDATA[<p><img src="/images/grafana.jpg" width="70%" height="50%" alt="模板" align="center"><br><strong>前言</strong><br>(封面图片来自网上)<br>Grafana是一个可视化面板（Dashboard），有非常漂亮的图表和布局展示，通过插件与zabbix结合,可以很好的弥补zabbix图形化扎眼的缺点<br><a id="more"></a></p>
<p><strong>centos7</strong></p>
<blockquote>
<p><a href="http://play.grafana.org/" target="_blank" rel="noopener">官网demo</a><br><a href="http://docs.grafana-zabbix.org/" target="_blank" rel="noopener">grafana-zabbix 官方文档</a><br><a href="http://docs.grafana.org/installation/rpm/" target="_blank" rel="noopener">官方安装教程</a></p>
</blockquote>
<p><strong>简单说明</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装grafana</span></span><br><span class="line"> sudo yum install https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-4.2.0-1.x86_64.rpm</span><br><span class="line"><span class="comment">#安装zabbix 插件</span></span><br><span class="line"> grafana-cli plugins install alexanderzobnin-zabbix-app</span><br><span class="line"><span class="comment">#安装饼图插件</span></span><br><span class="line"> grafana-cli plugins install grafana-piechart-panel</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动grafana</span></span><br><span class="line">systemctl start grafana-server</span><br><span class="line">systemctl <span class="built_in">enable</span> grafana-server</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>访问<code>IPADDRESS:3000</code> 即可打开grafana的登录界面<br>默认的账户密码都是admin<br>进去之后开启zabbix插件，Plugins里开启。<br>然后点击数据源(Data sources),添加数据源(add data sources)<br>然后添加zabbix数据源</p>
</blockquote>
<p>这里的URL要是zabbix网站地址 比如：<a href="http://1.1.1.1/zabbix/api_jsonrpc.php" target="_blank" rel="noopener">http://1.1.1.1/zabbix/api_jsonrpc.php</a></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-205e4aa6095ef924.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="zabbix源.JPG"></p>
<p><a href="http://docs.grafana-zabbix.org/" target="_blank" rel="noopener">grafana-zabbix 官方文档有如何添加机器,以及如何通过template添加机器的教程</a></p>
<blockquote>
<p>创建模板 这里简单记录如何通过模板添加主机</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-beff502a8624b8c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="新建模板.png"></p>
<p><strong>grafana 提供了四个变量,用来确认 群组,主机,应用集,监控项,一般情况下我们只要定义下group,host,item就能进行分组/分类监控了.</strong></p>
<blockquote>
<p>添加模板变量</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-0a4477e50738843c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="变量.png"></p>
<blockquote>
<p>这里通过添加两个变量 帮助理解模板的变量</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-503e5c167ae2d381.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="变量配置1.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-e17600e907f1ec0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="变量配置2.png"></p>
<p><strong>这样两个变量定义下来,就能对组和主机进行一个筛选,当然还可以定义变量对应用,监控项等进行筛选.不再述</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">query的匹配原则</span><br><span class="line">        *                     returns all groups</span><br><span class="line">        *.*                   returns all hosts (from all groups)</span><br><span class="line">        Servers.*             returns all hosts in group Servers</span><br><span class="line">        Servers.*.*           returns all applications in group Servers</span><br><span class="line">        Servers.*.*.*         returns all items from hosts in group Servers</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>保存模版后,可以给模板添加图形</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2511748-d0ca9d9fb7f4cefb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="模版添加图形化.png"></p>
<p>完</p>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix </tag>
            
            <tag> grafana </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[php-ajax]]></title>
      <url>/2017/04/08/php-ajax/</url>
      <content type="html"><![CDATA[<p><strong>前言</strong><br>日常我们最常见的就是百度搜索，输入的时候，还没输入完，搜索结果已经出现了，并且会随着你的输入而改变.其实这就是ajax<br><a id="more"></a></p>
<p>第一次需要Ajax的时候还不知道它叫ajax，那时候只想实现系统的一个功能，选中主选项后，剩余的子选项会随之而变，从而对选择结果有个过滤，然后就查到了AJAX。</p>
<h4 id="什么是AJAX"><a href="#什么是AJAX" class="headerlink" title="什么是AJAX"></a>什么是AJAX</h4><blockquote>
<p>简单来说就是异步传输<br>专业点：Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。<br>这里又引出了个新概念，同步和异步</p>
</blockquote>
<h5 id="同步和异步"><a href="#同步和异步" class="headerlink" title="同步和异步"></a>同步和异步</h5><blockquote>
<p>专业的知识也就不说了，毕竟也没深究大概解释下同步和异步的概念，<br>我们打电话是同步，而发消息是异步。<br>同步交互：发出一个请求后，要等待服务器响应结束，才能发第二个。<br>异步交互：发出一个请求后，无需等待服务器响应结束，就可发出第二个。</p>
</blockquote>
<h4 id="Ajax原理"><a href="#Ajax原理" class="headerlink" title="Ajax原理"></a>Ajax原理</h4><blockquote>
<p>Ajax的原理简单来说通过XmlHttpRequest对象来向服务器发异步请求，从服务器获得数据，然后用javascript来操作DOM而更新页面。<br>这其中最关键的一步就是从服务器获得请求数据。要清楚这个过程和原理，我们必须对 XMLHttpRequest有所了解。<br>XMLHttpRequest是ajax的核心机制，它是在IE5中首先引入的，是一种支持异步请求的技术。简单的说，也就是javascript可以及时向服务器提出请求和处理响应，而不阻塞用户。达到无刷新的效果。<br>所以我们先了解下XMLHttpRequest</p>
</blockquote>
<h5 id="XMLHttpRequest"><a href="#XMLHttpRequest" class="headerlink" title="XMLHttpRequest"></a>XMLHttpRequest</h5><table>
<thead>
<tr>
<th>属性</th>
<th style="text-align:left">解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>onreadystatechange</td>
<td style="text-align:left">每次状态改变所触发事件的事件处理程序</td>
</tr>
<tr>
<td>responseText</td>
<td style="text-align:left">服务器进程返回数据的字符串形式</td>
</tr>
<tr>
<td>responseXML</td>
<td style="text-align:left">服务器进程返回的DOM兼容的文档数据对象</td>
</tr>
<tr>
<td>status</td>
<td style="text-align:left">服务器返回的数字代码，比如常见的404（未找到）200（已就绪）</td>
</tr>
<tr>
<td>status Text</td>
<td style="text-align:left">伴随状态码的字符串信息</td>
</tr>
<tr>
<td>readyState</td>
<td style="text-align:left">对象状态值</td>
</tr>
</tbody>
</table>
<h6 id="readyState"><a href="#readyState" class="headerlink" title="readyState"></a>readyState</h6><table>
<thead>
<tr>
<th style="text-align:center">数值</th>
<th style="text-align:left">含义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:left">(未初始化) 对象已建立，但是尚未初始化（尚未调用open方法）</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:left">(初始化) 对象已建立，尚未调用send方法</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:left">(发送数据) send方法已调用，但是当前的状态及http头未知</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:left">(数据传送中) 已接收部分数据，因为响应及http头不全，这时通过responseBody和responseText获取部分数据会出现错误</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:left">(完成) 数据接收完毕,此时可以通过通过responseXml和responseText获取完整的回应数据</td>
</tr>
</tbody>
</table>
<blockquote>
<p>很明显，当readyState返回值为4的时候，证明是程序是正常走完的。</p>
</blockquote>
<h4 id="Ajax的实现"><a href="#Ajax的实现" class="headerlink" title="Ajax的实现"></a>Ajax的实现</h4><p><strong>由于各浏览器之间存在差异，所以创建一个XMLHttpRequest对象可能需要不同的方法。下面是一个当初学习的笔记，算是个比较标准的创建XMLHttpRequest对象的方法。</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">ajax.js 后面还有两个页面程序</span><br><span class="line"></span><br><span class="line">    function getXmlHttpObject()&#123;</span><br><span class="line">        var xmlhttp;</span><br><span class="line">        if(window.XMLHttpRequest)&#123;</span><br><span class="line">            //code for  IE7+, Firefox, Chrome, Opera, Safari</span><br><span class="line">            xmlhttp=new XMLHttpRequest();</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            //code for IE6, IE5</span><br><span class="line">             xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        return xmlhttp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> //验证</span><br><span class="line">    var myXmlHttpRequest=&quot;&quot;;</span><br><span class="line">    function checkName()&#123;</span><br><span class="line">        myXmlHttpRequest=getXmlHttpObject();</span><br><span class="line">        //通过ajax对象发送请求</span><br><span class="line">        if (myXmlHttpRequest)&#123;</span><br><span class="line">            //get 方式</span><br><span class="line">            var url=&quot;tb.php?username=&quot;+document.getElementById(&apos;username&apos;).value;</span><br><span class="line">            myXmlHttpRequest.open(&quot;get&quot;,url,true);</span><br><span class="line">            //第一个参数：表示提交数据方式, 即post还是get</span><br><span class="line">            //第二个参数：请求的url地址和传递的参数</span><br><span class="line">            //第三个参数：传输方式，false为同步，true为异步。默认为true。</span><br><span class="line"></span><br><span class="line">           //指定回调函数也就是chuli  由于会实验两次使用，所以封装了函数调用</span><br><span class="line">           myXmlHttpRequest.onreadystatechange=chuli;</span><br><span class="line">           真的发送请求,如果是get请求则填入空，如果是post填写实际数据</span><br><span class="line">           myXmlHttpRequest.send(null);    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            //psot方式</span><br><span class="line"></span><br><span class="line">            var url=&quot;tb.php&quot;;</span><br><span class="line">            var data=&quot;username=&quot;+document.getElementById(&apos;username&apos;).value;</span><br><span class="line">            myXmlHttpRequest.open(&quot;POST&quot;,url,true);</span><br><span class="line">            //必须要的一句话,定义传输的文件HTTP头信息</span><br><span class="line">            myXmlHttpRequest.setRequestHeader(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;);</span><br><span class="line">            //回调函数</span><br><span class="line">            myXmlHttpRequest.onreadystatechange=chuli;</span><br><span class="line">            // 发送</span><br><span class="line">            myXmlHttpRequest.send(data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function chuli()&#123;</span><br><span class="line">        //window.alert(&quot;chuli 被调用&quot;+myXmlHttpRequest.readyState)</span><br><span class="line">        if(myXmlHttpRequest.readyState==4)&#123;</span><br><span class="line">            //window.alert(&apos;服务器返回的是：&apos;+myXmlHttpRequest.responseText);</span><br><span class="line">            document.getElementById(&apos;tishi&apos;).value=myXmlHttpRequest.responseText;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ta.php（注册界面）</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;regist&lt;/title&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;script  src=&apos;ajax.js&apos; charset=&apos;gbk&apos; &gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h4&gt;账户注册&lt;/h4&gt;</span><br><span class="line"></span><br><span class="line">    &lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;  </span><br><span class="line">        账户：&lt;input type=&quot;text&quot; name=&quot;username&quot; onkeyup=&quot;checkName()&quot; id=&quot;username&quot;/&gt;</span><br><span class="line">        &lt;input type=&quot;button&quot; value=&quot;验证&quot; onclick=&quot;checkName()&quot; /&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; style=&quot;border:0&quot; id=&quot;tishi&quot; /&gt; </span><br><span class="line">        &lt;br/&gt; &lt;br/&gt;  </span><br><span class="line">        密码：&lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;  </span><br><span class="line">        &lt;br/&gt;  &lt;br/&gt; </span><br><span class="line">        邮箱：&lt;input type=&quot;email&quot; name=&quot;email&quot;/&gt;  </span><br><span class="line">        &lt;br/&gt;  &lt;br/&gt; </span><br><span class="line">        &lt;input type=&quot;Submit&quot; name=&quot;regist&quot; value=&quot;注册&quot;/&gt;  </span><br><span class="line">    &lt;/form&gt;  </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tb.php（输出页面）</span><br><span class="line">&lt;?php </span><br><span class="line">//$username=$_GET[&apos;username&apos;];</span><br><span class="line">$username=$_POST[&apos;username&apos;];</span><br><span class="line"></span><br><span class="line">if($username==someone)&#123;</span><br><span class="line">    echo $username.&quot;用户已存在&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo $username.&quot;用户可用&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>一个简单的案例就完成了，帮助自己理解Ajax</p>
<hr>
]]></content>
      
        <categories>
            
            <category> web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ajax </tag>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix-python-wechat告警推送]]></title>
      <url>/2017/03/31/zabbix-python-wechat%E5%91%8A%E8%AD%A6%E6%8E%A8%E9%80%81/</url>
      <content type="html"><![CDATA[<p><img src="/images/zabbix-text.jpg" alt="zbx-text" align="center"><br><strong>前言</strong><br>zabbx告警结合微信,可以更及时对故障响应,处理.<br><a id="more"></a></p>
<hr>
<p><strong>告警的模式分为两种,第一种就是本文消息的直接推送,第二种是图文推送,可做到交互,本文主要介绍第一种</strong></p>
<h4 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h4><blockquote>
<ol>
<li>zabbix</li>
<li>企业号</li>
<li>脚本</li>
</ol>
</blockquote>
<h4 id="企业号"><a href="#企业号" class="headerlink" title="企业号"></a>企业号</h4><h5 id="申请"><a href="#申请" class="headerlink" title="申请"></a>申请</h5><p>不赘述.</p>
<h5 id="获取信息"><a href="#获取信息" class="headerlink" title="获取信息"></a>获取信息</h5><p>取得企业号的部门ID,应用ID, CorpID,Secret</p>
<p><img src="/images/zabbix-2.png" alt="&#39;企业号信息&#39;"></p>
<h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><p>脚本可以推送两种格式,文本和新闻.</p>
<h5 id="推送文本"><a href="#推送文本" class="headerlink" title="推送文本"></a>推送文本</h5><p><strong>来自网上, 视情况修改4处 <code>self.__corpid</code> 和<code>self.__secret</code> <code>toparty</code> <code>agentid</code></strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># coding: utf-8</span><br><span class="line"></span><br><span class="line">import urllib,urllib2,json</span><br><span class="line">import sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding( &quot;utf-8&quot; )</span><br><span class="line"></span><br><span class="line">class WeChat(object):</span><br><span class="line">    __token_id = &apos;&apos;</span><br><span class="line">    # init attribute</span><br><span class="line">    def __init__(self,url):</span><br><span class="line">        self.__url = url.rstrip(&apos;/&apos;)</span><br><span class="line">        #CorpID</span><br><span class="line">        self.__corpid = &apos;wx643f**********&apos;   </span><br><span class="line">        #Secret </span><br><span class="line">        self.__secret = &apos;YQOu7Qzad********hGJ9xHlby****_v1oF2WpBOlsy****TivMKAL***voA3MwKH&apos;</span><br><span class="line"></span><br><span class="line">    # Get TokenID</span><br><span class="line">    def authID(self):</span><br><span class="line">        params = &#123;&apos;corpid&apos;:self.__corpid, &apos;corpsecret&apos;:self.__secret&#125;</span><br><span class="line">        data = urllib.urlencode(params)</span><br><span class="line"></span><br><span class="line">        content = self.getToken(data)</span><br><span class="line"></span><br><span class="line">        try:</span><br><span class="line">            self.__token_id = content[&apos;access_token&apos;]</span><br><span class="line">            # print content[&apos;access_token&apos;]</span><br><span class="line">        except KeyError:</span><br><span class="line">            raise KeyError</span><br><span class="line"></span><br><span class="line">    # Establish a connection</span><br><span class="line">    def getToken(self,data,url_prefix=&apos;/&apos;):</span><br><span class="line">        url = self.__url + url_prefix + &apos;gettoken?&apos;</span><br><span class="line">        try:</span><br><span class="line">            response = urllib2.Request(url + data)</span><br><span class="line">        except KeyError:</span><br><span class="line">            raise KeyError</span><br><span class="line">        result = urllib2.urlopen(response)</span><br><span class="line">        content = json.loads(result.read())</span><br><span class="line">        return content</span><br><span class="line"></span><br><span class="line">    # Get sendmessage url</span><br><span class="line">    def postData(self,data,url_prefix=&apos;/&apos;):</span><br><span class="line">        url = self.__url + url_prefix + &apos;message/send?access_token=%s&apos; % self.__token_id</span><br><span class="line">        request = urllib2.Request(url,data)</span><br><span class="line">        try:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">        except urllib2.HTTPError as e:</span><br><span class="line">            if hasattr(e,&apos;reason&apos;):</span><br><span class="line">                print &apos;reason&apos;,e.reason</span><br><span class="line">            elif hasattr(e,&apos;code&apos;):</span><br><span class="line">                print &apos;code&apos;,e.code</span><br><span class="line">            return 0</span><br><span class="line">        else:</span><br><span class="line">            content = json.loads(result.read())</span><br><span class="line">            result.close()</span><br><span class="line">        return content</span><br><span class="line"></span><br><span class="line">    # send message</span><br><span class="line">    def sendMessage(self,touser,message):</span><br><span class="line"></span><br><span class="line">        self.authID()</span><br><span class="line"></span><br><span class="line"># 具体可查看wechat接口文档http://qydev.weixin.qq.com/</span><br><span class="line">        data = json.dumps(&#123;</span><br><span class="line">            #&apos;touser&apos;:touser, #企业号中的用户帐号,如果没,则按部门推送.</span><br><span class="line">            &apos;toparty&apos;:&quot;3&quot;,  #部门ID </span><br><span class="line">            &apos;msgtype&apos;:&quot;text&quot;,</span><br><span class="line">            &apos;agentid&apos;:&quot;1&quot;, #应用ID</span><br><span class="line">            &apos;text&apos;:&#123;</span><br><span class="line">                &apos;content&apos;:message</span><br><span class="line">            &#125;,</span><br><span class="line">            &apos;safe&apos;:&quot;0&quot;</span><br><span class="line">        &#125;,ensure_ascii=False)</span><br><span class="line">        response = self.postData(data)</span><br><span class="line">        print response</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    a = WeChat(&apos;https://qyapi.weixin.qq.com/cgi-bin&apos;)</span><br><span class="line">    a.sendMessage(sys.argv[1], sys.argv[3])</span><br></pre></td></tr></table></figure></p>
<h5 id="推送news"><a href="#推送news" class="headerlink" title="推送news"></a>推送news</h5><p><strong>同样的脚本,需要修改如下</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">##图文格式(推荐),修改脚本的data如下</span><br><span class="line">        data = json.dumps(&#123;</span><br><span class="line">            &apos;touser&apos;:touser, #企业号中的用户帐号</span><br><span class="line">            &apos;toparty&apos;:&quot;3&quot;,  #部门ID </span><br><span class="line">            &apos;msgtype&apos;:&quot;news&quot;,</span><br><span class="line">            &apos;agentid&apos;:&quot;1&quot;, #应用ID</span><br><span class="line">            &apos;news&apos;:&#123;</span><br><span class="line">                &quot;articles&quot;:[&#123;</span><br><span class="line">                    &quot;title&quot;:title,</span><br><span class="line">                    &quot;description&quot;:message</span><br><span class="line">                        &#125;]</span><br><span class="line">                &#125;,   </span><br><span class="line">            &quot;safe&quot;:0</span><br><span class="line">        &#125;,ensure_ascii=False)</span><br><span class="line">##end</span><br><span class="line">##修改</span><br><span class="line">1：import re</span><br><span class="line"></span><br><span class="line">2：</span><br><span class="line">def sendMessage(self,touser,message): 修改为</span><br><span class="line">def sendMessage(self,touser,title,message):</span><br><span class="line"></span><br><span class="line">3：</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    a = WeChat(&apos;https://qyapi.weixin.qq.com/cgi-bin&apos;)</span><br><span class="line">    a.sendMessage(sys.argv[1], sys.argv[3])</span><br><span class="line">修改为</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    a = WeChat(&apos;https://qyapi.weixin.qq.com/cgi-bin&apos;)</span><br><span class="line">    info = sys.argv[3]</span><br><span class="line">    info2 = re.split(&apos;[&amp;&amp;]&apos;,info)</span><br><span class="line">    a.sendMessage(sys.argv[1],info2[0],info2[2])</span><br><span class="line"></span><br><span class="line">4：</span><br><span class="line">zabbix页面的动作-默认信息中添加&amp;&amp; 用来进行信息分割</span><br></pre></td></tr></table></figure></p>
<p>脚本放至zbx脚本目录下即可</p>
<h4 id="zabbix"><a href="#zabbix" class="headerlink" title="zabbix"></a>zabbix</h4><h5 id="媒介配置"><a href="#媒介配置" class="headerlink" title="媒介配置"></a>媒介配置</h5><blockquote>
<p>管理 —&gt; 媒介—&gt; 新建<br>名称随便,这里命名wechat<br>脚本名称要和上面的一致wechat.py<br>脚本参数要依次填写以下三个<br>这三个参数就是传给脚本的sys.argv[]</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;ALERT.SENDTO&#125;</span><br><span class="line">&#123;ALERT.SUBJECT&#125;</span><br><span class="line">&#123;ALERT.MESSAGE&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/images/zabbix-3.jpg" alt="&#39;zabbix媒介&#39;"></p>
<h5 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h5><blockquote>
<p>创建一个wechat用户,给予相关用户媒介权限(刚刚创建的媒介)<br>注意收件人,这个是脚本的第一个参数.也就是说这里要填写的是应该是微信用户，或者部门ID，这里填写部门ID 这样wechat.py脚本才能取得正确的值</p>
</blockquote>
<p><img src="/images/zabbix-4.jpg" alt="&#39;zabbix用户&#39;"></p>
<h5 id="动作"><a href="#动作" class="headerlink" title="动作"></a>动作</h5><blockquote>
<p>动作的 操作选项–&gt;选发送消息,添加相应的用户 或者群组就行了.<br>我是发送给wechat用户的,因为他关联了wechat.py媒介.所以所有的消息将传递给他,他的媒介连接脚本,脚本连接企业微信,整个流程就打通了.</p>
</blockquote>
<h6 id="参考配置"><a href="#参考配置" class="headerlink" title="参考配置"></a>参考配置</h6><p>告警:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;TRIGGER.SEVERITY&#125; : &#123;TRIGGER.NAME&#125;&amp;&amp;</span><br><span class="line">-------------------------------------------</span><br><span class="line">ID：&#123;EVENT.ID&#125;</span><br><span class="line">主机名称:&#123;HOST.NAME&#125;</span><br><span class="line">主机地址:&#123;HOST.IP&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125;  -  &#123;EVENT.TIME&#125;</span><br><span class="line"></span><br><span class="line">告警描述:&#123;TRIGGER.DESCRIPTION&#125;</span><br><span class="line">---------------------------------</span><br></pre></td></tr></table></figure></p>
<p>恢复:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">恢复 :  &#123;TRIGGER.NAME&#125;&amp;&amp;</span><br><span class="line">-------------------------------------------</span><br><span class="line">ID：&#123;EVENT.ID&#125;</span><br><span class="line">主机名称:&#123;HOST.NAME&#125;</span><br><span class="line">主机地址:&#123;HOST.IP&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125;  -  &#123;EVENT.TIME&#125;</span><br><span class="line">恢复时间:&#123;EVENT.RECOVERY.DATE&#125;  -  &#123;EVENT.RECOVERY.TIME&#125;</span><br><span class="line">持续时间:&#123;EVENT.AGE&#125;</span><br><span class="line"></span><br><span class="line">告警等级: &#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警描述:&#123;TRIGGER.DESCRIPTION&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/images/zabbix-5.jpg" alt="&#39;zabbix动作&#39;"></p>
<h4 id="图文-参考"><a href="#图文-参考" class="headerlink" title="图文(参考)"></a>图文(参考)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># coding: utf-8</span><br><span class="line">import sys</span><br><span class="line">import requests</span><br><span class="line">from time import sleep</span><br><span class="line">import json</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">WX_CORPID = r&quot;wx643f8***********&quot;</span><br><span class="line">WX_CORPSECRET = r&quot;qwojyG*******************&quot;</span><br><span class="line">WX_TOKEN_FILE = &quot;/tmp/accesstoken&quot;</span><br><span class="line">AGENT_ID = &apos;100000*&apos;</span><br><span class="line">TOPARTY=&apos;*&apos;</span><br><span class="line">LOG_FILE=&quot;/tmp/zabbix_send_log&quot;</span><br><span class="line">def c_log(msg):</span><br><span class="line">    try:</span><br><span class="line">        perameter_file=open(LOG_FILE,&apos;a&apos;)</span><br><span class="line">        perameter_file.write(msg+&quot;\n&quot;)</span><br><span class="line">    except:</span><br><span class="line">        exit(1)</span><br><span class="line">    finally:</span><br><span class="line">        perameter_file.close()</span><br><span class="line">def refresh_token(corpid=WX_CORPID, corpsecrt=WX_CORPSECRET):</span><br><span class="line">    get_url = r&quot;https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=&quot; + WX_CORPID + &quot;&amp;corpsecret=&quot; + WX_CORPSECRET</span><br><span class="line">    for i in range(3):</span><br><span class="line">        try:</span><br><span class="line">            req_ret = requests.get(get_url, timeout=6)</span><br><span class="line">            jso_ret = req_ret.json()</span><br><span class="line">            file_tok = open(WX_TOKEN_FILE, &quot;w&quot;)</span><br><span class="line">            file_tok.write(jso_ret[&quot;access_token&quot;])</span><br><span class="line">            file_tok.close()</span><br><span class="line">            return jso_ret[&quot;access_token&quot;]</span><br><span class="line">        except requests.exceptions.ConnectTimeout:</span><br><span class="line">            sleep(10)</span><br><span class="line">        except Exception as exc:</span><br><span class="line">            print(exc.args)</span><br><span class="line">            return None</span><br><span class="line">    return None</span><br><span class="line"></span><br><span class="line">def get_token(corpid=WX_CORPID, corpsecrt=WX_CORPSECRET):</span><br><span class="line">    try:</span><br><span class="line">        file_tok = open(WX_TOKEN_FILE, &quot;r&quot;)</span><br><span class="line">        token = file_tok.read()</span><br><span class="line">        file_tok.close()</span><br><span class="line">        if len(token) !=64:</span><br><span class="line">            raise FileNotFoundError(r&quot;token length !=64&quot;)</span><br><span class="line">        return token</span><br><span class="line">    except FileNotFoundError:</span><br><span class="line">        get_url = r&quot;https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=&quot; + WX_CORPID + &quot;&amp;corpsecret=&quot; + WX_CORPSECRET</span><br><span class="line">        for i in range(3):</span><br><span class="line">            try:</span><br><span class="line">              req_ret = requests.get(get_url, timeout=6)</span><br><span class="line">              jso_ret = req_ret.json()</span><br><span class="line">              file_tok = open(WX_TOKEN_FILE, &quot;w&quot;)</span><br><span class="line">              file_tok.write(jso_ret[&quot;access_token&quot;])</span><br><span class="line">              file_tok.close()</span><br><span class="line">              return jso_ret[&quot;access_token&quot;]</span><br><span class="line">            except requests.exceptions.ConnectTimeout:</span><br><span class="line">                sleep(10)</span><br><span class="line">            except Exception as exc:</span><br><span class="line">                print(exc.args)</span><br><span class="line">                return None</span><br><span class="line">    except Exception as exc:</span><br><span class="line">            print(exc.args)</span><br><span class="line">    return None</span><br><span class="line"></span><br><span class="line">def create_articles():</span><br><span class="line">    msg_argv=sys.argv[3].split(&quot;&amp;&amp;&quot;)</span><br><span class="line">    if(msg_argv[0]==&quot;PROBLEM&quot;):</span><br><span class="line">        if(msg_argv[1]==&quot;灾难&quot;):</span><br><span class="line">            pic_url=&quot;图片地址&quot;</span><br><span class="line">        elif(msg_argv[1]==&quot;一般严重&quot;):</span><br><span class="line">            pic_url=&quot;图片地址&quot;</span><br><span class="line">        elif(msg_argv[1]==&quot;严重&quot;):</span><br><span class="line">            pic_url=&quot;图片地址&quot;</span><br><span class="line">        elif(msg_argv[1]==&quot;警告&quot;):</span><br><span class="line">            pic_url=&quot;图片地址&quot;</span><br><span class="line">        elif(msg_argv[1]==&quot;通知&quot;):</span><br><span class="line">            pic_url=&quot;图片地址&quot;</span><br><span class="line">        else:</span><br><span class="line">            pic_url=&quot;图片地址&quot;</span><br><span class="line">        ret = [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;title&quot;: &quot;%s&quot;%(msg_argv[2]),</span><br><span class="line">                &quot;description&quot;:&quot;ID:%s\n告警时间: %s&quot;%(msg_argv[3],msg_argv[7]),</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;title&quot;:&quot;主机分类: %s \n主机名称: %s \n主机地址: %s&quot;%(msg_argv[4],msg_argv[5],msg_argv[6]),</span><br><span class="line">                &quot;picurl&quot;: &quot;%s&quot;%pic_url</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;title&quot;:&quot;告警描述:\n%s&quot;%(msg_argv[8]),</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">        return ret</span><br><span class="line">    elif(msg_argv[0]==&quot;OK&quot;):</span><br><span class="line">        if(msg_argv[1]==&quot;通知&quot;):</span><br><span class="line">            return None</span><br><span class="line">        else:</span><br><span class="line">            pic_url=&quot;图片地址&quot;</span><br><span class="line">            return [</span><br><span class="line">                &#123;</span><br><span class="line">                &quot;title&quot;: &quot;恢复-%s&quot;%(msg_argv[2]),</span><br><span class="line">                &quot;description&quot;:&quot;ID: %s\n持续时长：%s\n恢复时间: %s\n告警时间: %s&quot;%(msg_argv[3],msg_argv[10],msg_argv[7],msg_argv[9]),</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                &quot;title&quot;:&quot;主机分类: %s\n主机名称: %s\n主机地址: %s&quot;%(msg_argv[4],msg_argv[5],msg_argv[6]),</span><br><span class="line">                &quot;picurl&quot;: &quot;%s&quot;%pic_url</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                &quot;title&quot;:&quot;告警等级: %s\n告警描述: %s&quot;%(msg_argv[1],msg_argv[8])</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">    return None</span><br><span class="line"></span><br><span class="line">#def send_news(type,target,arti):</span><br><span class="line">def send_news(arti):</span><br><span class="line">    access_token = get_token()</span><br><span class="line">    if access_token == None:</span><br><span class="line">        return 1</span><br><span class="line">    send_msg_url = r&quot;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&quot;+access_token</span><br><span class="line">    msg_josn =&#123;&#125;</span><br><span class="line">    msg_josn[&quot;toparty&quot;] = TOPARTY</span><br><span class="line">    msg_josn[&quot;msgtype&quot;] = &quot;news&quot;</span><br><span class="line">    msg_josn[&quot;agentid&quot;] = AGENT_ID</span><br><span class="line"></span><br><span class="line">    msg_josn[&quot;news&quot;] = &#123;&quot;articles&quot;: arti&#125;</span><br><span class="line">    #print (msg_josn)</span><br><span class="line">    send_data = json.dumps(msg_josn, ensure_ascii=False).encode(encoding=&apos;UTF8&apos;,)   </span><br><span class="line">    #print(send_data)</span><br><span class="line">    for i in range(4):</span><br><span class="line">        try:</span><br><span class="line">            if i &gt;= 4:</span><br><span class="line">                return 1</span><br><span class="line">            req_ret = requests.post(send_msg_url, data=send_data, timeout=5)</span><br><span class="line">            c_log(req_ret.text)</span><br><span class="line">            jos_ret = req_ret.json()</span><br><span class="line"></span><br><span class="line">            if jos_ret[&quot;errcode&quot;] == 0:</span><br><span class="line">                return 0</span><br><span class="line">            elif jos_ret[&quot;errcode&quot;] == 40014:</span><br><span class="line">                token = refresh_token(WX_CORPID, WX_CORPSECRET)</span><br><span class="line">                if token == None:</span><br><span class="line">                    return 1</span><br><span class="line">                access_token = token</span><br><span class="line">                send_msg_url = r&quot;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&quot; + access_token</span><br><span class="line">            else:</span><br><span class="line">                return 1</span><br><span class="line">        except requests.exceptions.ConnectTimeout:</span><br><span class="line">            sleep(2)</span><br><span class="line">        except Exception as exc:</span><br><span class="line">            return 1</span><br><span class="line">    return 1</span><br><span class="line"></span><br><span class="line">if __name__==&quot;__main__&quot;:</span><br><span class="line">    articles=create_articles()</span><br><span class="line">    #if(articles==None):</span><br><span class="line">     #   exit(1)</span><br><span class="line">    #send_news(0,sys.argv[1],articles)</span><br><span class="line">#    send_news(articles)</span><br><span class="line">    if(send_news(articles)!=0):</span><br><span class="line">        exit(1)</span><br><span class="line"></span><br><span class="line">#告警</span><br><span class="line">&#123;TRIGGER.STATUS&#125;&amp;&amp;&#123;TRIGGER.SEVERITY&#125;&amp;&amp;&#123;HOST.NAME&#125;-&#123;TRIGGER.NAME&#125;&amp;&amp;&#123;EVENT.ID&#125;&amp;&amp;&#123;TRIGGER.HOSTGROUP.NAME&#125;&amp;&amp;&#123;HOST.NAME&#125;&amp;&amp;&#123;HOST.IP&#125;&amp;&amp;&#123;EVENT.DATE&#125;-&#123;EVENT.TIME&#125;&amp;&amp;&#123;TRIGGER.DESCRIPTION&#125;</span><br><span class="line"></span><br><span class="line">#恢复</span><br><span class="line">&#123;TRIGGER.STATUS&#125;&amp;&amp;&#123;TRIGGER.SEVERITY&#125;&amp;&amp;&#123;HOST.NAME&#125;-&#123;TRIGGER.NAME&#125;&amp;&amp;&#123;EVENT.ID&#125;&amp;&amp;&#123;TRIGGER.HOSTGROUP.NAME&#125;&amp;&amp;&#123;HOST.NAME&#125;&amp;&amp;&#123;HOST.IP&#125;&amp;&amp;&#123;EVENT.DATE&#125;  -  &#123;EVENT.TIME&#125;&amp;&amp;&#123;TRIGGER.DESCRIPTION&#125;&amp;&amp;&#123;EVENT.RECOVERY.DATE&#125;  -  &#123;EVENT.RECOVERY.TIME&#125;&amp;&amp;&#123;EVENT.AGE&#125;</span><br></pre></td></tr></table></figure>
<p>可推送出类似如下格式的告警</p>
<p><img src="/images/zabbix-6.jpg" width="30%" height="20%" align="center"></p>
<h4 id="图文-参考-进阶"><a href="#图文-参考-进阶" class="headerlink" title="图文(参考)进阶"></a>图文(参考)进阶</h4><blockquote>
<p>对web开发有一定了解,熟悉python,zabbix API,微信API,用Django做后台处理交互.可推出如下告警.<br>有想法的可研究,过程复杂,三言两语讲不清.</p>
</blockquote>
<p><img src="/images/zabbix-7.jpg" width="30%" height="20%" align="center"></p>
<p>完</p>
<hr>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix-server-is-not-running]]></title>
      <url>/2017/03/30/zabbix-server-is-not-running/</url>
      <content type="html"><![CDATA[<p><img src="/images/zabbix-1.jpg" width="70%" height="50%" alt="shell" align="center"></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>(图片来自网上)<br>zabbix server is not running: the infomation displayed may not be current<br><a id="more"></a></p>
<h4 id="看log"><a href="#看log" class="headerlink" title="看log"></a>看log</h4><p>( /tmp/zabbix_server.log)</p>
<p><code>Connection to database &#39;xxx&#39; failed: [1045] Access denied for user &#39;xxx&#39;@&#39;localhost&#39; (using password: NO)</code></p>
<h4 id="看端口"><a href="#看端口" class="headerlink" title="看端口"></a>看端口</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# netstat -ntlp |grep zabbix</span><br><span class="line">tcp        0      0 0.0.0.0:10050               0.0.0.0:*                   LISTEN      3672/zabbix_agentd</span><br><span class="line">tcp        0      0 :::10050                    :::*                        LISTEN      3672/zabbix_agentd</span><br></pre></td></tr></table></figure>
<p><del>我本机装了agent ,自己监控自己.</del><br>可以看到zabbix_server的端口10051根本就没起来,所以可能根本就不是帐号或者权限的问题.确定方向在拍错.</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol>
<li><p>检查 zabbix_server.conf 里面 密码是否启动</p>
</li>
<li><p>检查 mysql用户zabbix 是否能够正常登录</p>
</li>
<li><p>检查数据库是否授权<br><code>show grants for zabbix@&#39;localhost&#39;;</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user,host from mysql.user;</span><br><span class="line">+--------+-----------+</span><br><span class="line">| user   | host      |</span><br><span class="line">+--------+-----------+</span><br><span class="line">| root   | 127.0.0.1 |</span><br><span class="line">| root   | localhost |</span><br><span class="line">+--------+-----------+</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>创建,授权<br><code>grant all privileges on zabbix.* to &#39;zabbix&#39;@&#39;%&#39; identified by &#39;zabbix&#39;;</code></p>
<p>要去检查下配置文件 zabbix_server.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBPassword=zabbix   #注意这个配置文件 不需要加引号的!</span><br></pre></td></tr></table></figure></p>
<hr>
<p>如果出现</p>
<h3 id="ERROR-1045"><a href="#ERROR-1045" class="headerlink" title="ERROR 1045"></a>ERROR 1045</h3><p>ERROR 1045 (28000): Access denied for user ‘xxx’@’localhost’ (using password: YES) </p>
<p>首先照上 查看各权限,如果还不行 则<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">删除匿名用户.</span><br><span class="line">mysql&gt; use mysql </span><br><span class="line">mysql&gt; delete from user where user=&apos;&apos;; </span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure></p>
<p>5.10  更新<br>今天监控突然启动不起来了.报错如出一辙,以为谁动了配置.赶紧上去看log<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# tailf /tmp/zabbix_server.log</span><br><span class="line"> 10151:20170510:083714.639 SSH2 support:              YES</span><br><span class="line"> 10151:20170510:083714.639 IPv6 support:              YES</span><br><span class="line"> 10151:20170510:083714.639 TLS support:                NO</span><br><span class="line"> 10151:20170510:083714.639 ******************************</span><br><span class="line"> 10151:20170510:083714.639 using configuration file: /usr/local/zabbix/etc/zabbix_server.conf</span><br><span class="line"> 10151:20170510:083714.646 current database version (mandatory/optional): 03020000/03020000</span><br><span class="line"> 10151:20170510:083714.646 required mandatory version: 03020000</span><br><span class="line"> 10151:20170510:083715.302 __mem_malloc: skipped 1 asked 244072 skip_min 35304 skip_max 35304</span><br><span class="line"> 10151:20170510:083715.302 [file:strpool.c,line:53] zbx_mem_realloc(): out of memory (requested 244072 bytes)</span><br><span class="line"> 10151:20170510:083715.302 [file:strpool.c,line:53] zbx_mem_realloc(): please increase CacheSize configuration parameter</span><br></pre></td></tr></table></figure></p>
<p>显示CacheSize不足了.所以去配置文件调整下就好了.</p>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix-proxy搭建]]></title>
      <url>/2017/03/29/zabbix-proxy%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p><strong>流程</strong></p>
<blockquote>
<p>  安装proxy—&gt;监控proxy—&gt;配置代理的mariadb—&gt;添加proxy—&gt;使用</p>
</blockquote>
<a id="more"></a>
<h4 id="安装proxy"><a href="#安装proxy" class="headerlink" title="安装proxy"></a>安装proxy</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加zabbix 源</span></span><br><span class="line">rpm -ivh  http://repo.zabbix.com/zabbix/3.2/rhel/7/x86_64/zabbix-release-3.2-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装相关软件</span></span><br><span class="line">yum -y install fping zabbix-proxy-mysql</span><br></pre></td></tr></table></figure>
<h4 id="监控proxy-配置agent"><a href="#监控proxy-配置agent" class="headerlink" title="监控proxy(配置agent)"></a>监控proxy(配置agent)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装并配置zabbix-agent</span></span><br><span class="line">yum install zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment">#vim /etc/zabbix/zabbix_agent.conf 进行修改</span></span><br><span class="line">Server=zabbix server IP</span><br><span class="line">Server active=zabbix server IP</span><br><span class="line">Host name=zabbixproxy <span class="comment">#(hsotname在server上添加监控的时候是要用到的)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#开启并开机启动服务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#然后去server上添加主机</span></span><br><span class="line">配置---&gt; 主机---&gt; 创建主机---&gt; </span><br><span class="line">主机名:上述的hostname</span><br><span class="line">agent 接口 就是代理的IP地址</span><br><span class="line"><span class="comment">#其余按需配置,不多赘述</span></span><br></pre></td></tr></table></figure>
<h4 id="配置proxy的mariadb"><a href="#配置proxy的mariadb" class="headerlink" title="配置proxy的mariadb"></a>配置proxy的mariadb</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装mariadb</span></span><br><span class="line">yum groupinstall mariadb mariadb-client </span><br><span class="line">systemctl start mariadb</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置密码等</span></span><br><span class="line">mysql_secure_installation</span><br><span class="line"><span class="comment">#登录并创建库</span></span><br><span class="line">create database zabbix_proxy character <span class="built_in">set</span> utf8;</span><br><span class="line"><span class="comment">#创建用户并授权</span></span><br><span class="line">grant all privileges on zabbix_proxy.* to zabbix@localhost identified by <span class="string">'centos'</span>;</span><br><span class="line"><span class="comment">#刷新生效</span></span><br><span class="line">flush privileges</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入zabbix数据库到mariadb</span></span><br><span class="line">rpm -ql zabbix-proxy-mysql <span class="comment">#查找schema.sql.gz文件位置</span></span><br><span class="line"><span class="built_in">cd</span> /usr/share/doc/zabbix-proxy-mysql-3.2.4/</span><br><span class="line">gunzip schema.sql.gz</span><br><span class="line"><span class="comment">#导入</span></span><br><span class="line">mysql -uroot -p zabbix_proxy &lt; schema.sql</span><br></pre></td></tr></table></figure>
<h4 id="添加proxy"><a href="#添加proxy" class="headerlink" title="添加proxy"></a>添加proxy</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改配置文件</span></span><br><span class="line"><span class="comment">#vim /etc/zabbix/zabbix_proxy.conf</span></span><br><span class="line">Server=zabbix server IP</span><br><span class="line">Hostname=zabbixproxy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#DB 设定档</span></span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=111111</span><br><span class="line">ProxyLocalBuffer=0 <span class="comment">#设定为0小时，除非有其他第三方应用和插件需要调用</span></span><br><span class="line">ProxyOfflineBuffer=1 <span class="comment">#proxy或者server无法连接时，保留离线的监控数据的时间，单位小时</span></span><br><span class="line">ConfigFrequency=60 <span class="comment">#server和proxy配置修改同步时间间隔，设定5-10分钟即可。</span></span><br><span class="line">DataSenderFrequency=10 <span class="comment">#数据发送时间间隔，10-30s；</span></span><br><span class="line"><span class="comment">#网络传输质量越好，可以设定间隔时间越短，监控效果也越迅速；</span></span><br><span class="line">StartPollers=10 <span class="comment">#开启多线程数，一般不要超过30个；</span></span><br><span class="line">StartPollersUnreachable=1 <span class="comment">#该线程用来单独监控无法连接的主机，1个即可；</span></span><br><span class="line">StartTrappers=10 <span class="comment">#trapper线程数</span></span><br><span class="line">StartPingers=1 <span class="comment">#fping线程数</span></span><br><span class="line">CacheSize=64M <span class="comment">#用来保存监控数据的缓存数，根据监控主机数量适当调整；</span></span><br><span class="line">Timeout=10 <span class="comment">#超时时间，设定不要超过30s，不然会拖慢其他监控数据抓取时间；</span></span><br><span class="line">TrapperTimeout=30 <span class="comment">#同上</span></span><br><span class="line">FpingLocation=/usr/sbin/fping <span class="comment">#配合simple check icmp检测使用，如不需要可关闭；</span></span><br><span class="line">其他配置默认即可；</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启并开机启动服务</span></span><br></pre></td></tr></table></figure>
<p>回到web端</p>
<blockquote>
<pre><code>Administration--&gt;Proxies--&gt;Create proxy
</code></pre></blockquote>
<p>hostname 与上述的要一致</p>
<blockquote>
<p>  当我们再次创建主机的时候就可以通过 修改 <em>由agent代理程序监测(Monitored by proxy)</em> 选项进行选择了</p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix </tag>
            
            <tag> zabbix-proxy </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix图形化中文乱码]]></title>
      <url>/2017/03/29/zabbix%E5%9B%BE%E5%BD%A2%E5%8C%96%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>主要是应为zabbix web端 默认没有中文字体库<br><a id="more"></a></p>
<blockquote>
<p>从 windows下控制面板-&gt;字体-&gt;选择一种中文字库,宋体 楷体等<br>上传至<br>/var/www/html/zabbix/fonts下<br>修改后缀为ttf</p>
</blockquote>
<p>修改   include/defines.inc.php 下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define(&apos;ZBX_GRAPH_FONT_NAME&apos;, &apos;SIMKAI&apos;); // font file name   #SIMKAI 是字体文件名</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix-rpm安装]]></title>
      <url>/2017/03/28/zabbix-rpm%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p><a href="https://www.zabbix.com/documentation/3.4/manual/installation/install_from_packages/rhel_centos" target="_blank" rel="noopener">官网</a>提供不同版本的仓库文件</p>
<p>此次安装以centos7为基础,zabbix3.4<br><a id="more"></a></p>
<hr>
<p>安装源文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh http://repo.zabbix.com/zabbix/3.4/rhel/7/x86_64/zabbix-release-3.4-2.el7.noarch.rpm</span><br></pre></td></tr></table></figure></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install zabbix-server-mysql -y</span><br><span class="line">yum install zabbix-web-mysql -y</span><br><span class="line">yum -y install mariadb mariadb-server mariadb-libs mariadb-devel</span><br></pre></td></tr></table></figure>
<h4 id="启动httpd-mysql"><a href="#启动httpd-mysql" class="headerlink" title="启动httpd,mysql"></a>启动httpd,mysql</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable mariadb</span><br><span class="line">systemctl start mariadb</span><br><span class="line">systemctl enable httpd</span><br><span class="line">systemctl enable httpd</span><br></pre></td></tr></table></figure>
<h4 id="设置mysql密码"><a href="#设置mysql密码" class="headerlink" title="设置mysql密码"></a>设置mysql密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -uroot password &apos;password&apos;;</span><br></pre></td></tr></table></figure>
<p>这里建议,运行一次mysql配置向导,删除匿名用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">运行mysql_secure_installation会执行几个设置：</span><br><span class="line">  a)为root用户设置密码</span><br><span class="line">  b)删除匿名账号</span><br><span class="line">  c)取消root用户远程登录</span><br><span class="line">  d)删除test库和对test库的访问权限</span><br><span class="line">  e)刷新授权表使修改生效</span><br></pre></td></tr></table></figure></p>
<h4 id="配置php"><a href="#配置php" class="headerlink" title="配置php"></a>配置php</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/php.ini</span><br><span class="line">date.timezone = Asia/Shanghai</span><br><span class="line">max_execution_time = 300</span><br><span class="line">post_max_size = 32M</span><br><span class="line">max_input_time=300</span><br><span class="line">memory_limit = 128M</span><br></pre></td></tr></table></figure>
<h4 id="创建zabbix库"><a href="#创建zabbix库" class="headerlink" title="创建zabbix库"></a>创建zabbix库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database zabbix charset utf8;</span><br></pre></td></tr></table></figure>
<h4 id="创建-授权"><a href="#创建-授权" class="headerlink" title="创建/授权"></a>创建/授权</h4><p>创建zabbix用户并授权<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on zabbix.* to &apos;zabbix&apos;@&apos;%&apos; identified by &apos;zabbix&apos;;</span><br><span class="line"></span><br><span class="line">#刷新</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></p>
<h4 id="导入库文件"><a href="#导入库文件" class="headerlink" title="导入库文件"></a>导入库文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/share/doc/zabbix-server-mysql-3.4.3</span><br><span class="line">gzip -d create.sql.gz</span><br><span class="line">mysql -uzabbix -p zabbix &lt; create.sql</span><br></pre></td></tr></table></figure>
<h4 id="配置zabbix-server"><a href="#配置zabbix-server" class="headerlink" title="配置zabbix_server"></a>配置zabbix_server</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/zabbix/zabbix_server.conf</span><br><span class="line">LogFile=/var/log/zabbix/zabbix_server.log</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br></pre></td></tr></table></figure>
<h4 id="启动zabbix"><a href="#启动zabbix" class="headerlink" title="启动zabbix"></a>启动zabbix</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start zabbix-server.service </span><br><span class="line">systemctl enable zabbix-server.service</span><br></pre></td></tr></table></figure>
<h4 id="web访问"><a href="#web访问" class="headerlink" title="web访问"></a>web访问</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ipaddr/zabbix</span><br></pre></td></tr></table></figure>
<p>最后会提示创建成功,并且提示配置文件路径</p>
<blockquote>
<p>Congratulations! You have successfully installed Zabbix frontend.<br>Configuration file “/etc/zabbix/web/zabbix.conf.php” created.</p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix编译安装]]></title>
      <url>/2017/03/28/zabbix%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p><img src="/images/zabbix-logo.jpg" alt="salt-logo" align="center"></p>
<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>踩了不少坑,总结个文档.<br><a id="more"></a></p>
<h4 id="安装基础环境-依赖"><a href="#安装基础环境-依赖" class="headerlink" title="安装基础环境(依赖)"></a>安装基础环境(依赖)</h4><p>平台在 centos 7+ （PHP 5.5）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum -y install php php-mysql php-common php-gd php-ldap php-odbc php-pear php-xml php-mcrypt php-xmlrpc php-devel php-mbstring php-snmp php-soap curl curl-devel php-bcmath</span><br><span class="line">yum -y install mariadb mariadb-server mariadb-libs mariadb-devel</span><br><span class="line">yum install -y httpd-manual httpd  mod_ssl mod_perl mod_auth_mysql</span><br><span class="line">yum install -y fping mysql-connector-odbc mysql-devel libdbi-dbd-mysql libssh2 libxml2 libxml2-devel libssh2-devel unixODBC unixODBC-devel</span><br><span class="line">yum install -y iksemel*</span><br><span class="line">yum install -y net-snmp-devel net-snmp-utils curl-devel OpenIPMI OpenIPMI-devel rpm-build openldap openldap-devel java java-devel</span><br><span class="line">yum install -y pam-devel (目的是为了安装monit来监控heartbeat等服务)</span><br><span class="line">yum install -y gcc*</span><br><span class="line"></span><br><span class="line">#如果php不支持mysql查看php-mysql是否安装成功</span><br></pre></td></tr></table></figure></p>
<p>平台在 centos 6+<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">安装epel源</span><br><span class="line">rpm -ivh http://mirrors.sohu.com/fedora-epel/6/x86_64/epel-release-6-8.noarch.rpm</span><br><span class="line"></span><br><span class="line">然后安装支持PHP5.4 以上的源 并安装PHP 相关的服务</span><br><span class="line">rpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm</span><br><span class="line">yum install -y httpd mysql mysql-server mysql-devel</span><br><span class="line">yum install php55w  php55w-bcmath php55w-cli php55w-common  php55w-devel php55w-fpm    php55w-gd php55w-imap  php55w-ldap php55w-mbstring php55w-mcrypt php55w-mysql   php55w-odbc   php55w-pdo php55w-pear  php55w-pecl-igbinary  php55w-xml php55w-xmlrpc php55w-opcache php55w-intl php55w-pecl-memcache </span><br><span class="line"></span><br><span class="line">其他的安装包同7</span><br></pre></td></tr></table></figure></p>
<p><strong>开启HTTPD MYSQL</strong></p>
<h4 id="安装zabbix"><a href="#安装zabbix" class="headerlink" title="安装zabbix"></a>安装zabbix</h4><h5 id="下载zabbix-并解压"><a href="#下载zabbix-并解压" class="headerlink" title="下载zabbix 并解压"></a>下载zabbix 并解压</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.zabbix.com/download</span><br><span class="line">然后解压</span><br></pre></td></tr></table></figure>
<h5 id="编译并开启相关服务"><a href="#编译并开启相关服务" class="headerlink" title="编译并开启相关服务"></a>编译并开启相关服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure  --prefix=/usr/local/zabbix --enable-server --enable-proxy --enable-agent --enable-ipv6 --with-mysql --with-net-snmp  --with-libcurl --with-openipmi --with-ldap --with-ssh2 --with-jabber --enable-java --with-libxml2</span><br></pre></td></tr></table></figure>
<p><code>--with-libxml2</code> <code>--with-libcurl</code> 为了开启vm的监控</p>
<h4 id="创建用户和组"><a href="#创建用户和组" class="headerlink" title="创建用户和组"></a>创建用户和组</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd zabbix</span><br><span class="line">useradd -g zabbix zabbix</span><br></pre></td></tr></table></figure>
<p>复制文件到web目录下！</p>
<h4 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/www/html/zabbix</span><br></pre></td></tr></table></figure>
<p>/root/Downloads/zabbix-3.0.1/frontends/php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -rp * /var/www/html/zabbix/</span><br></pre></td></tr></table></figure></p>
<h4 id="创建库"><a href="#创建库" class="headerlink" title="创建库"></a>创建库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database zabbix default charset utf8;</span><br></pre></td></tr></table></figure>
<h5 id="创建zabbix用户并设置密码"><a href="#创建zabbix用户并设置密码" class="headerlink" title="创建zabbix用户并设置密码"></a>创建zabbix用户并设置密码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on zabbix.* to &apos;zabbix&apos;@&apos;%&apos; identified by &apos;zabbix&apos;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
<p>进入解压后的zabbix目录 database/mysql 导入相应数据到zabbix数据库</p>
<h5 id="导入库文件"><a href="#导入库文件" class="headerlink" title="导入库文件"></a>导入库文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p zabbix &lt; schema.sql</span><br><span class="line">初始化server（顺序不能变）</span><br><span class="line">mysql -uroot -p zabbix &lt; images.sql </span><br><span class="line">mysql -uroot -p zabbix &lt; data.sql</span><br></pre></td></tr></table></figure>
<h4 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h4><p>复制启动脚本到init.d<br>/root/Downloads/zabbix-3.0.1/misc/init.d/fedora/core5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost core5]# ls</span><br><span class="line">zabbix_agentd  zabbix_server</span><br><span class="line">[root@localhost core5]# cp -rp * /etc/init.d/</span><br></pre></td></tr></table></figure></p>
<p>注意：<br>/usr/local/zabbix-2.2.2/etc/zabbix_*<br>此安装路径下也两个启动程序。但是不是启动脚本。曾经使用这两个命令，但是zabbix启动不起来。所以使用了启动脚本</p>
<p>然后修改这两个脚本文件中zabbix的路径<br>ZABBIX_BIN=”/usr/local/zabbix/sbin/zabbix_server”</p>
<p>修改/etc/php.ini，使配置达到要求</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">max_execution_time = 300</span><br><span class="line"> memory_limit = 128M</span><br><span class="line"> post_max_size = 16M</span><br><span class="line"> upload_max_filesize = 2M</span><br><span class="line"> max_input_time = 300</span><br><span class="line"> date.timezone=Asia/Shanghai</span><br></pre></td></tr></table></figure>
<p>启动相关服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/zabbix_agentd start</span><br><span class="line">/etc/init.d/zabbix_server start</span><br><span class="line">systemctl start httpd.service </span><br><span class="line">systemctl enable httpd</span><br><span class="line">systemctl start mariadb</span><br><span class="line">systemctl enable mariadb</span><br></pre></td></tr></table></figure></p>
<p>访问本机地址下的zabbix网站进行设置</p>
<hr>
]]></content>
      
        <categories>
            
            <category> zabbix </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ansible-salt-puppet对比]]></title>
      <url>/2017/03/25/ansible-salt-puppet%E5%AF%B9%E6%AF%94/</url>
      <content type="html"><![CDATA[<p>对三种运维工具做了图,进行了简单的对比<br><a id="more"></a></p>
<p><img src="/images/ansible-salt-puppet.jpg" alt="&#39;运维工具对比&#39;"></p>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> 自动化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ansible </tag>
            
            <tag> saltstack </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[saltstack基础]]></title>
      <url>/2017/03/25/saltstack%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p><img src="/images/salt-logo.png" width="50%" height="40%" alt="salt-logo" align="center"></p>
<h4 id="salt简介"><a href="#salt简介" class="headerlink" title="salt简介"></a>salt简介</h4><p>  SaltStack是一个服务器基础架构集中化管理平台，具备配置管理、远程执行、监控等功能，基于Python语言实现，结合轻量级消息队列（ZeroMQ）与Python第三方模块（Pyzmq、PyCrypto、Pyjinjia2、python-msgpack和PyYAML等）构建。</p>
<p>  通过部署SaltStack，我们可以在成千万台服务器上做到批量执行命令，根据不同业务进行配置集中化管理、分发文件、采集服务器数据、操作系统基础及软件包管理等，SaltStack是运维人员提高工作效率、规范业务配置与操作的利器。<br><a id="more"></a></p>
<h4 id="salt基本原理"><a href="#salt基本原理" class="headerlink" title="salt基本原理"></a>salt基本原理</h4><blockquote>
<p>SaltStack 采用 C/S模式，server端就是salt的master，client端就是minion，minion与master之间通过ZeroMQ消息队列通信</p>
<p>minion上线后先与master端联系，把自己的pub key发过去，这时master端通过salt-key -L命令就会看到minion的key，接受该minion-key后，也就是master与minion已经互信</p>
<p>master可以发送任何指令让minion执行了，salt有很多可执行模块，比如说cmd模块，在安装minion的时候已经自带了，它们通常位于你的python库中，<code>locate salt | grep /usr/</code> 可以看到salt自带的所有东西。</p>
<p>这些模块是python写成的文件，里面会有好多函数，如cmd.run，当我们执行<code>salt &#39;*&#39; cmd.run &#39;uptime&#39;</code>的时候，master下发任务匹配到的minion上去，minion执行模块函数，并返回结果。master监听4505和4506端口，4505对应的是ZMQ的PUB system，用来发送消息，4506对应的是REP system是来接受消息的。</p>
</blockquote>
<p>具体步骤如下</p>
<ol>
<li>Salt stack的Master与Minion之间通过ZeroMq进行消息传递，使用了ZeroMq的发布-订阅模式，连接方式包括tcp，ipc</li>
<li>salt命令，将<code>cmd.run ls</code>命令从<code>salt.client.LocalClient.cmd_cli</code>发布到master，获取一个Jodid，根据jobid获取命令执行结果。</li>
<li>master接收到命令后，将要执行的命令发送给客户端minion。</li>
<li>minion从消息总线上接收到要处理的命令，交给<code>minion._handle_aes</code>处理</li>
<li><code>minion._handle_aes</code>发起一个本地线程调用cmdmod执行ls命令。线程执行完ls后，调用<code>minion._return_pub</code>方法，将执行结果通过消息总线返回给master</li>
<li>master接收到客户端返回的结果，调用<code>master._handle_aes</code>方法，将结果写的文件中</li>
<li><code>salt.client.LocalClient.cmd_cli</code>通过轮询获取Job执行结果，将结果输出到终端。</li>
</ol>
<h4 id="安装salt"><a href="#安装salt" class="headerlink" title="安装salt"></a>安装salt</h4><blockquote>
<p>  导入salt 密钥</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">7版本</span><br><span class="line">rpm --import https://repo.saltstack.com/yum/redhat/7/x86_64/latest/SALTSTACK-GPG-KEY.pub</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6版本</span><br><span class="line">rpm --import https://repo.saltstack.com/yum/redhat/6/x86_64/latest/SALTSTACK-GPG-KEY.pub</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#新增 /etc/yum.repos.d/saltstack.repo</span></span><br><span class="line">7 &amp; 6版本</span><br><span class="line"></span><br><span class="line">[saltstack-repo] </span><br><span class="line">name = RHEL / CentOS $ releasever的</span><br><span class="line">SaltStack repo baseurl = https://repo.saltstack.com/yum/redhat/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/latest </span><br><span class="line">enabled = 1 </span><br><span class="line">gpgcheck = 1 </span><br><span class="line">gpgkey = https：// repo.saltstack.com/yum/redhat/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/latest/SALTSTACK-GPG-KEY.pub</span><br></pre></td></tr></table></figure>
<blockquote>
<p>  安装 salt-minion, salt-master,或Salt components:</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install salt-master</span><br><span class="line">yum install salt-minion</span><br><span class="line">yum install salt-ssh</span><br><span class="line">yum install salt-syndic</span><br><span class="line">yum install salt-cloud</span><br></pre></td></tr></table></figure>
<h4 id="配置salt"><a href="#配置salt" class="headerlink" title="配置salt"></a>配置salt</h4><h5 id="master"><a href="#master" class="headerlink" title="master"></a>master</h5><blockquote>
<p>  一般使用默认就好   (/etc/salt/master)</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定master，冒号后有一个空格</span></span><br><span class="line">master: 192.168.2.22</span><br><span class="line">user: root</span><br><span class="line"></span><br><span class="line"><span class="comment">#-------以下为可选--------------</span></span><br><span class="line"><span class="comment"># salt运行的用户，影响到salt的执行权限</span></span><br><span class="line">user: root</span><br><span class="line"><span class="comment">#s alt的运行线程，开的线程越多一般处理的速度越快，但一般不要超过CPU的个数</span></span><br><span class="line">worker_threads: 10</span><br><span class="line"><span class="comment"># master的管理端口</span></span><br><span class="line">publish_port : 4505</span><br><span class="line"><span class="comment"># master跟minion的通讯端口，用于文件服务，认证，接受返回结果等</span></span><br><span class="line">ret_port : 4506</span><br><span class="line"><span class="comment"># 如果这个master运行的salt-syndic连接到了一个更高层级的master,那么这个参数需要配置成连接到的这个高层级master的监听端口</span></span><br><span class="line">syndic_master_port : 4506</span><br><span class="line"><span class="comment"># 指定pid文件位置</span></span><br><span class="line">pidfile: /var/run/salt-master.pid</span><br><span class="line"><span class="comment"># saltstack 可以控制的文件系统的开始位置</span></span><br><span class="line">root_dir: /</span><br><span class="line"><span class="comment"># 日志文件地址</span></span><br><span class="line">log_file: /var/<span class="built_in">log</span>/salt_master.log</span><br><span class="line"><span class="comment"># 分组设置</span></span><br><span class="line">nodegroups:</span><br><span class="line">  group_all: <span class="string">'*'</span></span><br><span class="line"><span class="comment"># salt state执行时候的根目录</span></span><br><span class="line">file_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /srv/salt/</span><br><span class="line"><span class="comment"># 设置pillar 的根目录</span></span><br><span class="line">pillar_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /srv/pillar</span><br></pre></td></tr></table></figure>
<p>启动master</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start salt-master</span><br><span class="line">systemctl enable salt-master</span><br></pre></td></tr></table></figure>
<h5 id="minion"><a href="#minion" class="headerlink" title="minion"></a>minion</h5><p>(/etc/salt/minion)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定master，冒号后有一个空格</span></span><br><span class="line">master: 192.168.2.22</span><br><span class="line">id: minion-01</span><br><span class="line">user: root</span><br><span class="line"></span><br><span class="line"><span class="comment">#-------以下为可选--------------</span></span><br><span class="line"><span class="comment"># minion的识别ID，可以是IP，域名，或是可以通过DNS解析的字符串</span></span><br><span class="line">id: 192.168.0.100</span><br><span class="line"><span class="comment"># salt运行的用户权限</span></span><br><span class="line">user: root</span><br><span class="line"><span class="comment"># master的识别ID，可以是IP，域名，或是可以通过DNS解析的字符串</span></span><br><span class="line">master : 192.168.0.100</span><br><span class="line"><span class="comment"># master通讯端口</span></span><br><span class="line">master_port: 4506</span><br><span class="line"><span class="comment"># 备份模式，minion是本地备份，当进行文件管理时的文件备份模式</span></span><br><span class="line">backup_mode: minion</span><br><span class="line"><span class="comment"># 执行salt-call时候的输出方式</span></span><br><span class="line">output: nested </span><br><span class="line"><span class="comment"># minion等待master接受认证的时间</span></span><br><span class="line">acceptance_wait_time: 10</span><br><span class="line"><span class="comment"># 失败重连次数，0表示无限次，非零会不断尝试到设置值后停止尝试</span></span><br><span class="line">acceptance_wait_time_max: 0</span><br><span class="line"><span class="comment"># 重新认证延迟时间，可以避免因为master的key改变导致minion需要重新认证的syn风暴</span></span><br><span class="line">random_reauth_delay: 60</span><br><span class="line"><span class="comment"># 日志文件位置</span></span><br><span class="line">log_file: /var/logs/salt_minion.log</span><br><span class="line"><span class="comment"># 文件路径基本位置</span></span><br><span class="line">file_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /etc/salt/minion/file</span><br><span class="line"><span class="comment"># pillar基本位置</span></span><br><span class="line">pillar_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /data/salt/minion/pillar</span><br></pre></td></tr></table></figure>
<p>启动minion</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start salt-master</span><br><span class="line">systemctl enable salt-master</span><br></pre></td></tr></table></figure>
<h4 id="添加key"><a href="#添加key" class="headerlink" title="添加key"></a>添加key</h4><blockquote>
<p>  master 端查看key</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@master salt]<span class="comment"># salt-key </span></span><br><span class="line">Accepted Keys:</span><br><span class="line">Denied Keys:</span><br><span class="line">Unaccepted Keys:   <span class="comment">#可看到 minion已经检测到，没有认证key</span></span><br><span class="line">minion-01</span><br><span class="line">Rejected Keys:</span><br><span class="line"></span><br><span class="line">[root@master salt]<span class="comment"># salt-key -a minion-01</span></span><br><span class="line">The following keys are going to be accepted:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">minion-01</span><br><span class="line">Proceed? [n/Y] y    <span class="comment">#Y确认添加</span></span><br><span class="line">Key <span class="keyword">for</span> minion minion-01 accepted.  <span class="comment">#添加成功</span></span><br><span class="line">[root@master salt]<span class="comment"># salt-key </span></span><br><span class="line">Accepted Keys:</span><br><span class="line">minion-01</span><br><span class="line">Denied Keys:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">Rejected Keys:</span><br><span class="line">[root@master salt]<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<h5 id="salt-key常用参数"><a href="#salt-key常用参数" class="headerlink" title="salt-key常用参数"></a>salt-key常用参数</h5><table>
<thead>
<tr>
<th style="text-align:left">-a</th>
<th style="text-align:left">添加指定ID 的key</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">-A</td>
<td style="text-align:left">添加全部</td>
</tr>
<tr>
<td style="text-align:left">-R</td>
<td style="text-align:left">拒绝全部</td>
</tr>
<tr>
<td style="text-align:left">-d</td>
<td style="text-align:left">删除指定ID的</td>
</tr>
<tr>
<td style="text-align:left">-D</td>
<td style="text-align:left">删除全部</td>
</tr>
</tbody>
</table>
<h5 id="测试连通性"><a href="#测试连通性" class="headerlink" title="测试连通性"></a>测试连通性</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master salt]<span class="comment"># salt 'minion-01' test.ping</span></span><br><span class="line">minion-01:</span><br><span class="line">    True   <span class="comment">#返回结果表示成功</span></span><br><span class="line">[root@master salt]<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<h5 id="简单服务的安装"><a href="#简单服务的安装" class="headerlink" title="简单服务的安装"></a>简单服务的安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root/] ]<span class="variable">$salt</span> <span class="string">'minion-01'</span> pkg.install ftp  <span class="comment">#解释</span></span><br><span class="line">minion-01:</span><br><span class="line">    ----------</span><br><span class="line">    ftp:</span><br><span class="line">        ----------</span><br><span class="line">        new:</span><br><span class="line">            0.17-67.el7</span><br><span class="line">        old:</span><br><span class="line">[root/] ]$</span><br><span class="line"></span><br><span class="line"><span class="comment">#去minion查看</span></span><br><span class="line">[root@minion-01 tmp]<span class="comment"># rpm -qa ftp</span></span><br><span class="line">ftp-0.17-67.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment">#salt 'minion-01' pkg.install ftp</span></span><br><span class="line"><span class="comment">#1.'*' 代表的是target是指在那些minion上操作</span></span><br><span class="line"><span class="comment">#2. 'pkg' 是一个执行模块,就像'test' </span></span><br><span class="line"><span class="comment">#3.'install' 是执行模块下面的函数，像test下的ping</span></span><br><span class="line"><span class="comment">#4.'ftp' 是函数的参数(arg)，有的函数需要参数，有的不需要比如test.ping就不需要参数</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##查看所有执行模块的doc</span></span><br><span class="line">salt <span class="string">'minion'</span> sys.doc</span><br><span class="line"><span class="comment">##查看test模块的帮助</span></span><br><span class="line">salt <span class="string">'minion'</span> sys.doc <span class="built_in">test</span>  </span><br><span class="line"><span class="comment">##查看test.ping函数的帮助</span></span><br><span class="line">salt <span class="string">'minion'</span> sys.doc test.ping</span><br></pre></td></tr></table></figure>
<h4 id="salt常用命令"><a href="#salt常用命令" class="headerlink" title="salt常用命令"></a>salt常用命令</h4><h5 id="salt"><a href="#salt" class="headerlink" title="salt"></a>salt</h5><blockquote>
<p>  该命令执行salt的执行模块,通常在master端运行.常用命令</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">salt [option] <span class="string">'&lt;target&gt;'</span> &lt;<span class="keyword">function</span>&gt; [arguments]</span><br><span class="line"></span><br><span class="line"><span class="comment">#例如</span></span><br><span class="line">salt <span class="string">'minion-01'</span> cmd.run <span class="string">'ip addr'</span></span><br></pre></td></tr></table></figure>
<h5 id="salt-run"><a href="#salt-run" class="headerlink" title="salt-run"></a>salt-run</h5><blockquote>
<p>  该命令执行runner(salt自带或者自定义的，)，通常在master端执行，比如经常用到的manage</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">salt-run [options] [runner.func]</span><br><span class="line"></span><br><span class="line"><span class="comment">#例如</span></span><br><span class="line">salt-run manage.status   <span class="comment">##查看所有minion状态</span></span><br><span class="line">salt-run manage.down     <span class="comment">##查看所有没在线minion</span></span><br><span class="line">salt-run manged.up       <span class="comment">##查看所有在线minion</span></span><br></pre></td></tr></table></figure>
<h5 id="salt-key"><a href="#salt-key" class="headerlink" title="salt-key"></a>salt-key</h5><blockquote>
<p>  密钥管理，通常在master端执行</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">salt-key [options]</span><br><span class="line">salt-key -L              <span class="comment">##查看所有minion-key</span></span><br><span class="line">salt-key -a &lt;key-name&gt;   <span class="comment">##接受某个minion-key</span></span><br><span class="line">salt-key -d &lt;key-name&gt;   <span class="comment">##删除某个minion-key</span></span><br><span class="line">salt-key -A              <span class="comment">##接受所有的minion-key</span></span><br><span class="line">salt-key -D              <span class="comment">##删除所有的minion-key</span></span><br></pre></td></tr></table></figure>
<h5 id="salt-call"><a href="#salt-call" class="headerlink" title="salt-call"></a>salt-call</h5><blockquote>
<p>  该命令通常在minion上执行，minion自己执行可执行模块，不通过master下发job</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">salt-call [options] &lt;<span class="keyword">function</span>&gt; [arguments]</span><br><span class="line">salt-call test.ping           <span class="comment">##自己执行test.ping命令</span></span><br><span class="line">salt-call cmd.run <span class="string">'ifconfig'</span>  <span class="comment">##自己执行cmd.run函数</span></span><br></pre></td></tr></table></figure>
<h5 id="salt-cp"><a href="#salt-cp" class="headerlink" title="salt-cp"></a>salt-cp</h5><blockquote>
<p>  分发文件到minion上,不支持目录分发.运行在master</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">salt-cp [options] <span class="string">'&lt;target&gt;'</span> SOURCE DEST</span><br><span class="line"><span class="comment">#例如</span></span><br><span class="line">salt-cp <span class="string">'*'</span> testfile.html /tmp</span><br><span class="line">salt-cp <span class="string">'test*'</span> index.html /tmp/a.html</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果minion 是windows端 默认/ 指的是 C:\   /test = C:\test</span></span><br></pre></td></tr></table></figure>
<h5 id="salt-master"><a href="#salt-master" class="headerlink" title="salt-master"></a>salt-master</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">salt-master [options]</span><br><span class="line">salt-master            <span class="comment">##前台运行master</span></span><br><span class="line">salt-master -d         <span class="comment">##后台运行master</span></span><br><span class="line">salt-master -l debug   <span class="comment">##前台debug输出</span></span><br></pre></td></tr></table></figure>
<h5 id="salt-minion"><a href="#salt-minion" class="headerlink" title="salt-minion"></a>salt-minion</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">salt-minion [options]</span><br><span class="line">salt-minion            <span class="comment">##前台运行</span></span><br><span class="line">salt-minion -d         <span class="comment">##后台运行</span></span><br><span class="line">salt-minion -l debug   <span class="comment">##前台debug输出</span></span><br></pre></td></tr></table></figure>
<h4 id="普通用户执行salt"><a href="#普通用户执行salt" class="headerlink" title="普通用户执行salt"></a>普通用户执行salt</h4><p>两种方法</p>
<blockquote>
<p>  1: ACL(修改master)</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    client_acl:</span><br><span class="line">    monitor: <span class="comment">#uonghu</span></span><br><span class="line">     - <span class="built_in">test</span>*: <span class="comment">#权限</span></span><br><span class="line">    - <span class="built_in">test</span>.*</span><br><span class="line">    dev:</span><br><span class="line">     - service.*</span><br><span class="line">    sa:</span><br><span class="line">     - .*</span><br><span class="line"><span class="comment">#重启master</span></span><br><span class="line">     </span><br><span class="line"><span class="comment">#给予目录和文件权限</span></span><br><span class="line">chmod +r /etc/salt/master</span><br><span class="line">chmod +x /var/run/salt</span><br><span class="line">chmod +x /var/cache/salt</span><br></pre></td></tr></table></figure>
<blockquote>
<p>  2 external_auth(修改master)</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  pam:</span><br><span class="line">    fred:</span><br><span class="line">      - <span class="built_in">test</span>.*</span><br><span class="line"><span class="comment">#重启master</span></span><br><span class="line">     </span><br><span class="line"><span class="comment">#给予目录和文件权限</span></span><br><span class="line">chmod +r /etc/salt/master</span><br><span class="line">chmod +x /var/run/salt</span><br><span class="line">chmod +x /var/cache/salt</span><br></pre></td></tr></table></figure>
<p>使用Token不必每次都输入账号密码，使用external_auth每次都是需要密码的，这样多麻烦，这里引入了Token，它会保存一串字符到在当前用户家目录下.salt_token中，在有效时间内使用external_auth是不需要输入密码的，默认时间12hour，可以通过master配置文件修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt -T -a pam &apos;*&apos; test.ping</span><br></pre></td></tr></table></figure>
<h4 id="target"><a href="#target" class="headerlink" title="target"></a>target</h4><blockquote>
<p>  target也就是目标,目的.指定master命令应该对谁执行</p>
</blockquote>
<ul>
<li>正则匹配</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master /]<span class="comment"># salt -E  'mini*' test.ping</span></span><br><span class="line">minion-02:</span><br><span class="line">    True</span><br><span class="line">minion-01:</span><br><span class="line">    True</span><br></pre></td></tr></table></figure>
<ul>
<li>列表匹配</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># salt -L minion-01,minion-02 test.ping</span></span><br><span class="line">minion-02:</span><br><span class="line">    True</span><br><span class="line">minion-01:</span><br><span class="line">    True</span><br></pre></td></tr></table></figure>
<ul>
<li>grains匹配</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># salt -G 'os:CentOs' test.ping</span></span><br><span class="line">minion-02:</span><br><span class="line">    True</span><br><span class="line">minion-01:</span><br><span class="line">    True</span><br></pre></td></tr></table></figure>
<ul>
<li>组匹配</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启master 的default_include</span></span><br><span class="line">vim /etc/salt/master.d/nodegroup.conf </span><br><span class="line"><span class="comment">#写到master中也是这个格式</span></span><br><span class="line">nodegroups:</span><br><span class="line"> test1: <span class="string">'L@test1,test2 or test3*'</span></span><br><span class="line"> test2: <span class="string">'G@os:CenOS or test2'</span></span><br><span class="line"></span><br><span class="line">salt -N test1 test.ping   <span class="comment">#-N指定groupname</span></span><br><span class="line"></span><br><span class="line">在top file中使用nodegroups</span><br><span class="line"></span><br><span class="line"><span class="string">'test1'</span>:</span><br><span class="line"> - match: nodegroup     <span class="comment">##没s,匹配的是文件</span></span><br><span class="line"> - webserver</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># salt -N nodegroups test.ping</span></span><br><span class="line">minion-02:</span><br><span class="line">    True</span><br><span class="line">minion-01:</span><br><span class="line">    True</span><br><span class="line"><span class="comment">#组需要在master中预先定义</span></span><br></pre></td></tr></table></figure>
<ul>
<li>复合匹配  <code>salt -C &#39;G@os:MacOS or L@Minion1&#39;</code> </li>
<li>Pillar匹配 <code>salt -I &#39;key:value&#39; test.ping</code></li>
<li>CIDR匹配 <code>salt -S &#39;192.168.1.0/24&#39; test.ping</code></li>
</ul>
<blockquote>
<p>  在top文件中匹配 grains</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'node_type:web'</span>:</span><br><span class="line">  - match: grain         <span class="comment">#没有s</span></span><br><span class="line">  - webserver</span><br></pre></td></tr></table></figure>
<blockquote>
<p>  top文件中使用jinja</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="built_in">set</span> self = grains[<span class="string">'node_type'</span>] %&#125;</span><br><span class="line">    - match: grain</span><br><span class="line">- &#123;&#123; self &#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>一次在n个minion上执行</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-b n</span><br><span class="line">--batch-size n</span><br><span class="line"><span class="comment">#例：</span></span><br><span class="line">salt <span class="string">'*'</span> -b 5 test.ping</span><br><span class="line"><span class="comment">#5个5个的ping</span></span><br></pre></td></tr></table></figure>
<h4 id="多master"><a href="#多master" class="headerlink" title="多master"></a>多master</h4><blockquote>
<blockquote>
<p>  2个master并不会共享Minion keys，一个master删除了一个key不会影响另一个</p>
<p>  不会自动同步File_roots,所以需要手动去维护，如果用git就没问题了</p>
<p>  不会自动同步Pillar_Roots，所以需要手工去维护，也可以用git</p>
<p>  Master的配置文件也是独立的</p>
</blockquote>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装 salt-master</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#原master的密钥cp一份到新的master</span></span><br><span class="line">scp /etc/salt/pki/master/master* newmaster:/etc/salt/pki/master/</span><br><span class="line"><span class="comment">#启动新的Master</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改配置minion的配置</span></span><br><span class="line">master:</span><br><span class="line">  - master1</span><br><span class="line">  - master2</span><br><span class="line"><span class="comment">#重启minion</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#新master接受所有的key</span></span><br><span class="line">salt-key -L</span><br><span class="line">salt-key -A</span><br></pre></td></tr></table></figure>
<h4 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a>YAML</h4><blockquote>
<p>  语法风格</p>
</blockquote>
<ul>
<li><p>空格和TAB</p>
<p>yaml两个空格为缩进, TAB不要使用!</p>
</li>
<li><p>冒号: 和减号-</p>
<p>  : 和- 后面要跟上一个空格在写</p>
</li>
<li><p>数字解析</p>
<p>  mode: 0644 会解析成为mode: 644 最好使用mode: (0644)</p>
</li>
<li><p>简写</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim:</span><br><span class="line">  pkg.installed <span class="comment">#第一个简写</span></span><br><span class="line">  user.present <span class="comment">#第二个简写.不被支持,因为不支持双简写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#建议规范书写</span></span><br><span class="line">vim:</span><br><span class="line">  pkg:</span><br><span class="line">    - installed</span><br><span class="line">  user:</span><br><span class="line">    - present</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="Jinja"><a href="#Jinja" class="headerlink" title="Jinja"></a>Jinja</h4><blockquote>
<p>  Jinja 基于Python模板引擎开发,saltstack默认使用yaml_jinja渲染器,渲染流程时先jinja在yaml解析.所以在开始解析yaml的时候可以使用jinja”偷个腥”</p>
</blockquote>
<ul>
<li>区分模板文件</li>
</ul>
<p>在salt中,files和templates都使用file这个state模块.那么如何区分模板是什么文件呢.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  - templates: jinja</span><br><span class="line">  </span><br><span class="line">file.managed:</span><br><span class="line">  - name: /tmp/<span class="built_in">test</span></span><br><span class="line">  - <span class="built_in">source</span>: salt://tmp/<span class="built_in">test</span></span><br><span class="line">  - template: jinja</span><br><span class="line">  - defaults:</span><br><span class="line">    Server: &#123;&#123; pillar[<span class="string">'.....'</span>] &#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>jinja中使用grains</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; grains[&apos;os&apos;] &#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>jinja中使用执行模块</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; salt[&apos;network.hw_addr&apos;](&apos;eth0&apos;) &#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>jinja中使用Pillar</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; pillar[&apos;apache&apos;][&apos;PORT&apos;] &#125;&#125;</span><br></pre></td></tr></table></figure>
<p><strong>Jinja的逻辑关系</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if grains[&apos;os&apos;] == &apos;RedHat&apos; %&#125;</span><br><span class="line">apache: httpd</span><br><span class="line">&#123;% elif grains[&apos;os&apos;] == &apos;Debian&apos; %&#125;</span><br><span class="line">apache: apache2</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p><strong>更多使用自行研究</strong></p>
<h4 id="salt常用模块和API"><a href="#salt常用模块和API" class="headerlink" title="salt常用模块和API"></a>salt常用模块和API</h4><h5 id="查看支持的所有modules"><a href="#查看支持的所有modules" class="headerlink" title="查看支持的所有modules"></a>查看支持的所有modules</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root/] ]<span class="variable">$salt</span> <span class="string">'minion-01'</span> sys.list_modules</span><br><span class="line">minion-01:</span><br><span class="line">    - acl</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h5 id="salt-client调用API举例"><a href="#salt-client调用API举例" class="headerlink" title="salt.client调用API举例"></a>salt.client调用API举例</h5><p><strong><code>[root/] ]$cd /usr/lib/python2.7/site-packages/salt/modules/</code></strong> 模块path</p>
<p><strong>API调用示例</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root/] ]$cat test.py </span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> salt.client</span><br><span class="line">client = salt.client.LocalClient()</span><br><span class="line"></span><br><span class="line">res = client.cmd(<span class="string">'*'</span>,<span class="string">'test.ping'</span>)</span><br><span class="line"><span class="keyword">print</span> res</span><br><span class="line">[root/] ]$./test.py </span><br><span class="line">&#123;<span class="string">'minion-02'</span>: <span class="keyword">True</span>, <span class="string">'minion-01'</span>: <span class="keyword">True</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">##解释一下</span></span><br><span class="line"><span class="comment">#当我们调用salt.client.LocalClient的时候,其实就等于我们执行了 salt '*' test.ping</span></span><br></pre></td></tr></table></figure>
<p><strong>API调用：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.cmd(&apos;*&apos;,&apos;file.remove&apos;,[&apos;/tmp/foo&apos;])</span><br></pre></td></tr></table></figure>
<blockquote>
<p>  salt  <target> sys.doc  module</target></p>
<p>  可以查看模块支持那些命令</p>
</blockquote>
<h5 id="Archive"><a href="#Archive" class="headerlink" title="Archive"></a>Archive</h5><blockquote>
<p>  实现对系统曾经的压缩包调用支持gzip,gunzip.rar,tar,unrar,unzip等</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#采用gunzip解压sourcefile.txt.gz包</span></span><br><span class="line">salt <span class="string">'*'</span> archive.gunzip sourcefile.txt.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#采用gzip压缩sourcefile.txt文件</span></span><br><span class="line">salt <span class="string">'*'</span> archive.gzip sourcefile.txt</span><br></pre></td></tr></table></figure>
<p><strong>API调用：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.cmd(&apos;*&apos;,&apos;archive.gunzip&apos;,[&apos;sourcefile.txt.gz&apos;])</span><br></pre></td></tr></table></figure>
<h5 id="cmd"><a href="#cmd" class="headerlink" title="cmd"></a>cmd</h5><blockquote>
<p>  实现对远程命令的调用执行,(默认具备root权限!谨慎使用)</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取所欲被控主机的内存使用情况</span></span><br><span class="line">salt <span class="string">'*'</span> cmd.run <span class="string">'free -m'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在wx主机上运行test.py脚本，其中script/test.py存放在file_roots指定的目录（默认是在/srv/salt,自定义在/etc/salt/master文件中定义），</span></span><br><span class="line"><span class="comment">#该命令会做2个动作：首先同步test.py到minion的cache目录；起床运行该脚本</span></span><br><span class="line">salt <span class="string">'minion-01'</span> cmd.script salt://script/test.py</span><br></pre></td></tr></table></figure>
<p><strong>API调用：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.cmd(&apos;*&apos;,&apos;cmd.run&apos;,[&apos;free -m&apos;])</span><br></pre></td></tr></table></figure>
<h5 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h5><blockquote>
<p>  实现远程文件目录的复制,以及下载URL文件等操作</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将被控主机的/etc/hosts文件复制到被控主机本地的salt cache目录（/var/cache/salt/minion/localfiles/）</span></span><br><span class="line">salt <span class="string">'*'</span> cp.cache_local_file /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment">#将主控端file_roots指定位置下的目录复制到被控主机/minion/目录下</span></span><br><span class="line">salt <span class="string">'*'</span> cp.get_dir salt://script/ /minion/</span><br><span class="line"></span><br><span class="line"><span class="comment">#将主控端file_roots指定位置下的文件复制到被控主机/minion/test.py文件(file为文件名)</span></span><br><span class="line">salt <span class="string">'*'</span> cp.get_dir salt://script/test.py /minion/test.py</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载URL内容到被控主机指定位置(/tmp/index.html)</span></span><br><span class="line">salt <span class="string">'*'</span> cp.get_url http://www.slashdot.ort /tmp/index.html</span><br></pre></td></tr></table></figure>
<p><strong>API调用：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.cmd(&apos;*&apos;,&apos;cp.get_file&apos;,[&apos;salt://script/test.py&apos;,&apos;/minion/test.py&apos;])</span><br></pre></td></tr></table></figure>
<h5 id="cron"><a href="#cron" class="headerlink" title="cron"></a>cron</h5><blockquote>
<p>  实现对minion的crontab控制</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看指定被控主机、root用户的crontab操作</span></span><br><span class="line">salt <span class="string">'minion-01'</span> cron.raw_cron root</span><br><span class="line"></span><br><span class="line"><span class="comment">#为指定被控主机、root用户添加/usr/local/weekly任务zuoye</span></span><br><span class="line">salt <span class="string">'minion-01'</span> cron.set_job root <span class="string">'*'</span> <span class="string">'*'</span> <span class="string">'*'</span> <span class="string">'*'</span> 1 /usr/<span class="built_in">local</span>/weekly </span><br><span class="line"></span><br><span class="line"><span class="comment">#删除指定被控主机、root用户crontab的/usr/local/weekly任务zuoye</span></span><br><span class="line">salt <span class="string">'minion-01'</span> cron.rm_job root /usr/<span class="built_in">local</span>/weekly</span><br></pre></td></tr></table></figure>
<p><strong>API调用：</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.cmd(<span class="string">'wx'</span>,<span class="string">'cron.set_job'</span>,[<span class="string">'root'</span>,<span class="string">'*'</span>,<span class="string">'*'</span>,<span class="string">'*'</span>,<span class="string">'*'</span>,1,<span class="string">'/usr/local/weekly'</span>])</span><br></pre></td></tr></table></figure>
<h5 id="file"><a href="#file" class="headerlink" title="file"></a>file</h5><blockquote>
<p>  对minion的文件操作,包括文件读写,权限,查找校验</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#校验所有被控主机/etc/fstab文件的md5值是否为xxxxxxxxxxxxx,一致则返回True值</span></span><br><span class="line">salt <span class="string">'*'</span> file.check_hash /etc/fstab md5=xxxxxxxxxxxxxxxxxxxxx</span><br><span class="line"></span><br><span class="line"><span class="comment">#校验所有被控主机文件的加密信息，支持md5、sha1、sha224、shs256、sha384、sha512加密算法</span></span><br><span class="line">salt <span class="string">'*'</span> file.get_sum /etc/passwd md5</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改所有被控主机/etc/passwd文件的属组、用户权限、等价于chown root:root /etc/passwd</span></span><br><span class="line">salt <span class="string">'*'</span> file.chown /etc/passwd root root</span><br><span class="line"></span><br><span class="line"><span class="comment">#复制所有被控主机/path/to/src文件到本地的/path/to/dst文件</span></span><br><span class="line">salt <span class="string">'*'</span> file.copy /path/to/src /path/to/dst</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查所有被控主机/etc目录是否存在，存在则返回True,检查文件是否存在使用file.file_exists方法</span></span><br><span class="line">salt <span class="string">'*'</span> file.directory_exists /etc</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有被控主机/etc/passwd的stats信息</span></span><br><span class="line">salt <span class="string">'*'</span> file.stats /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有被控主机/etc/passwd的权限mode，如755，644</span></span><br><span class="line">salt <span class="string">'*'</span> file.get_mode /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改所有被控主机/etc/passwd的权限mode为0644</span></span><br><span class="line">salt <span class="string">'*'</span> file.set_mode /etc/passwd 0644</span><br><span class="line"></span><br><span class="line"><span class="comment">#在所有被控主机创建/opt/test目录</span></span><br><span class="line">salt <span class="string">'*'</span> file.mkdir /opt/<span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将所有被控主机/etc/httpd/httpd.conf文件的LogLevel参数的warn值修改为info</span></span><br><span class="line">salt <span class="string">'*'</span> file.sed /etc/httpd/httpd.conf <span class="string">'LogLevel warn'</span> <span class="string">'LogLevel info'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#给所有被控主机的/tmp/test/test.conf文件追加内容‘maxclient 100’</span></span><br><span class="line">salt <span class="string">'*'</span> file.append /tmp/<span class="built_in">test</span>/test.conf <span class="string">'maxclient 100'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除所有被控主机的/tmp/foo文件</span></span><br><span class="line">salt <span class="string">'*'</span> file.remove /tmp/foo</span><br></pre></td></tr></table></figure>
<h5 id="network"><a href="#network" class="headerlink" title="network"></a>network</h5><blockquote>
<p>  返回minion的主机信息</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在指定被控主机获取dig、ping、traceroute目录域名信息</span></span><br><span class="line">salt <span class="string">'minion-01'</span> network.dig www.qq.com</span><br><span class="line">salt <span class="string">'minion-01'</span> network.ping www.qq.com</span><br><span class="line">salt <span class="string">'minion-01'</span> network.traceroute www.qq.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取指定被控主机的mac地址</span></span><br><span class="line">salt <span class="string">'minion-01'</span> network.hwaddr eth0</span><br><span class="line"></span><br><span class="line"><span class="comment">#检测指定被控主机是否属于10.0.0.0/16子网范围，属于则返回True</span></span><br><span class="line">salt <span class="string">'minion-01'</span> network.in_subnet 10.0.0.0/16</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取指定被控主机的网卡配置信息</span></span><br><span class="line">salt <span class="string">'minion-01'</span> network.interfaces</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取指定被控主机的IP地址配置信息</span></span><br><span class="line">salt <span class="string">'minion-01'</span> network.ip_addrs</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取指定被控主机的子网信息</span></span><br><span class="line">salt <span class="string">'minion-01'</span> network.subnets</span><br></pre></td></tr></table></figure>
<p><strong>API调用：</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.cmd(<span class="string">'minion-01'</span>,<span class="string">'network.ip_addrs'</span>)</span><br></pre></td></tr></table></figure>
<h5 id="pkg"><a href="#pkg" class="headerlink" title="pkg"></a>pkg</h5><blockquote>
<p>  minion的程序包管理,如yum, apt-get等</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#为所有被控主机安装PHP环境，根据不同系统发行版调用不同安装工具进行部署，如redhat平台的yum，等价于yum -y install php</span></span><br><span class="line">salt <span class="string">'*'</span> pkg.install php</span><br><span class="line"></span><br><span class="line"><span class="comment">#卸载所有被控主机的PHP环境</span></span><br><span class="line">salt <span class="string">'*'</span> pkg.remove php</span><br><span class="line"></span><br><span class="line"><span class="comment">#升级所有被控主机的软件包</span></span><br><span class="line">salt <span class="string">'*'</span> pkg.upgrade</span><br></pre></td></tr></table></figure>
<p><strong>API调用：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.cmd(&apos;*&apos;,&apos;pkg.remove&apos;,[&apos;php&apos;])</span><br></pre></td></tr></table></figure>
<h5 id="status"><a href="#status" class="headerlink" title="status"></a>status</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt &apos;*&apos; status.version</span><br></pre></td></tr></table></figure>
<p>API</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> salt.client</span><br><span class="line">client = salt.client.LocalClient()</span><br><span class="line">client.cmd(<span class="string">'*'</span>,<span class="string">'status.uptime'</span>)</span><br></pre></td></tr></table></figure>
<h5 id="system"><a href="#system" class="headerlink" title="system"></a>system</h5><blockquote>
<p>  用来日常操作计算机</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">system.halt        <span class="comment">#停止正在运行的系统</span></span><br><span class="line">system.init 3      <span class="comment">#切换到字符界面，5是图形界面</span></span><br><span class="line">system.poweroff</span><br><span class="line">system.reboot</span><br><span class="line">system.shutdown</span><br></pre></td></tr></table></figure>
<h5 id="systemd-service"><a href="#systemd-service" class="headerlink" title="systemd(service)"></a>systemd(service)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">service.available sshd            #查看服务是否可用</span><br><span class="line">service.disable &lt;service name&gt;    #设置开机启动的服务</span><br><span class="line">service.enable &lt;service name&gt;</span><br><span class="line">service.disabled &lt;service name&gt;   #查看服务是不是开机启动</span><br><span class="line">service.enabled &lt;service name&gt;</span><br><span class="line">service.get_disabled              #返回所有关闭的服务</span><br><span class="line">service.get_enabled               #返回所有开启的服务</span><br><span class="line">service.get_all                   #返回所有服务</span><br><span class="line">service.reload &lt;service name&gt;     #重新载入指定的服务</span><br><span class="line">service.restart &lt;service name&gt;    #重启服务</span><br><span class="line">service.start &lt;service name&gt;</span><br><span class="line">service.stop &lt;service name&gt;</span><br><span class="line">service.status &lt;service name&gt;</span><br><span class="line">service.force_reload &lt;service name&gt;  #强制载入指定的服务</span><br></pre></td></tr></table></figure>
<p><strong>使用</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@mail python]<span class="comment"># salt '*' service.available sshdmonitor:    True</span></span><br><span class="line"></span><br><span class="line">api调用:</span><br><span class="line">&gt;&gt;&gt; client.cmd(<span class="string">'*'</span>,<span class="string">'service.available'</span>,[<span class="string">'sshd'</span>])&#123;<span class="string">'monitor'</span>: True&#125;</span><br></pre></td></tr></table></figure>
<h4 id="grains"><a href="#grains" class="headerlink" title="grains"></a>grains</h4><blockquote>
<p>  服务器的一些静态信息，强调的是静态，就是不会变的东西，比如说os是centos，不会变化，除非重新安装系统</p>
</blockquote>
<h5 id="grains的使用"><a href="#grains的使用" class="headerlink" title="grains的使用"></a>grains的使用</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询所有grains信息</span></span><br><span class="line">[root@master salt]<span class="comment"># salt 'minion-01' grains.items </span></span><br><span class="line">minion-01:</span><br><span class="line">    ----------</span><br><span class="line">    SSDs:</span><br><span class="line">    biosreleasedate:</span><br><span class="line">        09/21/2015</span><br><span class="line">    biosversion:</span><br><span class="line">        6.00</span><br><span class="line">    cpu_flags:</span><br><span class="line">        - fpu</span><br><span class="line">        - vme</span><br><span class="line">        - de</span><br><span class="line">.....</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询grains指定项</span></span><br><span class="line">[root@master salt]<span class="comment"># salt '*' grains.item os</span></span><br><span class="line">minion-02:</span><br><span class="line">    ----------</span><br><span class="line">    os:</span><br><span class="line">        CentOS</span><br><span class="line">minion-01:</span><br><span class="line">    ----------</span><br><span class="line">    os:</span><br><span class="line">        CentOS</span><br><span class="line">[root@master salt]<span class="comment"># </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@master salt]<span class="comment"># salt -G 'os:CentOS' test.ping</span></span><br><span class="line">minion-01:</span><br><span class="line">    True</span><br><span class="line"></span><br><span class="line"><span class="comment">#对系统是CentOS的服务器进行ping测试操作</span></span><br><span class="line"><span class="comment">#os:CentOS ; 就是对应上面grains.items显示出来的os值是CentOs的对象进行匹配 </span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment">#对cpu架构是x86_64的服务器显示CPU的个数</span></span><br><span class="line">salt -G <span class="string">'cpuarch:x86_64'</span> grains.item num_cpus</span><br><span class="line"> </span><br><span class="line"><span class="comment">#对字典值的对象进行匹配</span></span><br><span class="line">salt -G <span class="string">'ip_interfaces:eno16777728:192.168.2.*'</span> test.ping</span><br></pre></td></tr></table></figure>
<p><strong>在SLS中用grains</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在xxx.sls中使用grains</span></span><br><span class="line"><span class="string">'os:CentOS'</span>:</span><br><span class="line">    - match: grain</span><br><span class="line">    - webserver</span><br></pre></td></tr></table></figure>
<h5 id="自定义grains-两种方法"><a href="#自定义grains-两种方法" class="headerlink" title="自定义grains(两种方法)"></a>自定义grains(两种方法)</h5><p><strong>1 . minion端修改</strong>  重启生效</p>
<blockquote>
<p>  修改配置文件 /etc/salt/minion  或者写在/etc/salt/grains中</p>
<p>  打开 default_include: minion.d/*.conf   或者直接添加此命令 </p>
<p>  在minion端的/etc/salt/minion.d/ 目录下新建并编辑.conf后缀文件</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">grains: <span class="comment">#如果是/etc/salt/grains中,不需此行</span></span><br><span class="line">  roles:</span><br><span class="line">    - webserver</span><br><span class="line">  sex: boy  <span class="comment">#名字：值</span></span><br><span class="line">  age:      <span class="comment">#名字：多个值</span></span><br><span class="line">    - 33</span><br><span class="line">    - 44</span><br><span class="line"> <span class="comment"># 重启生效</span></span><br><span class="line">[root@master ~]<span class="comment"># salt 'minion-01' grains.item age</span></span><br><span class="line">minion-01:</span><br><span class="line">    ----------</span><br><span class="line">    age:</span><br><span class="line">        - 33</span><br><span class="line">        - 44</span><br><span class="line">[root@master ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p><strong>2 . minion端修改 </strong> 同步之后生效</p>
<blockquote>
<p>  base目录（在/etc/salt/master中配置的file_roots项，默认在/srv/salt）下生成<strong>_grains</strong> 目录,新建文件,用python来写</p>
</blockquote>
<p>编写文件,需要返回一个字典</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> vim test1.py</span><br><span class="line">def hello(): <span class="comment">##函数名字无所谓，应该是所有函数都会运行</span></span><br><span class="line">    agrain = &#123;&#125;</span><br><span class="line">    agrain[<span class="string">'hello'</span>] = <span class="string">'lzl'</span> </span><br><span class="line">    <span class="built_in">return</span> agrain   <span class="comment">##返回这个字典</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">========================</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line">import os</span><br><span class="line">def file():</span><br><span class="line">    grains=&#123;&#125;<span class="comment">#初始化一个字典，</span></span><br><span class="line">    file = os.popen(<span class="string">'ulimit -n'</span>).<span class="built_in">read</span>()</span><br><span class="line">    grains[<span class="string">'my_file'</span>]=file</span><br><span class="line">    <span class="built_in">return</span> grains</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意文件赋予权限</span></span><br><span class="line">chmod a+x .py</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#同步到各个minion中去</span></span><br><span class="line">salt <span class="string">'*'</span> saltutil.sync_all</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看</span></span><br><span class="line">[root/srv/salt/_grains] ]<span class="variable">$salt</span> <span class="string">'minion-01'</span> grains.item hello</span><br><span class="line">minion-01:</span><br><span class="line">    ----------</span><br><span class="line">    hello:</span><br><span class="line">        lzl</span><br></pre></td></tr></table></figure>
<h4 id="pillar"><a href="#pillar" class="headerlink" title="pillar"></a>pillar</h4><blockquote>
<p>  Pillar在salt中是非常重要的组成部分，利用它可以完成很强大的功能，它可以指定一些信息到指定的minion上，不像grains一样是分发到所有Minion上的，它保存的数据可以是动态的,Pillar以sls来写的，格式是键值</p>
<p>  适用</p>
<p>  1.比较敏感的数据，比如密码，key等</p>
<p>  2.特殊数据到特定Minion上</p>
<p>  3.动态的内容</p>
<p>  4.其他数据类型</p>
</blockquote>
<h5 id="pillar基本使用"><a href="#pillar基本使用" class="headerlink" title="pillar基本使用"></a>pillar基本使用</h5><p><strong>查看所有</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt &apos;*&apos; pillar.items</span><br></pre></td></tr></table></figure>
<p><strong>查看某个</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">salt <span class="string">'*'</span> pillar.item KEY</span><br><span class="line"><span class="comment">#可以取到更小粒度的</span></span><br><span class="line">salt <span class="string">'*'</span> pillar.get &lt;key&gt;:&lt;key&gt;</span><br></pre></td></tr></table></figure>
<h5 id="编写pillar"><a href="#编写pillar" class="headerlink" title="编写pillar"></a>编写pillar</h5><blockquote>
<p>  指定pillar_roots</p>
<p>  默认是/srv/pillar/(可通过修改master配置文件修改),建立目录</p>
</blockquote>
<p><strong>top.sls</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">base:           <span class="comment">#指定环境</span></span><br><span class="line">  <span class="string">'*'</span>:          <span class="comment">#target</span></span><br><span class="line">    - test1     <span class="comment">#引用test1.sls 或者test1/init.sls</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#通过分组名匹配，</span></span><br><span class="line">base:</span><br><span class="line">  group1:</span><br><span class="line">    - match: nodegroup    <span class="comment">#必须要有 - match: nodegroup  </span></span><br><span class="line">    - webserver  </span><br><span class="line"></span><br><span class="line"><span class="comment">#通过grain模块匹配的示例</span></span><br><span class="line">base:</span><br><span class="line">  <span class="string">'os:CentOS'</span>:</span><br><span class="line">    - match: grain   <span class="comment">#必须要有- match: grain</span></span><br><span class="line">    - webserver</span><br></pre></td></tr></table></figure>
<p><strong>test1.sls</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name: test1</span><br><span class="line">user: lzl</span><br></pre></td></tr></table></figure>
<p><strong>刷新</strong>  pillar数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt &apos;*&apos; saltutil.refresh_pillar</span><br></pre></td></tr></table></figure>
<p><strong>查看结果</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root/srv/pillar] ]<span class="variable">$salt</span> <span class="string">'minion-01'</span> pillar.items</span><br><span class="line">minion-01:</span><br><span class="line">    ----------</span><br><span class="line">    name:</span><br><span class="line">        test1</span><br><span class="line">    user:</span><br><span class="line">        lzl</span><br><span class="line">[root/srv/pillar] ]$</span><br></pre></td></tr></table></figure>
<h4 id="在state中通过jinja使用pillar"><a href="#在state中通过jinja使用pillar" class="headerlink" title="在state中通过jinja使用pillar"></a>在state中通过jinja使用pillar</h4><p>默认state文件位置/src/salt/</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user.sls</span><br><span class="line"></span><br><span class="line">&#123;% <span class="keyword">for</span> user, uid <span class="keyword">in</span> pillar.get(<span class="string">'users'</span>, &#123;&#125;).items() %&#125;  </span><br><span class="line"> <span class="comment">##pillar.get('users',&#123;&#125;)可用pillar['users']代替，前者在没有得到值的情况下，赋默认值</span></span><br><span class="line">&#123;&#123;user&#125;&#125;:</span><br><span class="line">  user.present:</span><br><span class="line">    - uid: &#123;&#123;uid&#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="jinja配合grains-指定pillar数据"><a href="#jinja配合grains-指定pillar数据" class="headerlink" title="jinja配合grains 指定pillar数据"></a>jinja配合grains 指定pillar数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> grains[<span class="string">'os_family'</span>] == <span class="string">'RedHat'</span> %&#125;</span><br><span class="line">apache: httpd</span><br><span class="line">&#123;% <span class="keyword">elif</span> grains[<span class="string">'os'</span>] == <span class="string">'CentOS'</span> %&#125;</span><br><span class="line">apache: httpd</span><br><span class="line">vim: vim</span><br><span class="line">&#123;% <span class="keyword">elif</span> grains[<span class="string">'os'</span>] == <span class="string">'Arch'</span> %&#125;</span><br><span class="line">apache: apache</span><br><span class="line">vim: vim</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="使用salt-state"><a href="#使用salt-state" class="headerlink" title="使用salt state"></a>使用salt state</h4><blockquote>
<p>  它的核心是写sls(SaLt State file)文件,sls文件默认格式是YAML格式，并默认使用jinja模板，jinja是根据django的模板语言发展而来的语言，简单并强大，支持for if 等循环判断。salt state主要用来描述系统，软性，服务，配置文件的状态，常常被称为配置管理！</p>
<p>  通常state，pillar,top file会用sls文件来编写。state文件默认是放在/srv/salt中，它与你的master配置文件中的file_roots设置有关</p>
</blockquote>
<h5 id="简单的state文件配置-amp-介绍"><a href="#简单的state文件配置-amp-介绍" class="headerlink" title="简单的state文件配置&amp;介绍"></a>简单的state文件配置&amp;介绍</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/srv/salt/apahce.sls</span></span><br><span class="line"></span><br><span class="line">apache:           <span class="comment">##state ID，全文件唯一,如果模块没跟-name默认用的ID作为-name</span></span><br><span class="line"> pkg:             <span class="comment">##模块</span></span><br><span class="line">   <span class="comment">#- name: apache ##函数参数，可以省略</span></span><br><span class="line">   - installed    <span class="comment">##函数</span></span><br><span class="line"> service:         <span class="comment">##模块</span></span><br><span class="line">   - running      <span class="comment">##函数</span></span><br><span class="line">  <span class="comment">#- name: apache ##函数参数，这个是省略的，也可以写上</span></span><br><span class="line">   - require:     <span class="comment">##依赖系统</span></span><br><span class="line">     - pkg: apache  <span class="comment">##表示依赖id为apache的pkg状态</span></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line"><span class="comment">#声明一个叫apache的状态id,该id可以随意，最好能表示一定意思</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pkg代表的是pkg模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#installed是pkg模块下的一个函数，描述的是状态，该函数表示apache是否部署，返回值为True或者False，为真时，表示状态OK，否则会去满足该状态(下载安装apache)，如果满足不了会提示error,在该模块上面省略了参数-name: apache,因为ID为apache,这些参数是模块函数需要的（可以去查看源码）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#service是指的service模块</span></span><br><span class="line"><span class="comment">#这个模块下主要是描述service状态的函数，running状态函数表示apache在运行，省略-name不在表述，-require表示依赖系统，依赖系统是state system的重要组成部分，在该处描述了apache服务的运行需要依赖apache软件的部署，这里就要牵涉到sls文件的执行，sls文件在salt中执行时无序(如果没有指定顺序，后面会讲到order)，假如先执行了service这个状态，它发现依赖pkg包的安装，会去先验证pkg的状态有没有满足，如果没有依赖关系的话，我们可以想象，如果没有安装apache，apache 的service肯定运行会失败的，我们来看看怎么执行这个sls文件:</span></span><br><span class="line">     </span><br><span class="line">salt <span class="string">'*'</span> state.sls apache  </span><br><span class="line"></span><br><span class="line"><span class="comment">#在命令行里这样执行，.sls不写，如果在目录下，将目录与文件用’.’隔开，</span></span><br><span class="line"><span class="comment">#如： httpd/apache.sls –&gt; httpd.apache</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">salt <span class="string">'*'</span> state.highstate </span><br><span class="line"><span class="comment">#前提是存在top.sls 去指定minion运行的是哪个文件</span></span><br><span class="line"><span class="comment">#top.sls</span></span><br><span class="line">base:</span><br><span class="line">  <span class="string">'*'</span>:</span><br><span class="line">    - webserver</span><br></pre></td></tr></table></figure>
<blockquote>
<p>  state.sls默认的运行环境是base环境，但是它并不读取top.sls（top.sls定义了运行环境以及需要运行的sls）</p>
<p>  state.sls也可以指定读取哪个环境：state.sls  salt_env=’prod’ xxxx.sls，这个xxxx.sls可以不在top.sls中记录。</p>
<p>  state.highstate: 这个是全局的所有环境，以及所有状态都生效。它会读取每一个环境的top.sls，并且对所有sls都生效。不在top.sls文件里面记录的sls则不会被执行；</p>
</blockquote>
<p>阅读后写的版本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">webserver:</span><br><span class="line">  pkg:</span><br><span class="line">    - name: httpd</span><br><span class="line">    - installed</span><br><span class="line">  service:</span><br><span class="line">    - name: httpd</span><br><span class="line">    - running</span><br><span class="line">    - reqire:</span><br><span class="line">      -pkg: httpd</span><br><span class="line"></span><br><span class="line">[root/srv/salt] ]<span class="variable">$salt</span> <span class="string">'minion-02'</span> state.sls webserver</span><br><span class="line">minion-02:</span><br><span class="line">----------</span><br><span class="line">          ID: webserver</span><br><span class="line">    Function: pkg.installed</span><br><span class="line">        Name: httpd</span><br><span class="line">      Result: True</span><br><span class="line">     Comment: The following packages were installed/updated: httpd</span><br><span class="line">     Started: 18:24:07.033564</span><br><span class="line">    Duration: 65091.443 ms</span><br><span class="line">     Changes:   </span><br><span class="line">              ----------</span><br><span class="line">              httpd:</span><br><span class="line">                  ----------</span><br><span class="line">                  new:</span><br><span class="line">                      2.4.6-45.el7.centos</span><br><span class="line">                  old:</span><br><span class="line">              httpd-tools:</span><br><span class="line">                  ----------</span><br><span class="line">                  new:</span><br><span class="line">                      2.4.6-45.el7.centos</span><br><span class="line">                  old:</span><br><span class="line">              mailcap:</span><br><span class="line">                  ----------</span><br><span class="line">                  new:</span><br><span class="line">                      2.1.41-2.el7</span><br><span class="line">                  old:</span><br><span class="line">----------</span><br><span class="line">          ID: webserver</span><br><span class="line">    Function: service.running</span><br><span class="line">        Name: httpd</span><br><span class="line">      Result: True</span><br><span class="line">     Comment: Started Service httpd</span><br><span class="line">     Started: 18:25:12.142495</span><br><span class="line">    Duration: 5599.171 ms</span><br><span class="line">     Changes:   </span><br><span class="line">              ----------</span><br><span class="line">              httpd:</span><br><span class="line">                  True</span><br><span class="line"></span><br><span class="line">Summary</span><br><span class="line">------------</span><br><span class="line">Succeeded: 2 (changed=2)</span><br><span class="line">Failed:    0</span><br><span class="line">------------</span><br><span class="line">Total states run:     2</span><br><span class="line">[root/srv/salt] ]$</span><br></pre></td></tr></table></figure>
<h5 id="较复杂的state"><a href="#较复杂的state" class="headerlink" title="较复杂的state"></a>较复杂的state</h5><p><strong>/srv/salt/ssh/init.sls</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">openssh-client:</span><br><span class="line">  pkg.installed</span><br><span class="line">/etc/ssh/ssh_config:</span><br><span class="line">  file.managed:</span><br><span class="line">    - user: root</span><br><span class="line">    - group: root</span><br><span class="line">    - mode: 644</span><br><span class="line">    - <span class="built_in">source</span>: salt://ssh/ssh_config</span><br><span class="line">    - require:</span><br><span class="line">      - pkg: openssh-client</span><br><span class="line"><span class="comment">#ssh/init.sls 意思是当执行 salt '*' state.sls ssh的时候其实就是执行init.sls</span></span><br><span class="line"><span class="comment">#第一行:文件名,全文件唯一,如果pkg等模块没跟- name 包名, 默认用的ID作为-name</span></span><br><span class="line"><span class="comment">#第二行: 简写,意思pkg下的installed函数</span></span><br><span class="line"><span class="comment">#第三行: ID 告诉minion下载的文件应该放哪里!</span></span><br><span class="line"><span class="comment">#第四行:简写</span></span><br><span class="line"><span class="comment">#第八行:source是告诉minion从哪里下载源文件!</span></span><br><span class="line"><span class="comment">#salt://ssh/ssh_config其实就是/srv/salt/ssh/ssh_config 前面/srv/salt这个路径和file_roots的配置有关</span></span><br></pre></td></tr></table></figure>
<p><strong>/srv/salt/ssh/server.sls</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">include:</span><br><span class="line">  - ssh</span><br><span class="line"><span class="comment">#include表示包含意思，就是把ssh/init.sls直接包含进来</span></span><br><span class="line"></span><br><span class="line">openssh-server:</span><br><span class="line"> pkg.installed</span><br><span class="line"></span><br><span class="line">sshd:</span><br><span class="line">  service.running:</span><br><span class="line">    - require:</span><br><span class="line">      - pkg: openssh-client</span><br><span class="line">      - pkg: openssh-server</span><br><span class="line">      - file: /etc/ssh/banner</span><br><span class="line">      - file: /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line">/etc/ssh/sshd_config:</span><br><span class="line">  file.managed:</span><br><span class="line">    - user: root</span><br><span class="line">    - group: root</span><br><span class="line">    - mode: 644</span><br><span class="line">    - <span class="built_in">source</span>: salt://ssh/sshd_config</span><br><span class="line">    - require:</span><br><span class="line">      - pkg: openssh-server</span><br><span class="line">/etc/ssh/banner:</span><br><span class="line">  file:</span><br><span class="line">    - managed</span><br><span class="line">    - user: root</span><br><span class="line">    - group: root</span><br><span class="line">    - mode: 644</span><br><span class="line">    - <span class="built_in">source</span>: salt://ssh/banner</span><br><span class="line">    - require:</span><br><span class="line">      - pkg: openssh-server</span><br></pre></td></tr></table></figure>
<blockquote>
<p>  此时的目录结构应该是</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">├── ssh</span><br><span class="line">│   ├── banner</span><br><span class="line">│   ├── init.sls</span><br><span class="line">│   ├── server.sls</span><br><span class="line">│   ├── ssh_config</span><br><span class="line">│   └── sshd_config</span><br></pre></td></tr></table></figure>
<p><strong>关于include</strong>古官网的demo</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">include:</span><br><span class="line">  - ssh.server</span><br><span class="line">extend:</span><br><span class="line">  /etc/ssh/banner:</span><br><span class="line">    file:</span><br><span class="line">      - <span class="built_in">source</span>: salt://ssh/custom-banner</span><br><span class="line"> </span><br><span class="line"><span class="comment">#包含ssh/server.sls,扩展/etc/ssh/banner，重新其source而其它的如user,group等不变，与include一致。</span></span><br><span class="line"></span><br><span class="line">include:</span><br><span class="line">  - apache</span><br><span class="line">extend:</span><br><span class="line">  apache:</span><br><span class="line">  service:</span><br><span class="line">    - watch:</span><br><span class="line">      - pkg: mod_python</span><br><span class="line"><span class="comment">#把apache.sls包含进来，想apache-service是追加了依赖关系(watch也是依赖系统的函数).</span></span><br></pre></td></tr></table></figure>
<h4 id="关于渲染器-render-system"><a href="#关于渲染器-render-system" class="headerlink" title="关于渲染器 render system"></a>关于渲染器 render system</h4><blockquote>
<p>  salt默认是用的yaml_jinja渲染器处理ss文件,会优先使用jinjia处理,然后传给yaml处理然后生成salt需要的python数据类型.</p>
</blockquote>
<p><strong>apache/init.sls</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">apache:</span><br><span class="line">  pkg:installed:</span><br><span class="line">    &#123;% <span class="keyword">if</span> grains[<span class="string">'os'</span>] == <span class="string">'CentoOS'</span> %&#125;</span><br><span class="line">    - name: httpd</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  service.running:</span><br><span class="line">    &#123;% <span class="keyword">if</span> grains[<span class="string">'os'</span>] == <span class="string">'CentoOS'</span> %&#125;</span><br><span class="line">    - name: httpd</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    - watch:</span><br><span class="line">      - pkg: apache</span><br><span class="line">      </span><br><span class="line"><span class="comment">#简单的例子,使用jinja结合grains进行判断</span></span><br></pre></td></tr></table></figure>
<p><strong>user/init.sls</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="built_in">set</span> users = [<span class="string">'jerry'</span>,<span class="string">'tom'</span>,<span class="string">'gaga'</span>] %&#125;</span><br><span class="line">&#123;% <span class="keyword">for</span> user <span class="keyword">in</span> users %&#125;</span><br><span class="line">&#123;&#123; user &#125;&#125;:</span><br><span class="line"> user.present:</span><br><span class="line">   - shell: /bin/bash</span><br><span class="line">   - home: /home/&#123;&#123; user &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">---------------------------</span><br><span class="line"></span><br><span class="line">&#123;% <span class="keyword">if</span> salt[<span class="string">'cmd.run'</span>](<span class="string">'uname -i'</span>) == <span class="string">'x86_64'</span> %&#125;</span><br><span class="line">hadoop:</span><br><span class="line"> user.present:</span><br><span class="line">   - shell: /bin/bash</span><br><span class="line">   - home: /home/hadoop</span><br><span class="line">&#123;% <span class="keyword">elif</span> salt[<span class="string">'cmd.run'</span>](<span class="string">'uname -i'</span>) == <span class="string">'i386'</span> %&#125;</span><br><span class="line">openstack:</span><br><span class="line"> user.present:</span><br><span class="line">   - shell: /bin/bash</span><br><span class="line">- home: /home/openstack</span><br><span class="line">&#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">django:</span><br><span class="line"> user.present:</span><br><span class="line">   - shell: /sbin/nologin</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<h4 id="py渲染器"><a href="#py渲染器" class="headerlink" title="py渲染器"></a>py渲染器</h4><blockquote>
<p>  纯python写的sls文件.如果使用其他的渲染器,需要在文件开头声明,!py就是声明用的py渲染器,</p>
<p>   py中可用的变量有<strong>salt</strong>,<strong>grains</strong>,<strong>pillar</strong>,<strong>opts</strong>,<strong>env</strong>,<strong>sls</strong>,前三个分别对应jinja里的salt,grains,pillar,<strong>opts</strong>是minion的配置文件的字典，<strong>env</strong>对应的是环境如base,<strong>sls</strong>对应的是sls的文件名</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></span><br><span class="line">   <span class="string">'''add user hadoop'''</span></span><br><span class="line">platform = os.popen(<span class="string">'uname -a'</span>).read().strip()</span><br><span class="line"><span class="keyword">if</span> platform == <span class="string">'x86_64'</span>:</span><br><span class="line">   <span class="keyword">return</span> &#123;<span class="string">'hadoop'</span>: &#123;<span class="string">'user'</span>: [<span class="string">'present'</span>,&#123;<span class="string">'shell'</span>: <span class="string">'/bin/bash'</span>&#125;, &#123;<span class="string">'home'</span>: <span class="string">'/home/hadoop'</span>&#125;]&#125;&#125;</span><br><span class="line"><span class="keyword">elif</span> platform == <span class="string">'i386'</span>:</span><br><span class="line">       <span class="keyword">return</span> &#123;<span class="string">'openstack'</span>: &#123;<span class="string">'user'</span>: [<span class="string">'present'</span>, &#123;<span class="string">'shell'</span>: <span class="string">'/bin/bash'</span>&#125;, &#123;<span class="string">'home'</span>: <span class="string">'/home/openstack'</span>&#125;]&#125;&#125;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="keyword">return</span> &#123;<span class="string">'django'</span>: &#123;<span class="string">'user'</span>: [<span class="string">'present'</span>, &#123;<span class="string">'shell'</span>: <span class="string">'/sbin/nologin'</span>&#125;]&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意的是return的数据结构&#123;ID: &#123;module: [func, arg1,arg2,...,]&#125;&#125; 或 &#123;ID: &#123;module.func: [arg1,arg2,..,]&#125;&#125; 。表示的内容与“示例；salt字典”表达的相同</span></span><br></pre></td></tr></table></figure>
<h4 id="state的执行顺序"><a href="#state的执行顺序" class="headerlink" title="state的执行顺序"></a>state的执行顺序</h4><blockquote>
<p>  stata执行,也就是.sls文件的执行是无序的.为了保证每次的顺序是一致的,就加入了state order ,</p>
<p>  先了解下高级数据(High Data)和低级数据(Low Data).</p>
<p>  高级数据就是指编写的sls文件的数据</p>
<p>  低级数据就是经过render和parser编译过的数据</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">[root~] ]<span class="variable">$salt</span> <span class="string">'minion-01'</span> state.show_highstate</span><br><span class="line">minion-01:</span><br><span class="line">    ----------</span><br><span class="line">    webserver:</span><br><span class="line">        ----------</span><br><span class="line">        __env__:</span><br><span class="line">            base</span><br><span class="line">        __sls__:</span><br><span class="line">            webserver</span><br><span class="line">        pkg:</span><br><span class="line">            |_</span><br><span class="line">              ----------</span><br><span class="line">              name:</span><br><span class="line">                  httpd</span><br><span class="line">            - installed</span><br><span class="line">            |_</span><br><span class="line">              ----------</span><br><span class="line">              order:</span><br><span class="line">                  10000</span><br><span class="line">        service:</span><br><span class="line">            |_</span><br><span class="line">              ----------</span><br><span class="line">              name:</span><br><span class="line">                  httpd</span><br><span class="line">            - running</span><br><span class="line">            |_</span><br><span class="line">              ----------</span><br><span class="line">              -pkg:</span><br><span class="line">                  httpd</span><br><span class="line">              reqire:</span><br><span class="line">                  None</span><br><span class="line">            |_</span><br><span class="line">              ----------</span><br><span class="line">              order:</span><br><span class="line">                  10001</span><br><span class="line">[root~] ]<span class="variable">$salt</span> <span class="string">'minion-01'</span> state.show_lowstate</span><br><span class="line">minion-01:</span><br><span class="line">    |_</span><br><span class="line">      ----------</span><br><span class="line">      __env__:</span><br><span class="line">          base</span><br><span class="line">      __id__:</span><br><span class="line">          webserver</span><br><span class="line">      __sls__:</span><br><span class="line">          webserver</span><br><span class="line">      fun:</span><br><span class="line">          installed</span><br><span class="line">      name:</span><br><span class="line">          httpd</span><br><span class="line">      order:</span><br><span class="line">          10000</span><br><span class="line">      state:</span><br><span class="line">          pkg</span><br><span class="line">    |_</span><br><span class="line">      ----------</span><br><span class="line">      -pkg:</span><br><span class="line">          httpd</span><br><span class="line">      __env__:</span><br><span class="line">          base</span><br><span class="line">      __id__:</span><br><span class="line">          webserver</span><br><span class="line">      __sls__:</span><br><span class="line">          webserver</span><br><span class="line">      fun:</span><br><span class="line">          running</span><br><span class="line">      name:</span><br><span class="line">          httpd</span><br><span class="line">      order:</span><br><span class="line">          10001</span><br><span class="line">      reqire:</span><br><span class="line">          None</span><br><span class="line">      state:</span><br><span class="line">          service</span><br><span class="line">[root~] ]$</span><br></pre></td></tr></table></figure>
<blockquote>
<p>  查看可知,里面有个order,这个是默认salt 会自动设置,从10000开始.可通过修改master <code>state_auto_order: False</code>来关闭</p>
</blockquote>
<h4 id="order的设定"><a href="#order的设定" class="headerlink" title="order的设定"></a>order的设定</h4><ul>
<li>include</li>
</ul>
<blockquote>
<p>  被include的文件Order靠前,先执行</p>
</blockquote>
<ul>
<li>手动定义order</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">httpd:</span><br><span class="line">  pkg:</span><br><span class="line">    - installed</span><br><span class="line">    - order: 1</span><br><span class="line">#order的值越小,优先级越高.但是-1 是最后!</span><br></pre></td></tr></table></figure>
<ul>
<li>依赖关系系统</li>
</ul>
<p>就是前面使用过的 - require </p>
<h4 id="依赖关系系统-requisite-system"><a href="#依赖关系系统-requisite-system" class="headerlink" title="依赖关系系统 requisite system"></a>依赖关系系统 requisite system</h4><blockquote>
<p>  我们已经使用过依赖关系系统了,就是定义状态和状态之间的依赖关系,常用的函数有 <code>require</code>和<code>watch</code> 以及他们的变种<code>require_in</code>和<code>watch-in</code></p>
<p>  四者有何区别?</p>
<p>  require,watch是指依赖，require_in,watch_in是指被依赖</p>
<p>  watch 常用于service,而且当依赖条件发生变化的时候会执行一些动作</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/etc/httpd/httpd.conf:</span><br><span class="line">  file:</span><br><span class="line">    - managed</span><br><span class="line">    - <span class="built_in">source</span>: salt://httpd/httpd.conf</span><br><span class="line">  pkg.installed</span><br><span class="line">  service:</span><br><span class="line">    - running</span><br><span class="line">    - require:</span><br><span class="line">      - pkg: httpd</span><br><span class="line">    - watch:</span><br><span class="line">      - file://etc/httpd/httpd.conf <span class="comment">#当httpd.conf改变时，重启httpd服务</span></span><br><span class="line">    </span><br><span class="line">============================    </span><br><span class="line"></span><br><span class="line">/etc/httpd/httpd.conf:</span><br><span class="line">  file:</span><br><span class="line">    - managed</span><br><span class="line">    - <span class="built_in">source</span>: salt://httpd/httpd.conf   </span><br><span class="line">    - watch_in:</span><br><span class="line">      - service: httpd</span><br><span class="line">  httpd:</span><br><span class="line">    pkg:</span><br><span class="line">      - installed</span><br><span class="line">      - require_in:</span><br><span class="line">        - service: httpd</span><br><span class="line">    service:</span><br><span class="line">      - running</span><br></pre></td></tr></table></figure>
<h4 id="salt-state多环境"><a href="#salt-state多环境" class="headerlink" title="salt state多环境"></a>salt state多环境</h4><blockquote>
<p>  针对不同的环境,应用不同state的file,比如开发,测试,生产等.</p>
<p>  通过修改master对不同的环境应用不通过的目录</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#官方demo</span></span><br><span class="line">Example:</span><br><span class="line">  file_roots:</span><br><span class="line">    base:</span><br><span class="line">      - /srv/salt/</span><br><span class="line">    dev:</span><br><span class="line">      - /srv/salt/dev/services</span><br><span class="line">      - /srv/salt/dev/states</span><br><span class="line">    prod:</span><br><span class="line">      - /srv/salt/prod/services</span><br><span class="line">      - /srv/salt/prod/states</span><br><span class="line"><span class="comment">#file_roots 配置salt配置的存放目录, 其中base环境是必要的, 指定top.sls存放的位置.</span></span><br><span class="line"><span class="comment">#默认没指定环境时则从base目录获取文件</span></span><br><span class="line"><span class="comment">#其它则是一些自定义的, 可以通过环境变量指定.</span></span><br><span class="line"><span class="comment">#这样可以逻辑上隔离一些环境配置.</span></span><br><span class="line"><span class="comment">#每一个环境都可以定义多个目录, 优先级关系由定义目录的顺序决定.</span></span><br><span class="line">file_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /srv/salt/foo</span><br><span class="line">    - /srv/salt/bar</span><br><span class="line"><span class="comment">#如果寻找 salt://file.sls, 如果都存在/srv/salt/foo/file.sls和/srv/salt/bar/file.sls, 则使用第一个找到的.</span></span><br></pre></td></tr></table></figure>
<p>另一个例子</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">file_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /srv/salt/prod</span><br><span class="line">  qa:</span><br><span class="line">    - /srv/salt/qa</span><br><span class="line">    - /srv/salt/prod</span><br><span class="line">  dev:</span><br><span class="line">    - /srv/salt/dev</span><br><span class="line">    - /srv/salt/qa</span><br><span class="line">    - /srv/salt/prod</span><br><span class="line"><span class="comment">#/srv/salt/prod 里的配置是在三种环境下都可以, /srv/salt/qa 只在qa和dev环境下可用, /srv/salt/dev则只在dev环境下可用.</span></span><br></pre></td></tr></table></figure>
<p>简答你的实施案例</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#master配置</span></span><br><span class="line">file_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /home/base/</span><br><span class="line">  dev:</span><br><span class="line">    - /home/dev/</span><br><span class="line">    - /home/base/</span><br><span class="line">    </span><br><span class="line"><span class="comment">#base环境   </span></span><br><span class="line"><span class="comment">#/home/base</span></span><br><span class="line">├── envtest.sls</span><br><span class="line">└── top.sls</span><br><span class="line"></span><br><span class="line"><span class="comment">#cat /home/base/envtest.sls</span></span><br><span class="line">envtest:</span><br><span class="line">  cmd.run:</span><br><span class="line">    - name: <span class="string">"echo '[base] env'"</span>    </span><br><span class="line"></span><br><span class="line"><span class="comment">#dev环境</span></span><br><span class="line"><span class="comment">#/home/dev/</span></span><br><span class="line">├── mytest.sls</span><br><span class="line">└── top.sls</span><br><span class="line"></span><br><span class="line"><span class="comment">#cat /home/dev/mytest.sls</span></span><br><span class="line">envtest:</span><br><span class="line">  cmd.run:</span><br><span class="line">    - name: <span class="string">"echo '[dev] env'"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##执行效果如下,如果不添加环境变量,则提示找不到文件</span></span><br><span class="line">[root/srv/salt/dev] ]<span class="variable">$salt</span> <span class="string">'minion-01'</span> state.sls mytest  <span class="built_in">test</span>=True</span><br><span class="line">minion-01:</span><br><span class="line">    Data failed to compile:</span><br><span class="line">----------</span><br><span class="line">    No matching sls found <span class="keyword">for</span> <span class="string">'mytest'</span> <span class="keyword">in</span> env <span class="string">'base'</span></span><br><span class="line">ERROR: Minions returned with non-zero <span class="built_in">exit</span> code</span><br><span class="line"></span><br><span class="line"><span class="comment">#加上环境变量执行</span></span><br><span class="line">[root/srv/salt/dev] ]<span class="variable">$salt</span> <span class="string">'minion-01'</span> state.sls mytest saltenv=<span class="string">'dev'</span> <span class="built_in">test</span>=True</span><br><span class="line">minion-01:</span><br><span class="line">----------</span><br><span class="line">          ID: mytest</span><br><span class="line">    Function: cmd.run</span><br><span class="line">        Name: <span class="built_in">echo</span> dev-env</span><br><span class="line">      Result: None</span><br><span class="line">     Comment: Command <span class="string">"echo dev-env"</span> would have been executed</span><br><span class="line">     Started: 23:54:46.298421</span><br><span class="line">    Duration: 0.422 ms</span><br><span class="line">     Changes:   </span><br><span class="line"></span><br><span class="line">Summary</span><br><span class="line">------------</span><br><span class="line">Succeeded: 1 (unchanged=1)</span><br><span class="line">Failed:    0</span><br><span class="line">------------</span><br><span class="line">Total states run:     1</span><br><span class="line">[root/srv/salt/dev] ]$</span><br></pre></td></tr></table></figure>
<h4 id="salt-schedule-salt中的crontab"><a href="#salt-schedule-salt中的crontab" class="headerlink" title="salt schedule(salt中的crontab)"></a>salt schedule(salt中的crontab)</h4><blockquote>
<p>  周期性的执行一些函数,需要注意的是: 在minion上执行salt可执行模块里的函数,在master执行的是runner模块的函数.</p>
<p>  共有三种方式:master minion  pillar</p>
</blockquote>
<ul>
<li>master端</li>
<li>minion端</li>
<li>pillar</li>
</ul>
<blockquote>
<p>  一般而言,尤其是在minion端配置,基本不会用到的,主要还是一pillar为主</p>
</blockquote>
<p><strong>修改top.sls</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加</span></span><br><span class="line">  - schedule</span><br></pre></td></tr></table></figure>
<p><strong>/srv/pillar/schedule.sls</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">schedule:</span><br><span class="line">  <span class="built_in">test</span>-job:</span><br><span class="line">    <span class="keyword">function</span>: cmd.run</span><br><span class="line">    seconds: 10</span><br><span class="line">    args:</span><br><span class="line">      - <span class="string">'date &gt;&gt; /date.log'</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">#没隔10S 在/目录的date.log文件中记录一条时间</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">salt <span class="string">"*"</span> saltutil.refresh_pillar</span><br><span class="line"><span class="comment">#刷新pillar到minion</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#回到minion 可以查看到</span></span><br><span class="line">[root@minion-01 /]<span class="comment"># ls</span></span><br><span class="line">bin  boot  date.log  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</span><br><span class="line">[root@minion-01 /]<span class="comment"># cat date.log </span></span><br><span class="line">Fri Mar 24 02:27:40 CST 2017</span><br><span class="line">Fri Mar 24 02:27:50 CST 2017</span><br><span class="line">Fri Mar 24 02:28:00 CST 2017</span><br><span class="line">....</span><br></pre></td></tr></table></figure>
<h4 id="salt-ssh"><a href="#salt-ssh" class="headerlink" title="salt ssh"></a>salt ssh</h4><blockquote>
<p>  salt-ssh 是 0.17.0 新出现的一个功能.对于有些不能安装minion的机器,ssh不失为一种好的选择但是SSH并不能取代minion,salt的有些功能不支持ssh.而且走的是SSH 并不是ZeroMQ,所以速度会有所影响</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#首先安装salt-ssh.</span></span><br><span class="line">yum -y install salt-ssh</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root~] ]<span class="variable">$cat</span> /etc/salt/roster <span class="comment">#roster文件名和路径!</span></span><br><span class="line">minion-01:</span><br><span class="line">  host: 192.168.247.153</span><br><span class="line">  user: root</span><br><span class="line">  passwd: centos</span><br><span class="line">minion-02:</span><br><span class="line">  host: 192.168.247.154</span><br><span class="line">  user: root</span><br><span class="line">  passwd: centos</span><br><span class="line">  sudo: True</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果不给passwd的话,执行salt-ssh会提示输入密码</span></span><br><span class="line"><span class="comment">#普通用户给sudo权限</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一次使用记得加参数 -i 否则报错如下</span></span><br><span class="line">[root~] ]<span class="variable">$salt</span>-ssh <span class="string">'minion-01'</span> test.ping</span><br><span class="line">minion-01:</span><br><span class="line">    ----------</span><br><span class="line">    retcode:</span><br><span class="line">        254</span><br><span class="line">    stderr:</span><br><span class="line">    stdout:</span><br><span class="line">        The host key needs to be accepted, to auto accept run salt-ssh with the -i flag:</span><br><span class="line">        The authenticity of host <span class="string">'192.168.247.153 (192.168.247.153)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">        ECDSA key fingerprint is 16:f6:f5:49:24:9c:91:da:d7:02:58:a2:14:08:e4:15.</span></span><br><span class="line"><span class="string">        Are you sure you want to continue connecting (yes/no)? </span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">#第一次运行 添加-i参数</span></span><br><span class="line"><span class="string">[root~] ]$salt-ssh '</span>minion-01<span class="string">' test.ping -i</span></span><br><span class="line"><span class="string">minion-01:</span></span><br><span class="line"><span class="string">    True</span></span><br><span class="line"><span class="string">[root~] ]$salt-ssh '</span>minion-01<span class="string">' test.ping</span></span><br><span class="line"><span class="string">minion-01:</span></span><br><span class="line"><span class="string">    True</span></span><br><span class="line"><span class="string">[root~] ]$</span></span><br></pre></td></tr></table></figure>
<h4 id="Returners"><a href="#Returners" class="headerlink" title="Returners"></a>Returners</h4><p>略</p>
<h4 id="扩展salt"><a href="#扩展salt" class="headerlink" title="扩展salt"></a>扩展salt</h4><p>略</p>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> 自动化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> saltstack </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux文件共享]]></title>
      <url>/2017/03/25/linux%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/</url>
      <content type="html"><![CDATA[<blockquote>
<p>文章包括NFS和samba</p>
</blockquote>
<a id="more"></a>
<h4 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h4><h5 id="安装相关服务"><a href="#安装相关服务" class="headerlink" title="安装相关服务"></a>安装相关服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nfs-utils rpcbind</span><br></pre></td></tr></table></figure>
<h5 id="创建共享文件夹"><a href="#创建共享文件夹" class="headerlink" title="创建共享文件夹"></a>创建共享文件夹</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /nfs_share/share-one</span><br><span class="line">mkdir -p /nfs_share/share-two</span><br></pre></td></tr></table></figure>
<h5 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h5><p><code>vi /etc/exports</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有的IP都可访问</span></span><br><span class="line">/nfs_share/share-one *(rw,async,no_root_squash)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 某网段/IP可访问</span></span><br><span class="line">/nfs_share/share-two 192.168.1.0/24(rw,async,no_root_squash)</span><br></pre></td></tr></table></figure></p>
<p>然后输入<code>exportfs -r</code>重新共享所有目录</p>
<p>配置文件还是要解释下:<br><code>rw</code>:read-write，可读写<br><code>ro</code>:read-only，只读<br><code>sync</code>:文件同时写入硬盘和内存<br><code>async</code>:文件暂存于内存，而不是直接写入内存<br><code>no_root_squash</code>:NFS客户端连接服务端时如果使用的是root的话，那么对服务端分享的目录来说，也拥有root权限。显然开启这项是不安全的<br><code>root_squash</code>:NFS客户端连接服务端时如果使用的是root的话，那么对服务端分享的目录来说，权限降低至拥有匿名用户权限，通常他将使用nobody或nfsnobody身份<br><code>all_squash</code>:不论NFS客户端连接服务端时使用什么用户，对服务端分享的目录来说都是匿名用户权限；</p>
<h5 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service rpcbind start  #这个先启动</span><br><span class="line">service nfs start</span><br><span class="line">chkconfig rpcbind on</span><br><span class="line">chkconfig nfs on</span><br></pre></td></tr></table></figure>
<h5 id="客户端挂载"><a href="#客户端挂载" class="headerlink" title="客户端挂载"></a>客户端挂载</h5><p>同服务器,安装服务创建挂载目录并开启服务,然后<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看共享目录</span></span><br><span class="line">showmount -e server_ip</span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载</span></span><br><span class="line">mount -t nfs 192.168.1.123:/nfs_share/share-two /mnt</span><br><span class="line"><span class="comment">#如果网络不稳,换成tcp协议挂载,默认使用udp</span></span><br><span class="line">mount -t nfs 192.168.1.123:/nfs_share/share-two /mnt -o proto=tcp -o nolock</span><br></pre></td></tr></table></figure></p>
<h5 id="开机自动挂载"><a href="#开机自动挂载" class="headerlink" title="开机自动挂载"></a>开机自动挂载</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/fstab</span><br><span class="line"></span><br><span class="line">server_ip:/nfs_share/share-two /mnt nfs default 0 0</span><br></pre></td></tr></table></figure>
<h4 id="samba"><a href="#samba" class="headerlink" title="samba"></a>samba</h4><h5 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h5><p>yum -y install samba samba-client samba-common</p>
<h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><p>vim /etc/samba/smb.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[smbshare]  <span class="comment">#命名</span></span><br><span class="line">comment = samba share <span class="comment">#注释</span></span><br><span class="line">path    = /smbshare <span class="comment">#路径</span></span><br><span class="line"><span class="built_in">read</span> list = harry <span class="comment">#可读用户</span></span><br><span class="line"><span class="comment">#这里也可以用组来表示 read list = @samba_group</span></span><br><span class="line"><span class="comment">#writeable=yes</span></span><br><span class="line"><span class="comment">#write list = harry  #可写用户,可写默认有可读权限.</span></span><br><span class="line">hosts allow = 172.24.1.  <span class="comment">#ip限制,注意点.</span></span><br></pre></td></tr></table></figure></p>
<h5 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h5><p>添加组: <code>groupadd samba_group</code><br>先添加系统用户<code>useradd harry -s /sbin/nologin -g samba_group</code><br>添加samba用户<code>smbpasswd -a harry</code> 然后输入密码即可</p>
<h5 id="文件夹-amp-权限"><a href="#文件夹-amp-权限" class="headerlink" title="文件夹&amp;权限"></a>文件夹&amp;权限</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /smbshare</span><br><span class="line">setfacl -m u:harry:rwx /smbshare </span><br><span class="line">#setfacl -m g:samba_group:rwx /smbshare #根据组修改文件acl</span><br><span class="line">#getfacl filename #查看文件夹的权限</span><br></pre></td></tr></table></figure>
<h5 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart smb</span><br><span class="line">systemctl restart nmb</span><br><span class="line">systemctl <span class="built_in">enable</span> smb</span><br><span class="line">systemctl <span class="built_in">enable</span> nmb</span><br></pre></td></tr></table></figure>
<h5 id="客户端挂载-1"><a href="#客户端挂载-1" class="headerlink" title="客户端挂载"></a>客户端挂载</h5><p>安装服务<br><code>yum -y install cifs-utils</code><br>vim /etc/fstab<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//192.168.1.(smb服务地址)/multishare /mnt/multishare cifs sec=ntlmssp,user=harry,password=harry,multiuser       0 0</span><br></pre></td></tr></table></figure></p>
<p><code>mount –a</code><br><code>df -h</code></p>
<hr>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nfs </tag>
            
            <tag> samba </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git显示分支]]></title>
      <url>/2017/03/22/git%E6%98%BE%E7%A4%BA%E5%88%86%E6%94%AF/</url>
      <content type="html"><![CDATA[<p><img src="/images/git_fenzhi.png" width="50%" height="30%" alt="git分支" align="center"></p>
<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>git仓库显示当前分支结构,以及路径.</p>
<a id="more"></a>
<blockquote>
<p>  vi ~/.bashrc  记得soure(来源于网络)</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">function git_branch &#123;</span><br><span class="line">    ref=$(git symbolic-ref HEAD 2&gt; /dev/null) || return;</span><br><span class="line">    echo &quot;(&quot;$&#123;ref#refs/heads/&#125;&quot;) &quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function parse_git_dirty &#123;</span><br><span class="line">    local git_status=$(git status 2&gt; /dev/null | tail -n1) || $(git status 2&gt; /dev/null | head -n 2 | tail -n1);</span><br><span class="line">    if [[ &quot;$git_status&quot; != &quot;&quot; ]]; then</span><br><span class="line">        local git_now; # 标示</span><br><span class="line">        if [[ &quot;$git_status&quot; =~ nothing\ to\ commit || &quot;$git_status&quot; =~  Your\ branch\ is\ up\-to\-date\ with ]]; then</span><br><span class="line">            git_now=&quot;=&quot;;</span><br><span class="line">        elif [[ &quot;$git_status&quot; =~ Changes\ not\ staged || &quot;$git_status&quot; =~ no\ changes\ added ]]; then</span><br><span class="line">            git_now=&apos;~&apos;;</span><br><span class="line">        elif [[ &quot;$git_status&quot; =~ Changes\ to\ be\ committed ]]; then #Changes to be committed</span><br><span class="line">            git_now=&apos;*&apos;;</span><br><span class="line">        elif [[ &quot;$git_status&quot; =~ Untracked\ files ]]; then                                                                                                           </span><br><span class="line">            git_now=&quot;+&quot;;</span><br><span class="line">        elif [[ &quot;$git_status&quot; =~ Your\ branch\ is\ ahead ]]; then</span><br><span class="line">            git_now=&quot;#&quot;;</span><br><span class="line">        fi</span><br><span class="line">        echo &quot;$&#123;git_now&#125;&quot;;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PS1=&quot;[\[\e[1;35m\]\u\[\e[1;32m\]@hostname:\w\[\e[0m\]] \[\e[0m\]\[\e[1;36m\]\$(git_branch)\[\033[0;31m\]\$(parse_git_dirty)\[\033[0m\]]\$&quot;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Django基础]]></title>
      <url>/2017/03/19/django%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p><img src="/images/django.jpg" width="50%" height="30%" alt="django" align="center"></p>
<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>感谢<a href="http://www.ziqiangxuetang.com" target="_blank" rel="noopener">自强学堂</a><br><a id="more"></a></p>
<h4 id="Django简介"><a href="#Django简介" class="headerlink" title="Django简介"></a>Django简介</h4><p>  <strong>urls.py</strong></p>
<blockquote>
<p>  网址入口，关联到对应的view.py中的一个函数（或者generic类），访问网址就对应一个函数</p>
</blockquote>
<p> <strong>view.py</strong> </p>
<blockquote>
<p>  处理用户发出的请求，从urls.py中对应过来，通过选人templates中的网页，可将内容显示，比如，登陆后的用户名，用户请求的数据，输出到网页</p>
</blockquote>
<p> <strong>models.py</strong></p>
<blockquote>
<p>  与数据库关联，存入或读取数据的时候会用到这个</p>
</blockquote>
<p> <strong>forms.py</strong> </p>
<blockquote>
<p>  表单，用户在浏览器上输入数据提交，对数据的验证工作以及输入框的生成等工作</p>
</blockquote>
<p><strong>templates</strong>文件夹</p>
<blockquote>
<p>  views.py 中的函数渲染templates中的Html模板，得到动态内容的网页，当然可以用缓存来提高速度。</p>
</blockquote>
<p> <strong>admin.py</strong></p>
<blockquote>
<p>  后台，可以用很少的代码量，拥有一个强大的后台</p>
</blockquote>
<p> <strong>settings.py</strong></p>
<blockquote>
<p>  Django 的设置，配置文件，比如Debug开关，静态文件位置等</p>
</blockquote>
<h4 id="Django环境搭建"><a href="#Django环境搭建" class="headerlink" title="Django环境搭建"></a>Django环境搭建</h4><blockquote>
<p>  Django 1.5.x 支持 Python 2.6.5 Python 2.7, Python 3.2 和 3.3.</p>
<p>  Django 1.6.x 支持 Python 2.6.X, 2.7.X, 3.2.X 和 3.3.X</p>
<p>  Django 1.7.x 支持 Python 2.7, 3.2, 3.3, 和 3.4 （注意：Python 2.6 不支持了）</p>
<p>  <strong>Django 1.8.x 支持 Python 2.7, 3.2, 3.3, 3.4 和 3.5. （长期支持版本 LTS)</strong></p>
<p>  Django 1.9.x 支持 Python 2.7, 3.4 和 3.5. 不支持 3.3 了</p>
<p>  Django 1.10.x 支持 Python 2.7, 3.4 和 3.5.</p>
<p>  <strong>Django 1.11.x 下一个长期支持版本，将于2017年4月发布</strong></p>
</blockquote>
<p>  <strong>更详细的可以<a href="https://www.djangoproject.com/download/" target="_blank" rel="noopener">参考这里</a></strong>一般来说，选择长期支持版本比较好。</p>
<blockquote>
<p>  使用最新版本的问题就是，可能要用到的一些第三方插件没有及时更新，无法正常使用这些三方包。</p>
<p>  如果是学习，可以选择目前的 Django 1.8.x 来进行，遇到问题也容易找到答案。</p>
<p>  当然如果需要新版本的功能也可以使用新版本，毕竟 Django 1.9 以后admin界面还是更漂亮些</p>
</blockquote>
<h4 id="安装Django"><a href="#安装Django" class="headerlink" title="安装Django"></a>安装Django</h4><p>安装pip</p>
<p>ubuntu <code>sudo apt-get install python-pip</code></p>
<p>centos <code>yum -y install python-pip</code></p>
<p>升级pip</p>
<p><code>pip install --upgrade pip</code></p>
<p>利用pip安装Django</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（sudo) pip install Django</span><br><span class="line">或者 (sudo) pip install Django==1.8.16 或者 pip install Django==1.10.3</span><br></pre></td></tr></table></figure>
<h4 id="搭建多个互不干扰的开发环境"><a href="#搭建多个互不干扰的开发环境" class="headerlink" title="搭建多个互不干扰的开发环境"></a>搭建多个互不干扰的开发环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装:</span><br><span class="line">(sudo) pip install virtualenv</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mkdir myproject</span><br><span class="line">cd myproject</span><br><span class="line"></span><br><span class="line">virtualenv --no-site-packages test</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">命令virtualenv就可以创建一个独立的Python运行环境，我们还加上了参数--no-site-packages，这样，已经安装到系统Python环境中的所有第三方包都不会复制过来，这样，我们就得到了一个不带任何第三方包的“干净”的Python运行环境。</span></span><br><span class="line"></span><br><span class="line">source test/bin/activate</span><br><span class="line"><span class="meta">#</span><span class="bash">命令行提示符的最前方，会提示当前所在的python环境</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">然后就可以在此环境下 进行开发/测试等</span></span><br><span class="line"></span><br><span class="line">deactivate  #退出环境</span><br></pre></td></tr></table></figure>
<p>####Django的基本命令（请牢牢记住，不能tab）</p>
<h5 id="新建一个django-project"><a href="#新建一个django-project" class="headerlink" title="新建一个django project"></a>新建一个django project</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin.py startproject zixue</span><br></pre></td></tr></table></figure>
<h5 id="新建app"><a href="#新建app" class="headerlink" title="新建app"></a>新建app</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp app-name</span><br><span class="line">或 django-admin.py startapp app-name</span><br><span class="line"></span><br><span class="line"><span class="comment">#一般一个项目有多个app, 当然通用的app也可以在多个项目中使用。</span></span><br></pre></td></tr></table></figure>
<h5 id="同步数据库"><a href="#同步数据库" class="headerlink" title="同步数据库"></a>同步数据库</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python manage.py syncdb</span><br><span class="line"> </span><br><span class="line"><span class="comment">#注意：Django 1.7.1及以上的版本需要用以下命令</span></span><br><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br><span class="line"></span><br><span class="line"><span class="comment">#这种方法可以创建表，当你在models.py中新增了类时，运行它就可以自动在数据库中创建表了，不用手动创建。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#备注：对已有的 models 进行修改，Django 1.7之前的版本的Django都是无法自动更改表结构的，不过有第三方工具 south,</span></span><br></pre></td></tr></table></figure>
<h5 id="使用开发服务器"><a href="#使用开发服务器" class="headerlink" title="使用开发服务器"></a>使用开发服务器</h5><p>开发服务器，即开发时使用，一般修改代码后会自动重启，方便调试和开发，但是由于性能问题，建议只用来测试，不要用在生产环境。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 当提示端口被占用的时候，可以用其它端口：</span></span><br><span class="line">python manage.py runserver 8001</span><br><span class="line">python manage.py runserver 9999</span><br><span class="line">（当然也可以<span class="built_in">kill</span>掉占用端口的进程）</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 监听所有可用 ip （电脑可能有一个或多个内网ip，一个或多个外网ip，即有多个ip地址）</span></span><br><span class="line">python manage.py runserver 0.0.0.0:8000</span><br><span class="line"><span class="comment"># 如果是外网或者局域网电脑上可以用其它电脑查看开发服务器</span></span><br><span class="line"><span class="comment"># 访问对应的 ip加端口，比如 http://172.16.20.2:8000</span></span><br></pre></td></tr></table></figure>
<h5 id="清空数据库"><a href="#清空数据库" class="headerlink" title="清空数据库"></a>清空数据库</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py flush</span><br></pre></td></tr></table></figure>
<h5 id="创建超级管理员"><a href="#创建超级管理员" class="headerlink" title="创建超级管理员"></a>创建超级管理员</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createsuperuser</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 按照提示输入用户名和对应的密码就好了邮箱可以留空，用户名和密码必填</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 修改 用户密码可以用：</span></span><br><span class="line">python manage.py changepassword username</span><br></pre></td></tr></table></figure>
<p>导入导出数据</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py dumpdata appname &gt; appname.json</span><br><span class="line">python manage.py loaddata appname.json</span><br></pre></td></tr></table></figure>
<h5 id="Django羡慕的环境终端"><a href="#Django羡慕的环境终端" class="headerlink" title="Django羡慕的环境终端"></a>Django羡慕的环境终端</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py shell</span><br></pre></td></tr></table></figure>
<h5 id="数据库命令行"><a href="#数据库命令行" class="headerlink" title="数据库命令行"></a>数据库命令行</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python manage.py dbshell</span><br><span class="line"></span><br><span class="line">Django 会自动进入在settings.py中设置的数据库，如果是 MySQL 或 postgreSQL,会要求输入数据库用户密码。</span><br><span class="line">在这个终端可以执行数据库的SQL语句。如果您对SQL比较熟悉，可能喜欢这种方式。</span><br></pre></td></tr></table></figure>
<h5 id="更多命令"><a href="#更多命令" class="headerlink" title="更多命令"></a>更多命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">终端上输入 python manage.py 可以看到详细的列表，在忘记子名称的时候特别有用。</span><br></pre></td></tr></table></figure>
<h4 id="Django的视图与网址"><a href="#Django的视图与网址" class="headerlink" title="Django的视图与网址"></a>Django的视图与网址</h4><h5 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin.py startproject mysite</span><br></pre></td></tr></table></figure>
<p>创建成功后，目录如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysite</span><br><span class="line">├── manage.py</span><br><span class="line">└── mysite</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── settings.py</span><br><span class="line">    ├── urls.py</span><br><span class="line">    └── wsgi.py</span><br><span class="line">    </span><br><span class="line">#新建了一个 mysite 目录，其中还有一个 mysite 目录</span><br><span class="line">#这个子目录 mysite 中是一些项目的设置settings.py 文件</span><br><span class="line">#总的urls配置文件 urls.py 以及部署服务器时用到的 wsgi.py 文件</span><br><span class="line"># __init__.py 是python包的目录结构必须的，与调用有关。</span><br></pre></td></tr></table></figure>
<h5 id="新建应用（app）-名字叫learn"><a href="#新建应用（app）-名字叫learn" class="headerlink" title="新建应用（app） 名字叫learn"></a>新建应用（app） 名字叫learn</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp learn   #learn只是一个app的名称</span><br></pre></td></tr></table></figure>
<p><strong>把我们新定义的app加到settings.py中的INSTALL_APPS</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysite/mysite/settings.py</span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = (</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line"> </span><br><span class="line">    <span class="string">'learn'</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">#备注,这一步是干什么呢? 新建的 app 如果不加到 INSTALL_APPS 中的话,</span></span><br><span class="line"><span class="comment">#django 就不能自动找到app中的模板文件(app-name/templates/下的文件)</span></span><br><span class="line"><span class="comment">#和静态文件(app-name/static/中的文件) , 后面你会学习到它们分别用来干什么.</span></span><br></pre></td></tr></table></figure>
<h5 id="定义视图函数-（访问页面的内容）"><a href="#定义视图函数-（访问页面的内容）" class="headerlink" title="定义视图函数 （访问页面的内容）"></a>定义视图函数 （访问页面的内容）</h5><p>修改 应用 learn 中的view.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">u'欢迎'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment">#第一行是声明编码为utf-8, 因为我们在代码中用到了中文,如果不声明就报错.</span></span><br><span class="line"><span class="comment">#第二行引入HttpResponse，它是用来向网页返回内容的，</span></span><br><span class="line"><span class="comment">#就像Python中的 print 一样，只不过 HttpResponse 是把内容显示到网页上。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#我们定义了一个index()函数，第一个参数必须是 request，与网页发来的请求有关，request</span></span><br><span class="line"><span class="comment">#变量里面包含get或post的内容，用户浏览器，系统等信息#在里面（后面会讲，先了解一下就可以）。</span></span><br><span class="line"><span class="comment">#函数返回了一个 HttpResponse 对象，可以经过一些处理，最终显示几个字到网页上。</span></span><br><span class="line"><span class="comment">#那问题来了，我们访问什么网址才能看到刚才写的这个函数呢？怎么让网址和函数关联起来呢？</span></span><br></pre></td></tr></table></figure>
<h5 id="定义视图函数相关的URL"><a href="#定义视图函数相关的URL" class="headerlink" title="定义视图函数相关的URL"></a>定义视图函数相关的URL</h5><p>打开mysite下的urls.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Django 1.7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> patterns, include, url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line">admin.autodiscover()</span><br><span class="line"> </span><br><span class="line">urlpatterns = patterns(<span class="string">''</span>,</span><br><span class="line">    url(<span class="string">r'^$'</span>, <span class="string">'learn.views.index'</span>),  <span class="comment"># new</span></span><br><span class="line">    <span class="comment"># url(r'^blog/', include('blog.urls')),</span></span><br><span class="line"> </span><br><span class="line">    url(<span class="string">r'^admin/'</span>, include(admin.site.urls)),</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Django1.8 以上</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> learn <span class="keyword">import</span> views <span class="keyword">as</span> learn_views  <span class="comment"># new</span></span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>, learn_views.index),  <span class="comment"># new</span></span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启python测试</span></span><br><span class="line">python manage.py runserver</span><br><span class="line"><span class="comment">#允许远程访问</span></span><br><span class="line">python manager.py runserver <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8000</span> （指定IP和端口)</span><br></pre></td></tr></table></figure>
<h4 id="视图与网址进阶"><a href="#视图与网址进阶" class="headerlink" title="视图与网址进阶"></a>视图与网址进阶</h4><h5 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h5><h5 id="新建应用"><a href="#新建应用" class="headerlink" title="新建应用"></a>新建应用</h5><p>同上</p>
<h5 id="修改应用下的views-py"><a href="#修改应用下的views-py" class="headerlink" title="修改应用下的views.py"></a>修改应用下的views.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(request)</span>:</span></span><br><span class="line">    a = request.GET[<span class="string">'a'</span>]</span><br><span class="line">    b = request.GET[<span class="string">'b'</span>]</span><br><span class="line">    c = int(a)+int(b)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(str(c))</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#注：request.GET 类似于一个字典，更好的办法是用 request.GET.get('a', 0) 当没有传递 a 的时候默认 a 为 0</span></span><br></pre></td></tr></table></figure>
<h5 id="修改项目下的urls-py"><a href="#修改项目下的urls-py" class="headerlink" title="修改项目下的urls.py"></a>修改项目下的urls.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> learn <span class="keyword">import</span> views <span class="keyword">as</span> learn_views</span><br><span class="line"><span class="keyword">from</span> calc <span class="keyword">import</span> views <span class="keyword">as</span> calc_views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^add/$'</span>,calc_views.add,name=<span class="string">'add'</span>),</span><br><span class="line">    url(<span class="string">r'^$'</span>,learn_views.index),</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h5 id="打开网址"><a href="#打开网址" class="headerlink" title="打开网址"></a>打开网址</h5><p>IP:8000/add/?a=1&amp;b=2</p>
<h5 id="采用add-2-4的方式"><a href="#采用add-2-4的方式" class="headerlink" title="采用add/2/4的方式"></a>采用add/2/4的方式</h5><p>进入cala/views.py 定义函数</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add2</span><span class="params">(request,a,b)</span>:</span></span><br><span class="line">    c = int(a) + int(b)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(str(c))</span><br></pre></td></tr></table></figure>
<p>修改项目下的urls.py</p>
<p>Django 1.7.X</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^add/(\d+)/(\d+)/$'</span>, <span class="string">'calc.views.add2'</span>, name=<span class="string">'add2'</span>),</span><br></pre></td></tr></table></figure>
<p>Django 1.8+</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    url(r&apos;^add/(\d+)/(\d+)/$&apos;, calc_views.add2, name=&apos;add2&apos;),</span><br><span class="line">    </span><br><span class="line">    #我们可以看到网址中多了 (\d+), 正则表达式中 \d 代表一个数字，+ 代表一个或多个前面的字符，写在一起 \d+ 就是一个或多个数字，用括号括起来的意思是保存为一个子组（更多知识请参见 Python 正则表达式），每一个子组将作为一个参数，被 views.py 中的对应视图函数接收。</span><br><span class="line">访问 http://127.0.0.1:8000/add/4/5/ 就可以看到和刚才同样的效果</span><br></pre></td></tr></table></figure>
<h4 id="URL-name详解"><a href="#URL-name详解" class="headerlink" title="URL name详解"></a>URL name详解</h4><p><code>url(r&#39;^add/$&#39;, calc_views.add,name=&#39;add&#39;), 这里的name=&#39;add&#39; 是用来干什么的呢？</code></p>
<p><strong>简单的来说，name可以在template,models，views中得到对应的网址，相当于给网址去了名字，只要名字不变，网址变不变都是可以获取到的</strong></p>
<p>修改calc/views.py (应用calc已经在setting.py中INSTALLED_APPS导入,不然模板是找不到的)</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'home.html'</span>)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">#render 是渲染模板</span></span><br></pre></td></tr></table></figure>
<p>然后新建<strong>templates</strong>文件夹,在新建home.html</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>自强学堂<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/add/4/5/"</span>&gt;</span>计算 4+5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>修改项目中的urls.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">from</span> learn <span class="keyword">import</span> views <span class="keyword">as</span> learn_views</span><br><span class="line"><span class="keyword">from</span> calc <span class="keyword">import</span> views <span class="keyword">as</span> calc_views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>,calc_views.index,name=<span class="string">'home'</span>),</span><br><span class="line">    url(<span class="string">r'^add/$'</span>,calc_views.add,name=<span class="string">'add'</span>),</span><br><span class="line">    url(<span class="string">r'^add/(\d+)/(\d+)/$'</span>,calc_views.add2,name=<span class="string">'add2'</span>),</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>然后运行服务,访问页面就会出现  计算4+5  的链接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;/add/4/5/&quot;&gt;计算 4+5&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">如果这样写“死网址”，会使得在改了网址（正则）后，模板（template)，视图(views.py，用以用于跳转)，模型(models.py，可以用用于获取对象对应的地址）用了此网址的，都得进行相应的更改，修改的代价很大，一不小心，有的地方没改过来，就不能用了。</span><br><span class="line"></span><br><span class="line">那么有没有更优雅的方式来解决这个问题呢？</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">不带参数的：</span><br><span class="line">&#123;% url &apos;name&apos; %&#125;</span><br><span class="line">带参数的：参数可以是变量名</span><br><span class="line">&#123;% url &apos;name&apos; 参数 %&#125;</span><br><span class="line"> </span><br><span class="line">例如：</span><br><span class="line">&lt;a href=&quot;&#123;% url &apos;add2&apos; 4 5 %&#125;&quot;&gt;link&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<p>当 urls.py 进行更改，前提是不改 name（这个参数设定好后不要轻易改），获取的网址也会动态地跟着变，比如改成：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^new_add/(\d+)/(\d+)/$'</span>, calc_views.add2, name=<span class="string">'add2'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#add 变成了 new_add，但是后面的 name='add2' 没改，这时 &#123;% url 'add2' 4 5 %&#125; 就会渲染对应的网址成 /new_add/4/5/</span></span><br></pre></td></tr></table></figure>
<p>另外，比如用户收藏夹中收藏的URL是旧的，如何让以前的 /add/3/4/自动跳转到现在新的网址呢？</p>
<p><strong>要知道Django不会帮你做这个，这个需要自己来写一个跳转方法</strong>：</p>
<p>具体思路是，在 views.py 写一个跳转的函数：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.core.urlresolvers <span class="keyword">import</span> reverse  <span class="comment"># django 1.4.x - django 1.10.x</span></span><br><span class="line"><span class="comment">#  from django.urls import reverse  # new in django 1.10.x</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">old_add2_redirect</span><span class="params">(request, a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponseRedirect(</span><br><span class="line">        reverse(<span class="string">'add2'</span>, args=(a, b))</span><br><span class="line">    )</span><br></pre></td></tr></table></figure>
<p>urls.py中</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^add/(\d+)/(\d+)/$'</span>, calc_views.old_add2_redirect),</span><br><span class="line">url(<span class="string">r'^new_add/(\d+)/(\d+)/$'</span>, calc_views.add2, name=<span class="string">'add2'</span>),</span><br></pre></td></tr></table></figure>
<p>这样，<strong>假如用户收藏夹中</strong>有 /add/4/5/ ，访问时就会自动跳转到新的 /new_add/4/5/ 了</p>
<h4 id="templates"><a href="#templates" class="headerlink" title="templates"></a>templates</h4><p>创建一个项目和app</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">django-admin.py startproject zqxt_tmpl</span><br><span class="line">cd zqxt_tmpl</span><br><span class="line">python manage.py startapp learn</span><br></pre></td></tr></table></figure>
<p>把 learn 加入到 settings.INSTALLED_APPS中</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line"> </span><br><span class="line">    <span class="string">'learn'</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>打开 learn/views.py 写一个首页的视图</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">home</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'home.html'</span>)</span><br></pre></td></tr></table></figure>
<p>创建templates/home.html</p>
<p>然后将输入和网址对应</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> include, url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> learn <span class="keyword">import</span> views <span class="keyword">as</span> learn_views</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^$'</span>, learn_views.home, name=<span class="string">'home'</span>),</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, include(admin.site.urls)),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Django1.10+</span></span><br><span class="line"><span class="comment">#url(r'^admin/', admin.site.urls),  #include</span></span><br></pre></td></tr></table></figure>
<h5 id="项目中有多个应用-所以就会有多个templates以及多个index-html"><a href="#项目中有多个应用-所以就会有多个templates以及多个index-html" class="headerlink" title="项目中有多个应用,所以就会有多个templates以及多个index.html"></a>项目中有多个应用,所以就会有多个templates以及多个index.html</h5><p>默认情况下Django是不会去区分的,最先找到那个就显示那个,所以如果为了区分的话</p>
<p>就在各个应用的templates下进行在划分</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">project</span><br><span class="line">├── app1</span><br><span class="line">|....</span><br><span class="line">│   ├── templates</span><br><span class="line">│   │   └── app1</span><br><span class="line">│   │       ├── index.html</span><br><span class="line">│   │       └── search.html</span><br><span class="line">├── app2</span><br><span class="line">|.....</span><br><span class="line">│   ├── templates</span><br><span class="line">│   │   └── app2</span><br><span class="line">│   │       ├── index.html</span><br><span class="line">│   │       └── poll.html</span><br></pre></td></tr></table></figure>
<h5 id="模版补充知识点"><a href="#模版补充知识点" class="headerlink" title="模版补充知识点"></a>模版补充知识点</h5><p>网站模板的设计，一般的，我们做网站有一些通用的部分，比如<strong>导航，底部，访问统计代码等等</strong></p>
<blockquote>
<p>  可以写一个 base.html 来包含这些通用文件（include)</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;% block title %&#125;默认标题&#123;% endblock %&#125; - test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">&#123;% include 'nav.html' %&#125;</span><br><span class="line"> </span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>这里是默认内容，所有继承自这个模板的，如果不覆盖就显示这里的默认内容。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"> </span><br><span class="line">&#123;% include 'bottom.html' %&#125;</span><br><span class="line"> </span><br><span class="line">&#123;% include 'tongji.html' %&#125;</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#如果需要，写足够多的 block 以便继承的模板可以重写该部分</span><br><span class="line">#include 是包含其它文件的内容，就是把一些网页共用的部分拿出来，重复利用</span><br><span class="line">#改动的时候也方便一些，还可以把广告代码放在一个单独的html中，改动也方便一些，</span><br><span class="line">#在用到的地方include进去。其它的页面继承自 base.html 就好了，</span><br><span class="line">#继承后的模板也可以在 block 块中 include 其它的模板文件。</span><br></pre></td></tr></table></figure>
<h4 id="templatesde-进阶"><a href="#templatesde-进阶" class="headerlink" title="templatesde 进阶"></a>templatesde 进阶</h4><p> <strong>主要讲解模板中的循环，条件判断，常用的标签，过滤器的使用</strong></p>
<h5 id="基本字节的显示"><a href="#基本字节的显示" class="headerlink" title="基本字节的显示"></a>基本字节的显示</h5><p>views.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">home</span><span class="params">(request)</span>:</span></span><br><span class="line">    string = <span class="string">u"学习Django，用它来建网站"</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'home.html'</span>, &#123;<span class="string">'string'</span>: string&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在视图中我们传递了一个字符串名称是 string(引号内的表示可悲html调用的) 到模板 home.html</span></span><br></pre></td></tr></table></figure>
<p>home.html</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; string &#125;&#125;</span><br></pre></td></tr></table></figure>
<h5 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h5><p>views.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">home</span><span class="params">(request)</span>:</span></span><br><span class="line">    TutorialList = [<span class="string">"HTML"</span>, <span class="string">"CSS"</span>, <span class="string">"jQuery"</span>, <span class="string">"Python"</span>, <span class="string">"Django"</span>]</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'home.html'</span>, &#123;<span class="string">'TutorialList'</span>: TutorialList&#125;)</span><br></pre></td></tr></table></figure>
<p>home.html</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> i <span class="keyword">in</span> TutorialList %&#125;</span><br><span class="line">&#123;&#123; i &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt;   for循环要有个结束标记</span><br><span class="line">&gt;</span><br><span class="line">&gt;   一般的变量声明使用&#123;&#123;&#125;&#125;</span><br><span class="line">&gt;</span><br><span class="line">&gt;   功能性的 比如循环，条件判断等使用&#123;%  %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### 显示字典的内容</span><br><span class="line"></span><br><span class="line">views.py</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">def home(request):</span><br><span class="line">    info_dict = &#123;&apos;site&apos;: u&apos;学堂&apos;, &apos;content&apos;: u&apos;IT技术教程&apos;&#125;</span><br><span class="line">    return render(request, &apos;home.html&apos;, &#123;&apos;info_dict&apos;: info_dict&#125;)</span><br></pre></td></tr></table></figure>
<p>home.html</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">站点：</span><span class="template-variable">&#123;&#123; info_dict.site &#125;&#125;</span><span class="xml"> 内容：</span><span class="template-variable">&#123;&#123; info_dict.content &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>遍历字典</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> key, value <span class="keyword">in</span> info_dict.items %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; key &#125;&#125;</span><span class="xml">: </span><span class="template-variable">&#123;&#123; value &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<h5 id="条件判断和-for-循环"><a href="#条件判断和-for-循环" class="headerlink" title="条件判断和 for 循环"></a>条件判断和 for 循环</h5><p>views.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">home</span><span class="params">(request)</span>:</span></span><br><span class="line">    List = map(str, range(<span class="number">100</span>))<span class="comment"># 一个长度为100的 List</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'home.html'</span>, &#123;<span class="string">'List'</span>: List&#125;)</span><br></pre></td></tr></table></figure>
<p>home.html</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> item <span class="keyword">in</span> List %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; item &#125;&#125;</span><span class="xml">, #每次结束都会在值得后面添加最后，最后一个依然会添加 99,</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>所以，如何判读是不是最后一次遍历呢</p>
<blockquote>
<p>  forloop.last变量  判断是否为最后一项，如果是则为真，反之。</p>
</blockquote>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> item <span class="keyword">in</span> List %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; item &#125;&#125;</span><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not forloop.last %&#125;</span><span class="xml">, </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"> ##判断不是最后一个则加逗号</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>for循环的其他变量</p>
<table>
<thead>
<tr>
<th>变量</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>forloop.counter</td>
<td>索引从1开始计算</td>
</tr>
<tr>
<td>forloop.counter0</td>
<td>索引从0开始计算</td>
</tr>
<tr>
<td>forloop.revcounter</td>
<td>索引最大长度到1</td>
</tr>
<tr>
<td>forloop.revcounter0</td>
<td>索引最大长度到0</td>
</tr>
<tr>
<td>forloop.first</td>
<td>遍历元素为第一项时，返回真</td>
</tr>
<tr>
<td>forloop.last</td>
<td>遍历元素为最后一项，返回真</td>
</tr>
<tr>
<td>forloop.parentloop</td>
<td>用在嵌套for循环中，获取上一层for循环的forloop</td>
</tr>
</tbody>
</table>
<p><strong>当列表可能为空的时候用 for  empty</strong></p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> athlete <span class="keyword">in</span> athlete_list %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123; athlete.name &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">empty</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>抱歉，列表为空<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h5 id="模板上得到视图对应的网址"><a href="#模板上得到视图对应的网址" class="headerlink" title="模板上得到视图对应的网址"></a>模板上得到视图对应的网址</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># views.py</span><br><span class="line">def add(request, a, b):</span><br><span class="line">    c = int(a) + int(b)</span><br><span class="line">    return HttpResponse(str(c))</span><br><span class="line"></span><br><span class="line"># urls.py</span><br><span class="line">urlpatterns = patterns(&apos;&apos;,</span><br><span class="line">    url(r&apos;^add/(\d+)/(\d+)/$&apos;, &apos;app.views.add&apos;, name=&apos;add&apos;),</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line"># template html</span><br><span class="line">&#123;% url &apos;add&apos; 4 5 %&#125;</span><br><span class="line"></span><br><span class="line">#name 的方便之处。</span><br><span class="line">#当urls文件发生改变的生后，并不需要去修改html</span><br><span class="line">#因为html中我们使用的是name   也就是add</span><br></pre></td></tr></table></figure>
<p>还可以使用 as 语句将内容取别名（相当于定义一个变量）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% url &apos;some-url-name&apos; arg arg2 as the_url %&#125;</span><br><span class="line"> </span><br><span class="line">&lt;a href=&quot;&#123;&#123; the_url &#125;&#125;&quot;&gt;链接到：&#123;&#123; the_url &#125;&#125;&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<h5 id="模板中使用逻辑操作"><a href="#模板中使用逻辑操作" class="headerlink" title="模板中使用逻辑操作"></a>模板中使用逻辑操作</h5><p>==, !=, &gt;=, &lt;=, &gt;, &lt; 这些比较都可以在模板中使用</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> var &gt;= 90 %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">成绩优秀，自强学堂你没少去吧！学得不错</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">elif</span></span> var &gt;= 80 %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">成绩良好</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">elif</span></span> var &gt;= 70 %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">成绩一般</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">elif</span></span> var &gt;= 60 %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">需要努力</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">不及格啊，大哥！多去自强学堂学习啊！</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>and, or, not, in, not in 也可以在模板中使用</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> num &lt;= 100 and num &gt;= 0 %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">num在0到100之间</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">数值不在范围之内！</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>判断是否在某个列表中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if &apos;ZILI&apos; in List %&#125;</span><br><span class="line">自强学堂在名单中</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<h5 id="模板中获取当前网址，当前用户名等"><a href="#模板中获取当前网址，当前用户名等" class="headerlink" title="模板中获取当前网址，当前用户名等"></a>模板中获取当前网址，当前用户名等</h5><p><strong>修改setting</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [],</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="keyword">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                ...</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                ...</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>然后在模板中就可以调用了</p>
<p>获取用户</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; request.user &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>判断登录</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> request.user.is_authenticated %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; request.user.username &#125;&#125;</span><span class="xml">，您好！</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    请登陆，这里放登陆链接</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>获取网址</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; request.path&#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>获取当前get 参数</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; request.GET.urlencode&#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p><strong>合并到一起举例</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;&#123;&#123; request.path &#125;&#125;?&#123;&#123; request.GET.urlencode &#125;&#125;&amp;delete=1&quot;&gt;当前网址加参数 delete&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<h4 id="模型（数据库）"><a href="#模型（数据库）" class="headerlink" title="模型（数据库）"></a>模型（数据库）</h4><blockquote>
<p>   Django模型适合数据库相关的，与数据库相关的代码一般写在models.py中，Django支持  sqlite3，Mysql，PostgreSQL等数据库，只要在setting.py中进行配置即可</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">django-admin.py startproject learn_models # 新建一个项目</span><br><span class="line">cd learn_models # 进入到该项目的文件夹</span><br><span class="line">django-admin.py startapp people # 新建一个 people 应用（app)</span><br></pre></td></tr></table></figure>
<p><strong>一个项目包含多个应用，一个应用也可以在多个项目中</strong></p>
<blockquote>
<p>   添加新的项目到settings.py – INSTALLED_APPS下</p>
</blockquote>
<h5 id="修改models-py"><a href="#修改models-py" class="headerlink" title="修改models.py"></a>修改models.py</h5><p>与数据库相关的代码一般写在models.py中</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    age = models.IntegerField()</span><br><span class="line">    </span><br><span class="line"><span class="comment">#新建了一个Person类，继承自models.Model, 一个人有姓名和年龄。这里用到了Field，</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#上面代码其实就相当于原生sql</span></span><br><span class="line"></span><br><span class="line">CREATE TABLE myapp_person (</span><br><span class="line">    <span class="string">"id"</span> serial NOT NULL PRIMARY KEY,</span><br><span class="line">    <span class="string">"name"</span> varchar(<span class="number">30</span>) NOT NULL,</span><br><span class="line">    <span class="string">"age"</span> int() NOT NULL</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>  表名person_person由Django自动生成：<strong>项目名称+下划线+小写类名</strong></p>
</blockquote>
<h5 id="同步数据库-1"><a href="#同步数据库-1" class="headerlink" title="同步数据库"></a>同步数据库</h5><p>（默认使用SQLite3.0  无需配置）</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Django <span class="number">1.9</span> 默认使用</span><br><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br><span class="line"><span class="comment">#同步数据库 migrate代替老版本的syscdb</span></span><br><span class="line"><span class="comment">#这两行命令会对models.py 进行检测，自动发现需要更改的，应用到数据库中去。</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span>/admin就可以看到简易的CMS系统了</span><br></pre></td></tr></table></figure>
<p><strong>同步数据库命令返回值</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root/myProject/learn_models] ]<span class="variable">$python</span> manage.py makemigrations</span><br><span class="line">Migrations <span class="keyword">for</span> <span class="string">'people'</span>:</span><br><span class="line">  0001_initial.py:</span><br><span class="line">    - Create model Person</span><br><span class="line">[root/myProject/learn_models] ]<span class="variable">$python</span> manage.py migrate</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: people, sessions, auth, contenttypes, admin</span><br><span class="line">Running migrations:</span><br><span class="line">  Rendering model states... DONE</span><br><span class="line">  Applying contenttypes.0001_initial... OK</span><br><span class="line">  Applying auth.0001_initial... OK</span><br><span class="line">  Applying admin.0001_initial... OK</span><br><span class="line">  Applying admin.0002_logentry_remove_auto_add... OK</span><br><span class="line">  Applying contenttypes.0002_remove_content_type_name... OK</span><br><span class="line">  Applying auth.0002_alter_permission_name_max_length... OK</span><br><span class="line">  Applying auth.0003_alter_user_email_max_length... OK</span><br><span class="line">  Applying auth.0004_alter_user_username_opts... OK</span><br><span class="line">  Applying auth.0005_alter_user_last_login_null... OK</span><br><span class="line">  Applying auth.0006_require_contenttypes_0002... OK</span><br><span class="line">  Applying auth.0007_alter_validators_add_error_messages... OK</span><br><span class="line">  Applying people.0001_initial... OK</span><br><span class="line">  Applying sessions.0001_initial... OK</span><br><span class="line">[root/myProject/learn_models] ]$</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建superuser</span></span><br><span class="line">python manage.py createsuperuser</span><br><span class="line">Username (leave blank to use <span class="string">'root'</span>): </span><br><span class="line">Email address: ****@qq.com</span><br><span class="line">Password: </span><br><span class="line">Password (again): </span><br><span class="line">Superuser created successfully.</span><br><span class="line"></span><br><span class="line"><span class="comment">#此时我们登录 ipaddress:8000/admin  就能看到简单的CMS</span></span><br></pre></td></tr></table></figure>
<h5 id="Django-shell操作数据表"><a href="#Django-shell操作数据表" class="headerlink" title="Django shell操作数据表"></a>Django shell操作数据表</h5><blockquote>
<p>  Django中的交互式shell来进行数据库的增删改查等操作</p>
</blockquote>
<h6 id="增加-查询"><a href="#增加-查询" class="headerlink" title="增加 查询"></a>增加 查询</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">python manage.py shell</span><br><span class="line"><span class="meta">#</span><span class="bash">数据增加</span></span><br><span class="line">In [1]: from people.models import Person</span><br><span class="line"></span><br><span class="line">In [2]: Person.objects.create(name='lizili',age=18)#新加数据</span><br><span class="line">Out[2]: &lt;Person: Person object&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash">数据库查询</span></span><br><span class="line"><span class="meta">#</span><span class="bash">查询所有，返回一个列表，无对象返回空</span></span><br><span class="line">In [6]: Person.objects.all()</span><br><span class="line">Out[6]: [&lt;Person: Person object&gt;]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查询指定对象</span></span><br><span class="line">In [4]: a=Person.objects.get(id=1)</span><br><span class="line">In [17]: a.name</span><br><span class="line">Out[17]: 'lizili'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">每次都要赋值才能查找，很麻烦，所以可以去modules.py中对语句进行修改</span></span><br><span class="line">from django.db import models</span><br><span class="line"><span class="meta">#</span><span class="bash"> Create your models here.</span></span><br><span class="line">class Person(models.Model):</span><br><span class="line">    name =models.CharField(max_length=30)</span><br><span class="line">    age = models.IntegerField()</span><br><span class="line">    def __str__(self):</span><br><span class="line">        return u'name:%s , age:%s' % (self.name,self.age)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">这样每次就可以直接查询了</span></span><br><span class="line">In [1]: from people.models import Person</span><br><span class="line">In [2]: Person.objects.get(id=1)</span><br><span class="line">Out[2]: &lt;Person: name:lizili , age:26&gt;</span><br></pre></td></tr></table></figure>
<h6 id="新建数据"><a href="#新建数据" class="headerlink" title="新建数据"></a>新建数据</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">1</span></span><br><span class="line">Person.objects.create(name=name,age=age)</span><br><span class="line"><span class="meta">#</span><span class="bash">2</span></span><br><span class="line">p = Person(name="WZ", age=23)</span><br><span class="line">p.save()</span><br><span class="line"><span class="meta">#</span><span class="bash">3</span></span><br><span class="line">p = Person(name="TWZ")</span><br><span class="line">p.age = 23</span><br><span class="line">p.save()</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">4这种方法是防止重复很好的方法，但速度要相对慢些</span></span><br><span class="line"><span class="meta">#</span><span class="bash">返回一个元组，第一个为Person对象，第二个为True或False, 新建时返回的是True, 已经存在时返回False.</span></span><br><span class="line">Person.objects.get_or_create(name="WZT", age=23)</span><br></pre></td></tr></table></figure>
<h6 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Person.objects.all()#查询所有</span><br><span class="line">Person.objects.all()[:10] #切片操作，获取10个人，不支持负索引，切片可以节约内存</span><br><span class="line">Person.objects.get(name='lizili') #关键字</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">get方法</span></span><br><span class="line"><span class="meta">#</span><span class="bash">get是用来获取一个对象的，如果需要获取满足条件的一些人，就要用到filter</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">filter方法</span></span><br><span class="line">Person.objects.filter(name="abc") # 等于Person.objects.filter(name__exact="abc") 名称严格等于 "abc" 的人</span><br><span class="line">Person.objects.filter(name__iexact="abc") # 名称为 abc 但是不区分大小写，可以找到 ABC, Abc, aBC，这些都符合条件</span><br><span class="line">Person.objects.filter(name__contains="abc") # 名称中包含 "abc"的人</span><br><span class="line">Person.objects.filter(name__icontains="abc") #名称中包含 "abc"，且abc不区分大小写</span><br><span class="line">Person.objects.filter(name__regex="^abc") # 正则表达式查询</span><br><span class="line">Person.objects.filter(name__iregex="^abc")# 正则表达式不区分大小写</span><br><span class="line"><span class="meta">#</span><span class="bash">filter是找出满足条件的，当然也有排除符合某条件的</span></span><br><span class="line">Person.objects.exclude(name__contains="WZ") # 排除包含 WZ 的Person对象</span><br><span class="line">Person.objects.filter(name__contains="abc").exclude(age=23) # 找出名称含有abc, 但是排除年龄是23岁的</span><br></pre></td></tr></table></figure>
<h5 id="自定义Field"><a href="#自定义Field" class="headerlink" title="自定义Field"></a>自定义Field</h5><p><a href="https://docs.djangoproject.com/en/1.10/ref/models/fields/" target="_blank" rel="noopener">更多Field</a></p>
<blockquote>
<p>  以后补</p>
</blockquote>
<h5 id="数据表的更改"><a href="#数据表的更改" class="headerlink" title="数据表的更改"></a>数据表的更改</h5><blockquote>
<p>  当数据库设计完后，发现不满意，需要更改，添加/删除字段。</p>
</blockquote>
<p>Django 1.7+</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">直接修改models.py 然后执行以下语句即可</span></span><br><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">会出现一下提示，选 1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1) Provide a one-off default now (will be <span class="built_in">set</span> on all existing rows)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2) Quit, and <span class="built_in">let</span> me add a default <span class="keyword">in</span> models.py</span></span><br><span class="line"><span class="meta">#</span><span class="bash">新增了字段，但是原来已经的数据没有这个字段，</span></span><br><span class="line"><span class="meta">#</span><span class="bash">当你这个字段没有默认值，又不能为空的时候它就不知道怎么做</span></span><br><span class="line"><span class="meta">#</span><span class="bash">需要选择 1 来指定一个 “一次性的值” 给已有字段。</span></span><br></pre></td></tr></table></figure>
<h5 id="QuerySet-API"><a href="#QuerySet-API" class="headerlink" title="QuerySet API"></a>QuerySet API</h5><blockquote>
<p>  <strong>数据库接口</strong>相关的接口（QuerySet API)</p>
<p>  从数据库中查询出来的结果一般是一个集合，这个集合叫做 QuerySet</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> web </category>
            
            <category> django </category>
            
        </categories>
        
        
        <tags>
            
            <tag> django </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[shell基础]]></title>
      <url>/2017/03/12/shell%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p><img src="/images/shell.png" width="50%" height="30%" alt="shell" align="center"></p>
<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。Shell 既是一种命令语言，又是一种程序设计语言。<br>Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。<br><a id="more"></a></p>
<h4 id="Shell基本介绍"><a href="#Shell基本介绍" class="headerlink" title="Shell基本介绍"></a>Shell基本介绍</h4><h5 id="shell学习必备基础"><a href="#shell学习必备基础" class="headerlink" title="shell学习必备基础"></a>shell学习必备基础</h5><ol>
<li>Linux的基本使用</li>
<li>如何在bash上执行程序</li>
<li>简单的管道传输</li>
<li>使用 &amp;将程序放在后台执行</li>
</ol>
<h5 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h5><p><strong>为什么要使用shell脚本?</strong></p>
<blockquote>
<p>  使用脚本编程语言的好处是,脚本语言多半运行在比编译语言还高得层级,能够轻易处理文件与目录之类的对象.<br>缺点:一般情况下,效率比较低.不过权衡之下,脚本的执行速度已经很快,快到足以让人感觉不到性能不高了.<br>常用的脚本编程语言有:shelll,Ruby,JavaScript等.</p>
<p>  shell似乎是不同版本的linux系统之间的通用功能.shell脚本只要用心写,就能应用到很多系统上.</p>
</blockquote>
<p>shell脚本的过人之处</p>
<blockquote>
<p>  简单性:shell是高级语言<br>  可移植性:通过POSIX(可移植操作系统接口，是IEEE为要在各种UNIX操作系统上运行的软件，而定义API的一系列互相关联的标准的总称)所定义的功能,可以在不同的系统上执行,无需需改.<br>  开发容易:短时间即可完成一个功能强大又好用的脚本(字啊以后的学习中就能看到)</p>
</blockquote>
<h5 id="简单的shell脚本"><a href="#简单的shell脚本" class="headerlink" title="简单的shell脚本"></a>简单的shell脚本</h5><p><code>who</code> 能看到以下内容</p>
<blockquote>
<p>  [root/shell] ]$cat 1.sh<br>  #!/bin/bash<br>  who</p>
<p>  [root/shell] ]$./1.sh<br>  root     :0           2016-09-19 13:53 (:0)<br>  root     pts/0        2017-02-13 12:49 (:0)<br>  root     pts/2        2017-02-19 20:57 (192.168.247.1)</p>
</blockquote>
<p>表示系统当前有多少人登陆，登陆用户-使用的终端-登陆时间&amp;登出时间</p>
<p><code>who | wc -l</code>  统计当前登陆了多少人</p>
<h5 id="脚本第一行"><a href="#脚本第一行" class="headerlink" title="脚本第一行"></a>脚本第一行</h5><p><code>#/bin/bash</code> 指定运行此脚本的程序</p>
<p>也可以执行一些独立的程序 比如：<code>#/bin/awk -f</code></p>
<blockquote>
<p>  以下是几个初级的陷阱:<br>  1.对#!这一行的长度尽量不要超过64个字符<br>  2.脚本的可移植性取决于是否有完整的路径名称<br>  3.不要在选项之后放置任何空白,因为空白也会跟着选项一起传递给被引用的程序.<br>  4.需要知道解释器的完成路径的名称.这样可以规避可移植性的问题,厂商不同,同样的东西可能放在不同的地方<br>  5.一些较久的系统,内核不具备#!的能力,有些shell会自行处理,这些shell对于#!与紧随其后的解释器名称之间是否可以有空白,可能有不同的解释.</p>
<p>  查看当前发行版本可以使用的shell:cat  /etc/shells<br>  查看系统默认的shell:echo $SHELL:一般情况下是输出/bin/bash.<br>  如果想切换shell的版本,只需要直接输入shell的版本.例如想使用csh,直接输入csh即可,使用exit退出当前shell回到原shell.</p>
</blockquote>
<h5 id="shell的基本元素"><a href="#shell的基本元素" class="headerlink" title="shell的基本元素"></a>shell的基本元素</h5><p><strong>shell识别三种基本命令:</strong></p>
<ol>
<li>内建命令:就是linux的命令,例如cd,ls,mkdir等,这些命令是由于其必要性才内建的,内外一种命令的村子啊是为了效率,其中最典型的就是test,</li>
<li>shell函数:功能健全的一系列程序代码,用shell语言写成,可以像使用命令一样使用,就是在C++中调用函数.</li>
<li>外部命令:是由shell的副本(新的进程)所执行的命令,还是命令.</li>
</ol>
<p><strong>shell中的变量</strong><br>在shell中,变量值可以是(通常是)空值,也就是不含有任何字符.这是合理的,也是常见的,好用的特性.空值就是null<br>在shell中变量名的长度无限制,所能保存的字符数同样没有限制.<br>变量的赋值方式:变量名=值,中间不能有任何的空格,如果想去除shell变量的值时,需要在变量名前加上$字符.当所赋予的值包含空格的时候,需要将值用单引号或者双引号包起来,用单引号包起来的后果是单引号里面的所有特殊符号都不具备特殊含义,用双引号包起来代表特殊符号有特殊含义.<br>例如:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=syx;</span><br><span class="line">echo &apos;name&apos;  #输出 name</span><br><span class="line">echo &quot;$name&quot; #输出 syx</span><br></pre></td></tr></table></figure></p>
<p>如果想将 name1=syx,name2=zsf合并,成syxzsf<br>则<code>name=${name1}${name2},echo $name name=syxzsf</code>,貌似还有其他的合并方法,个人觉得这一种最好.<br>至于变量的四种类型什么的,暂时不学。</p>
<h4 id="简单的echo输出"><a href="#简单的echo输出" class="headerlink" title="简单的echo输出"></a>简单的echo输出</h4><p>echo的作用就是产生输出,可以提示用户,或者用来产生数据提供用户,或者产生数据进一步处理.</p>
<p>以前的echo只能将参数打印到shell交互界面上,参数之间以一个空格隔开,并以换行符号结尾.<br>后来又衍生出了-n选项,省略结尾的换行符号.</p>
<blockquote>
<p>   etho的语法:<br>   etho [string……]</p>
</blockquote>
<p>用途是产生shell脚本的输出,没有什么主要选项.行为模式是将参数打印到标准输出,参数之间用空格隔开,并以换行符结尾.转义序列用来表示特殊字符,以及控制其行为模式.</p>
<p>参　　 数：</p>
<p>-n 不要在最后自动换行<br>-e 若字符串中出现以下字符，则特别加以处理，而不会将它当成一般文字输出：<br>常用的转移序列:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\a  #发出警告声</span><br><span class="line">\b  #删除前一个字符</span><br><span class="line">\c  # 最后不加上换行符号；</span><br><span class="line">\f  #换行但光标仍旧停留在原来的位置</span><br><span class="line">\n  #换行</span><br><span class="line">\r  #回车</span><br><span class="line">\t  #水平制表符</span><br><span class="line">\v  #垂直制表符</span><br><span class="line">\\  #反斜杠字符</span><br></pre></td></tr></table></figure>
<h4 id="华丽的printf-输出"><a href="#华丽的printf-输出" class="headerlink" title="华丽的printf 输出"></a>华丽的printf 输出</h4><p>如同echo命令,printf命令可以输出简单的字符串，但是printf 不提供自动换行</p>
<h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><p><code>printf format-string [arguments...]</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">printf &quot;Hello, Shell\n&quot;</span><br><span class="line">Hello, Shell</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># format-string为双引号</span><br><span class="line">printf &quot;%d %s\n&quot; 1 &quot;abc&quot;</span><br><span class="line">1 abc</span><br><span class="line"># 单引号与双引号效果一样 </span><br><span class="line">printf &apos;%d %s\n&apos; 1 &quot;abc&quot; </span><br><span class="line">1 abc</span><br><span class="line"># 没有引号也可以输出</span><br><span class="line">printf %s abcdef</span><br><span class="line">abcdef</span><br><span class="line"># 格式只指定了一个参数，但多出的参数仍然会按照该格式输出，format-string 被重用</span><br><span class="line">printf %s abc def</span><br><span class="line">abcdef</span><br><span class="line">printf &quot;%s\n&quot; abc def</span><br><span class="line">abc</span><br><span class="line">def</span><br><span class="line">printf &quot;%s %s %s\n&quot; a b c d e f g h i j</span><br><span class="line">a b c</span><br><span class="line">d e f</span><br><span class="line">g h i</span><br><span class="line">j</span><br><span class="line"># 如果没有 arguments，那么 %s 用NULL代替，%d 用 0 代替</span><br><span class="line">printf &quot;%s and %d \n&quot; </span><br><span class="line">and 0</span><br><span class="line"># 如果以 %d 的格式来显示字符串，那么会有警告，提示无效的数字，此时默认置为 0</span><br><span class="line">printf &quot;The first program always prints&apos;%s,%d\n&apos;&quot; Hello Shell</span><br><span class="line">-bash: printf: Shell: invalid number</span><br><span class="line">The first program always prints &apos;Hello,0&apos;</span><br></pre></td></tr></table></figure>
<h4 id="I-O重定向"><a href="#I-O重定向" class="headerlink" title="I/O重定向"></a>I/O重定向</h4><h5 id="标准的输入输出"><a href="#标准的输入输出" class="headerlink" title="标准的输入输出"></a>标准的输入输出</h5><p>在了解重定向之前,需要先了解一下标准的输入输出,总的来说,所有的数据都有来源,也都应该都重点,默认的标准输入输出就是终端.<br>例如:<br>我们只是输入  cat命令,并不指定任何参数,接着我们输入hello world,就是打印helloworld 到终端.</p>
<blockquote>
<p>  [root~] ]$cat<br>  test #输入的<br>  test #输出的</p>
</blockquote>
<p><strong>所谓的I/O重定向就是通过与终端交互,或是在shell脚本里设置,重新安排从哪里输入或者输出到哪里.</strong></p>
<h5 id="重定向与管道"><a href="#重定向与管道" class="headerlink" title="重定向与管道"></a>重定向与管道</h5><p><strong>&lt;</strong>    改变标准输入<br><strong>></strong>  改变标准输出</p>
<p>重定向符号在目的地文件不存在的时候会新建一个文件，如果存在，则会覆盖！<br><strong>&gt;&gt;</strong> 此重定向符号为追加<br><strong>|</strong> 管道可以将 标准输出 改为标准输入  如 <code>cat /etc/paswd | wc -l</code></p>
<blockquote>
<p>  在构造管道的时候,应该试着让每个阶段的数据量变少,也就是说,把会让数据变少的命令放在前边,提高后面的命令的执行效率.例如,sort之前,先用grep找出相关的行,这样可以让sort少做些事.</p>
</blockquote>
<h4 id="dev-null和-dev-tty"><a href="#dev-null和-dev-tty" class="headerlink" title="/dev/null和/dev/tty"></a>/dev/null和/dev/tty</h4><p><strong>/dev/null</strong></p>
<blockquote>
<p>  当被用作重定向输出时，程序的输出被直接丢弃。该文件用在那些不关心程序输出的地方。<br>  当被用作重定向输入时，输入则是文件结束。<br><strong>/dev/tty</strong><br>  当被用作重定向时，表示重定向到终端。</p>
</blockquote>
<h4 id="shell基本命令查找与添加"><a href="#shell基本命令查找与添加" class="headerlink" title="shell基本命令查找与添加"></a>shell基本命令查找与添加</h4><blockquote>
<p>  shell会沿着\$PATH来寻找命令.\$PATH是一个以冒号分割的目录列表,你可以在列表所指定的目录下找到所要执行的命令.命令可能是shell脚本,也可能是编译后的可执行文件,从用户角度来看,二者并无不同.</p>
<p>  默认路径至少包含/bin和/usr/bin,或许还包含其他的.<br>  名称为bin的目录用来保存可执行文件.<br>  如果要编写自己的脚本,最好准备一个自己的bin目录来存放他们,并且让shell能够自动找到他们.<br>  要想永久生效,在/etc/profile文件中把你的bin目录加入到\$PATH,而每次登陆时Shell都将读取.profile文件.<br>  PATH=\$PATH:[你存放脚本的目录]   如“\$PATH:/usr/local/myshell<br>  $PATH里的空项目表示当前项目.空项目位于路径中间时,可以用两个连续的冒号来表示,如果将冒号直接置于最前端或尾端,分别表示查找的时候最先查找或最后查找当前目录.</p>
<p>  \$PATH=:/bin:/usr/bin            先找当前目录<br>  \$PATH=/bin::/usr/bin            当前目录居中<br>  \$PATH=/bin:/usr/bin:            最后找当前目录<br>  不应该在查找路径中放进当前项目.</p>
</blockquote>
<h4 id="访问脚本的参数"><a href="#访问脚本的参数" class="headerlink" title="访问脚本的参数"></a>访问脚本的参数</h4><p>比如我们想查看当前某个用户是否登陆，那么新建脚本 finduser.sh</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">who | grep $1</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./finduser/sh root</span><br><span class="line">$1 就是指执行脚本传入的第一个参数 root</span><br><span class="line">root     :0           2016-09-19 13:53 (:0)</span><br><span class="line">root     pts/0        2017-02-13 12:49 (:0)</span><br><span class="line">root     pts/2        2017-02-20 20:45 (192.168.247.1)</span><br></pre></td></tr></table></figure>
<p>理想状态下，是这样的，但是如果用户不输入参数，脚本就会报错了，所以更好的情况是把脚本可能出现的事件都做个判断以及友情的提示，更加智能化</p>
<h4 id="基本的正则表达式-BRE"><a href="#基本的正则表达式-BRE" class="headerlink" title="基本的正则表达式(BRE)"></a>基本的正则表达式(BRE)</h4><h5 id="简单的正则举例"><a href="#简单的正则举例" class="headerlink" title="简单的正则举例"></a>简单的正则举例</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tolstoy: 匹配一行上任意位置的7个字母:tolstoy</span><br><span class="line">^tolstoy: 7个字母tolstoy,出现在一行的开头</span><br><span class="line">tolstoy$: 出现在一行的结尾</span><br><span class="line">^tolstoy$: 正好包含这7个字母的一行,没有其他的任何字符.</span><br><span class="line">[tT]olstoy: 在一行的任意位居中,含有Tolstoy或者tolstoy</span><br><span class="line">tol.toy:在一行的任意位居中,含有tol这三个字母,加上一个特殊字符,在接着toy这三个字母</span><br><span class="line">tol.*toy:在一行的任意位居中,含有tol这三个字母,加上任意的0或者多个字符,</span><br><span class="line"> 再继续toy这三个字母(例如:toltoy,tolstoy,tolWHOtoy都是满足要求的).</span><br></pre></td></tr></table></figure>
<h5 id="shell中的通配符"><a href="#shell中的通配符" class="headerlink" title="shell中的通配符"></a>shell中的通配符</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*: 代表0个或者多个任意字符</span><br><span class="line">?: 代表一定有一个的任意字符</span><br><span class="line">[]: 代表一定有一个在括号内的字符(非任意字符).例如[abcd]代表一定有一个字符,可能是abcd这四个选项的任意一个.</span><br><span class="line">[-]: 代表在编码顺序内的所有自负.例如:0-9代表0到9之间的所有数字,因为数字的语系编码是连续的.</span><br><span class="line">[^]: 若括号内的第一个字符为指数字符\(^) 表示反选,例如:\^abc代表是非abc的其他字符就可以.</span><br></pre></td></tr></table></figure>
<p>#####shell中的特殊字符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#:   注释字符</span><br><span class="line">\:   将特殊字符或者通配符还原成一般字符</span><br><span class="line">|:   管道符,分割两个管线命令的界定</span><br><span class="line">;:   连续命令下达分隔符</span><br><span class="line">~:   用户的家目录</span><br><span class="line">$:   放在变量前面,正确使用变量</span><br><span class="line">&amp;:   工作控制,将命令编程背景下工作</span><br><span class="line">!:   非(!)的意思,逻辑运算符</span><br><span class="line">&gt;,&gt;&gt;:   输出重定向,分别是覆盖和追加</span><br><span class="line">&gt;&lt;,&lt;&lt;:   输入重定向</span><br><span class="line">&gt;&apos;&apos;:   单引号,不具有变量置换的功能</span><br><span class="line">&gt;&quot;&quot;:   双引号,具有变量置换的功能</span><br><span class="line">&gt;():   在中间的为子shell的起始与结束</span><br><span class="line">&gt;&#123;]:   在中间为命令块的组合</span><br></pre></td></tr></table></figure></p>
<p>#####shell中正则表达式的控制字符</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">^:     匹配行首位置</span><br><span class="line">$:     匹配行尾位置</span><br><span class="line">.:     匹配任意祖父</span><br><span class="line">*:     对*之前的匹配整体或字符匹配任意次(包括0次)</span><br><span class="line">\?:     对\?之前的匹配整体或字符匹配0次或1次</span><br><span class="line">\&#123;n\&#125;:     对 \ &#123; 之前的匹配整体或字符匹配n次</span><br><span class="line">\&#123;m,\&#125;:     对 \ &#123; 之前的匹配整体或字符匹配至少m次</span><br><span class="line">\&#123;m,n&#125;:     对 \ &#123; 之前的匹配整体或字符匹配m到n次 </span><br><span class="line">[abcdef]:   对单字符而言匹配中的字符</span><br><span class="line">[a-z];   对单字符而言,匹配任意一个小写字母</span><br><span class="line">[^a-z]:   不匹配括号中的内容</span><br></pre></td></tr></table></figure>
<h5 id="基本正则表达式"><a href="#基本正则表达式" class="headerlink" title="基本正则表达式"></a>基本正则表达式</h5><h6 id="匹配单个字符"><a href="#匹配单个字符" class="headerlink" title="匹配单个字符"></a>匹配单个字符</h6><blockquote>
<p>  1.匹配一般字符:一般字符是指无特殊含义的字符,包括所有文本和数字字符,绝大多数的空白字符以及标点符号字符,因此,正则a,匹配a.</p>
<p>  2.如果相匹配<em>,因为</em>是特殊字符,所以需要用 \ 转义,正则*,匹配*.</p>
<p>  3..(点号)字符意即”任意字符”,例如a.c匹配于abc,aac.</p>
<p>  4.使用方括号表达式.例如x[abcdefg]z,可以匹配xaz,xbz,等,方括号里如果存在(^),表示取反的意思,就是说不匹配列表里的任意字符.</p>
<p>  [0123456789]表示所数字,但是这样写太麻烦,我们可以用[0-9]来表示,[abcdefg]同样可以用[a-g]</p>
</blockquote>
<h6 id="单个表达式匹配多字符"><a href="#单个表达式匹配多字符" class="headerlink" title="单个表达式匹配多字符"></a>单个表达式匹配多字符</h6><blockquote>
<p>  最简单的办法就是把它们一一列出来:正则abc匹配于abc.<br>  虽然(.)meta字符与方括号表达式都提供了依次匹配一个字符的很好方式,单正则真正强大而有力地功能是修饰符meta字符的使用上.<br>  最常用的修饰符是(*),表示匹配0个或多个前面的单个字符.因此ab*c表示”匹配一个a,0个或多个b字符以及a空c”.这个正则匹配的有ac,abc,abbcabbbbc.<br>  匹配0或多个,不表示匹配其他的某一个.例如正则ab<em>c,文本aQc是不匹配的.但是ac是匹配的.<br>  (</em>)修饰符虽然好用,但是他没有限制,如要只要指定次数,使用一个复杂的方括号表达式虽然也能指定次数,但是太过麻烦.我们就引入了区间表达式.所谓的区间表达式有三种变化<br>  <code>\{n\}</code>  前置正则表达式所得结果重现n次<br>  <code>\{n,\}</code> 前置正则表达式所得结果至少出现n次<br>  <code>\{n,m\}</code> 出现n到m次<br>  例如我们想要表达”重现5个<code>a&#39; =&gt;a\{5\}&#39;</code>,重现10到42个<code>q&#39;=&gt;q\{10,42\}&#39;</code>;</p>
</blockquote>
<h6 id="文本匹配锚点"><a href="#文本匹配锚点" class="headerlink" title="文本匹配锚点"></a>文本匹配锚点</h6><blockquote>
<p>  两个meta字符是脱节符号(^),与货币字符($),他们叫做锚点,因为其用途在限制正则表达式匹配时,针对要被匹配字符的开始或者结尾处进行匹配,<br>  假定有一串字符串:abcABCdefDEF</p>
</blockquote>
<table>
<thead>
<tr>
<th>模式</th>
<th>是否匹配</th>
<th>理由</th>
</tr>
</thead>
<tbody>
<tr>
<td>ABC</td>
<td>是</td>
<td>居中的456匹配</td>
</tr>
<tr>
<td>^ABC</td>
<td>否</td>
<td>起始不是ABC</td>
</tr>
<tr>
<td>def</td>
<td>是</td>
<td>居中的def匹配</td>
</tr>
<tr>
<td>def$</td>
<td>否</td>
<td>结尾不是def</td>
</tr>
<tr>
<td>[[:upper:]]{3}</td>
<td>是</td>
<td>结尾的大写ABC匹配</td>
</tr>
<tr>
<td>[[:upper:]]{3}$</td>
<td>是</td>
<td>结尾的大写DEF匹配</td>
</tr>
<tr>
<td>^[[:alpha:]]{3}</td>
<td>是</td>
<td>结尾的大写ABC匹配</td>
</tr>
</tbody>
</table>
<p>#####BRE运算优先级,由高到低<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[..]\[==][::] -----用于字符拍的方括号符号</span><br><span class="line">\metacharacter ----转移的meta字符</span><br><span class="line">[] --------------- 方括号表达式</span><br><span class="line">\&#123; \&#125;  ------------子表达式</span><br><span class="line">*  \&#123; \ &#125; ---------前置单个字符重现的正则表达式</span><br><span class="line">无符号--------------连续</span><br><span class="line">^$  -------------- 锚点</span><br></pre></td></tr></table></figure></p>
<h4 id="扩展正则表达式-ERE"><a href="#扩展正则表达式-ERE" class="headerlink" title="扩展正则表达式(ERE)"></a>扩展正则表达式(ERE)</h4><p>  BRE与ERE在大多数的meta字符与功能应用上几乎是完全一致,单ERE理由写meta字符看起来与BRE类似,却具有完全不同的类型.</p>
<blockquote>
<p>  扩展正则表达式与基础正则表达式的唯一区别在于：? + () {} 这几个字符。<br>  基础正则表达式中，如果你想? + () {}表示特殊含义，你需要将他们转义<br>  而扩展正则表达式中，如果你想? + () {} 不表示特殊含义，你需要将他们转义。<br>  转义符号，都是一样的，\符号。<br>  所谓特殊含义，就是正则表达式中的含义。非特殊含义，就是这个符号本身。</p>
</blockquote>
<p>例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo aaa|grep &apos;a?&apos;;</span><br><span class="line">echo aaa|grep &apos;a\?&apos;; \#aaa</span><br><span class="line">\#egrep使用的是扩展正则表达式</span><br><span class="line">echo aaa|egrep &apos;a?&apos;;     \#aaa</span><br><span class="line">echo aaa|egrep &apos;a\?&apos;;</span><br></pre></td></tr></table></figure></p>
<h5 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h5><blockquote>
<p>  如果希望打印文件,最好预先处理一下,包括调整边距,设置行高,设置标题等,这样打印出来的文件更加美观.当然,不处理也能打印,但是可能会比较丑陋.</p>
</blockquote>
<p>  pr命令<br>pr命令就是转换文件格式的,可以把较大的文件分割成多个页面进行打印,并未每个页面添加标题.<br> 语法:<br><figure class="highlight plain"><figcaption><span>option(s) filename(s)```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">常见选项:</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>  -k:分成激烈打印,默认为1<br>  -d:两倍行距(并不是所有版本的pr都有效)<br>  -h “title” 设置每个文件的标题<br>  -l PAGE_LENGTH :每页显示多少行.默认是每个页面一共66行.<br>  -o MARGIN:每行缩进的空格数<br>  -w PAGE_WIDTH:多列输出时,设置页面宽度,默认是72个字符.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">例如我有一个文件food,里面的内容为:</span><br><span class="line">&gt;   Sweet Tooth</span><br><span class="line">&gt;   Bangkok Wok</span><br><span class="line">&gt;   Mandalay</span><br><span class="line">&gt;   Afghani Cuisine</span><br><span class="line">&gt;   Isle of Java</span><br><span class="line">&gt;   Big Apple Deli</span><br><span class="line">&gt;   Sushi and Sashimi</span><br><span class="line">&gt;   Tio Pepe&apos;s Peppers</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>   使用命令:pr -2 -h “food” food<br>   输出结果为:<br>   2015-06-22 12:27                      food<br>   weet Tooth                          Isle of Java<br>   Bangkok Wok                         Big Apple Deli<br>   Mandalay                            Sushi and Sashimi<br>   Afghani Cuisine                     Tio Pepe’s Peppers’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> 解释:</span><br><span class="line">&gt;pr会以文件的修改时间作为页面标题的时间戳;如果输入时自管道而来,则使用当前的时间,接上文件名称(如果输入的数据内容在管道中,则为空)以及页码.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;   lp 和 lpr 命令将文件传送到打印机进行打印。使用 pr 命令将文件格式化后就可以使用这两个命令来打印。</span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">``` pr -2 -h &quot;food&quot; food | lpr</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>  命令成功执行会返回一个表示打印任务的ID，通过这个ID可以取消打印或者查看打印状态。</p>
<p>  如果你希望打印多份文件，可以使用 lp 的 -nNum 选项，或者 lpr 命令的 -Num 选项。Num 是一个数字，可以随意设置。</p>
<p>  如果系统连接了多台打印机，可以使用 lp 命令的 -dprinter 选项，或者 lpr 命令的 -Pprinter 选项来选择打印机。printer 为打印机名称。<br>  lpstat 和 lpq 命令<br>  lpstat 命令可以查看打印机的缓存队列（有多少个文件等待打印），包括任务ID、所有者、文件大小、请求时间和请求状态。</p>
<p>  提示：等待打印的文件会被放到打印机的的缓存队列中。</p>
<p>  使用 lpstat -o 命令查看打印机中所有等待打印的文件，lpstat -o 命令按照打印顺序输出队列中的文件。</p>
<p>  cancel 和 lprm 分别用来终止 lp 和 lpr 的打印请求。使用这两个命令，需要指定ID（由 lp 或 lpq 返回）或打印机名称。<br>  lprm 命令用来取消当前用户的正在等待打印的文件，使用任务号作为参数可以取消指定文件，使用横线(-)作为参数可以取消所有文件。<br>  lprm 会返回被取消的文件名。</p>
</blockquote>
<h4 id="提取文件开头或者结尾"><a href="#提取文件开头或者结尾" class="headerlink" title="提取文件开头或者结尾"></a>提取文件开头或者结尾</h4><h5 id="head-amp-tail"><a href="#head-amp-tail" class="headerlink" title="head &amp; tail"></a>head &amp; tail</h5><blockquote>
<p>  个人觉得最好用的显示文本文件的头几行最好用的是 head -n [file(s)]</p>
</blockquote>
<p>  head的常用选项:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;   -q: 隐藏文件名</span><br><span class="line">&gt;   -v: 显示文件名</span><br><span class="line">&gt;   -c&lt;字节&gt;: 显示字节数</span><br><span class="line">&gt;   -n&lt;行数&gt;: 显式的行数</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>  在交互式shell通信期中,有时需要监控某个文件的输出—-如日志这类持续写入状态的文件.-f选项这时就派上用场了,他可以要求tail显示指定的文件结尾行数,接着进入无止境的循环中—-休息一秒后又再度醒来并检查是否需要显示更多的输出结果.再设置-f的状态下,tail只有当你中断它时才会停止—-通常是输入Ctrl+C来中断;</p>
</blockquote>
<figure class="highlight plain"><figcaption><span>-n 25 -f</span><a href="/var/log/messages">```    此选项不可用于shell脚本.</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;   直到按了ctrl+c选项后才停止.</span><br><span class="line">&gt;   由于tail加上-f选项之后便不会自己中断,所以此选项不能用于shell脚本.使用-f选项有实时监听的效果.</span><br><span class="line"></span><br><span class="line"> head案例:</span><br></pre></td></tr></table></figure>
<blockquote>
<p>  使用命令:head -n 3 /etc/passwd结果是显示文件的头三行,<br>  如果命令为:head -n -3 /etc/passwd 结果是显示除了最后三行都显示,注意到区别没有?<br>  相似的,显示文件的前n个字节,以及除了最后n个字节以外的内容也没问题了.<br>  head和tail如果组合使用:<br>  head -n 5 /etc/passwd | tail -n 3<br>  输出/etc/passwd的第三道第五行.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">#### shell变量与算数</span><br><span class="line"></span><br><span class="line">test.sh</span><br><span class="line"></span><br><span class="line">name=vic #定义一个变量</span><br><span class="line"></span><br><span class="line">readonly name #变量只读</span><br><span class="line"></span><br><span class="line">unset name  #删除变量</span><br><span class="line"></span><br><span class="line">sleep 5 #等待5秒</span><br><span class="line"></span><br><span class="line">##### 参数的展开</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>var=”hello world”<br>echo ${var}</p>
<p>#hello world</p>
<p>#所谓的参数的展开，基本上就是变量，shell中，参数是变量的超集，只不过变量不能以数字开头，而参数可以，比如$1，表示传递的第一个参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### 位置参数</span><br></pre></td></tr></table></figure></p>
<p>$0           #程序名<br>$1到$9       #直接表示<br>${10}        #大于9的时候要用花括号</p>
<p>$<em>          #接收所有参数，<br>$@          #传递给脚本或函数的所有参数。被双引号(“ “)包含时，与 $</em> 稍有不同</p>
<p>#但是当它们被双引号(“ “)包含时，”$*” 会将所有的参数作为一个整体！以”$1 $2 … $n”的形式输出所有参数；”$@” 会将各个参数分开，以”$1” “$2” … “$n” 的形式输出所有参数。</p>
<p>$?          #上个命令的退出状态，或函数的返回值<br>$$          #SHELL的进程ID<br>$#          #参数个数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### 展开运算符（参数的运算符）</span><br></pre></td></tr></table></figure></p>
<p>${varname:-zili}</p>
<p>#如果varname存在且不是NULL，返回varname，反之，设为zili。可用于设置变量默认值！！</p>
<p>${varname:+zili}</p>
<p>#如果varname存在且不是NULL，返回varname，反之，返回null<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### 模式运算符</span><br></pre></td></tr></table></figure></p>
<p>var=br1br2ead<br>echo ${var$$<em>br}<br>输出:2ead<br>echo ${var#</em>br}<br>输出:1br2ead</p>
<p>${parameter%word}或${parameter%%word}<br>作用:与前例相似,唯一不同的是从$parameter的为不开始匹配.<br>var=”La.Maison.en.Petits.Cubes.avi”<br>echo ${var%.<em>}<br>输出:La.Maison.en.Petits.Cubes<br>echo ${var%%.</em>}<br>输出:La</p>
<p>分析:匹配案例中的”.”时,shell会从$var的尾部开始查找”.”,如果是最短匹配(echo ${var%.<em>}),则会找到第一个”.”就停止,否则(echo ${var%%.</em>})会一直找到最后一个”.”才停止.可以看到,这种用法可以分方便的去掉文件后缀,从而得到文件名.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 退出状态和 if 语句</span><br><span class="line"></span><br><span class="line">##### 退出状态</span><br><span class="line"></span><br><span class="line">&gt;   每一条命令,不管是内置的,shell函数,还是外部的,当它退出时,都会返回一个小的整数值给引用它的程序,这就是程序的退出状态.在shell下执行进程有很多方式可取用程序的退出状态.</span><br><span class="line"></span><br><span class="line">&gt;   以管理状态来说，0 表示成功，也就是当$? 返回的值为0的时候，证明程序执行成功，其他为失败</span><br></pre></td></tr></table></figure></p>
<p>0       #命令成功地退出</p>
<blockquote>
<p>0      #在重定向或单词展开期间(~,变量,命令,算数展开,以及单词切割)失败<br>1-125   #命令不成功的退出.特定的退出值的含义,是由各个单独的命令定义的.<br>126     #命令找到了,但文件无法执行<br>127     #命令没找到<br>128    #命令因受到信号而死亡<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###### exit</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>cd $(dirname $0) || exit 1</p>
<p>##进入脚本所在目录 否则退出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>if [ $# -ne “2” ];<br>    then<br>    echo ‘’<br>    exit 2<br>fi<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### if语法</span><br></pre></td></tr></table></figure></p>
<p>if [xxxx];then<br>    xxxx<br>fi</p>
<p>if [xxxx];then<br>    xxxx<br>    else<br>        xxxx<br>fi</p>
<p>if [xxxx];then<br>    xxxx<br>    elif [xxxx];then<br>    xxxx<br>….<br>….<br>else<br>    xxxx<br>fi<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>#!/bin/bash<br>read -p “what is your backup directoy : “ BakDir<br>if [ -d $BakDir ];then<br>        echo “$BakDir alerdy exist”<br>else<br>        echo “$BakDir is not exist,will make it”<br>        mkdir $BakDir<br>fi<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>#!/bin/bash<br>UserNum=<code>who | wc -l</code><br>if [ $UserNum -gt 3 ];<br>        then<br>        echo “Alert, too many login users ( Total: $UserNum).”<br>else<br>        echo “Login Users:”<br>        who | awk ‘{print $1,$2}’<br>fi<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**注意**</span><br><span class="line"></span><br><span class="line">&gt; if 与[ 之间必须有空格</span><br><span class="line">&gt;</span><br><span class="line">&gt;  [ ]与判断条件之间也必须有空格</span><br><span class="line">&gt;</span><br><span class="line">&gt; ]与; 之间不能有空格</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 逻辑判断</span><br><span class="line"></span><br><span class="line">##### 字符串判断</span><br></pre></td></tr></table></figure></p>
<p>str1 = str2　 　　当两个串有相同内容、长度时为真<br>str1 != str2　　　当串str1和str2不等时为真<br>-n str1　　　　　 当串的长度大于0时为真(串非空)<br>-z str1　　　　　 当串的长度为0时为真(空串)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### 数字的判断</span><br></pre></td></tr></table></figure></p>
<p>int1 -eq int2　　　　两数相等为真<br>int1 -ne int2　　　　两数不等为真<br>int1 -gt int2int1大于int2为真<br>int1 -ge int2int1大于等于int2为真<br>int1 -lt int2int1小于int2为真<br>int1 -le int2int1小于等于int2为真<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### 文件的判断</span><br></pre></td></tr></table></figure></p>
<p>-r file　　　　　用户可读为真<br>-w file　　　　　用户可写为真<br>-x file　　　　　用户可执行为真<br>-b file            若文件存在且是一个块特殊文件，则为真<br>-c file            若文件存在且是一个字符特殊文件，则为真<br>-d file            若文件存在且是一个目录，则为真<br>-e file            若文件存在，则为真<br>-f file            若文件存在且是一个规则文件，则为真<br>-g file            若文件存在且设置了SGID位的值，则为真<br>-h file            若文件存在且为一个符合链接，则为真<br>-k file            若文件存在且设置了”sticky”位的值<br>-p file            若文件存在且为一已命名管道，则为真<br>-s file            若文件存在且其大小大于零，则为真<br>-u file            若文件存在且设置了SUID位，则为真<br>-o file            若文件存在且被有效用户ID所拥有，则为真<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### 复杂的逻辑判断</span><br></pre></td></tr></table></figure></p>
<p>-a 　 　　　　　与<br>-o　　　　　　　或<br>!　　　　　　　 非<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#####test的使用</span><br></pre></td></tr></table></figure></p>
<p>#!/bin/bash<br>cd /bin<br>if test -e ./bash   //其实这里相当于if [ -e ./bahs ]<br>then<br>        echo ‘the file already exist!’<br>else<br>        echo ‘the file not exist!’<br>fi<br>输出结果为:the file already exist!<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### 注意和简写与扩展</span><br><span class="line"></span><br><span class="line">###### 注意</span><br></pre></td></tr></table></figure></p>
<p>if [ -n “$str” -a -f “$file” ]      一个test命令,两种条件<br>if [-n “str”] &amp;&amp; [ -f “$file” ]      两个命令,一块接方式计算<br>if [-n “$str” &amp;&amp; -f “$file”]        语法错误！！！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###### 简写</span><br></pre></td></tr></table></figure></p>
<p>[1 eq1 ] &amp;&amp;echo’OK’<br>输出:ok</p>
<p>[ 2 &lt; 1 ] &amp;&amp;echo ‘OK’<br>输出:-bash: 1: No such file or directory<br>使用命令:[ 2 \&lt; 1 ] &amp;&amp;echo ‘OK’这样就可以了</p>
<p>使用命令:[ 2 -gt 1 -a 3 -lt 4 ]&amp;&amp;echo ‘Ok’<br>输出:Ok</p>
<p>使用命令:[ 2 -gt 1 &amp;&amp; 3 -lt 4 ]&amp;&amp;echo ‘Ok’<br>输出:-bash: [: missing `]’</p>
<p>注意：在[] 表达式中，常见的&gt;,&lt;需要加转义字符，表示字符串大小比较，以acill码位置作为比较。不直接支持&lt;&gt;运算符，还有逻辑运算符 || 和 &amp;&amp; 它需要用-a[and] –o[or]表示。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###### 扩展 [[]]</span><br></pre></td></tr></table></figure></p>
<p>[[ 2 &lt; 3 ]]&amp;&amp;echo ‘OK’<br>输出OK.</p>
<p>[[ 2 &lt; 3 &amp;&amp; 4 &lt; 5 ]] &amp;&amp; echo ‘ok’<br>输出:ok</p>
<p>注意：[[]] 运算符只是[]运算符的扩充。能够支持&lt;,&gt;符号运算不需要转义符，它还是以字符串比较大小。里面支持逻辑运算符 || 和 &amp;&amp; bash 的条件表达式中有三个几乎等效的符号和命令：test，[]和[[]]。通常，大家习惯用if [];then这样的形式。而[[]]的出现，根据ABS所说，是为了兼容&gt;&lt;之类的运算符。</p>
<p>不考虑对低版本bash和对sh的兼容的情况下，用[[]]是兼容性强，而且性能比较快，在做条件运算时候，可以使用该运算符。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### case</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">#!/bin/sh</span><br><span class="line">read -p &apos;input a number 1 to 4&apos; unum</span><br><span class="line">case $unum in</span><br><span class="line">    1) echo &apos;Number is 1&apos;</span><br><span class="line">    ;;</span><br><span class="line">    2|3) echo &apos;Number is 2 or 3&apos;</span><br><span class="line">    ;;</span><br><span class="line">    4) echo &apos;Number is 4&apos;</span><br><span class="line">    ;;</span><br><span class="line">    *) echo &apos;1 to 4,Please&apos;</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p> <em>) 相当于其他语言中的default。<br> 除了</em>)模式，各个分支中;;是必须的，;;相当于其他语言中的break<br>  | 分割多个模式，相当于or</p>
</blockquote>
<h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><h5 id="for"><a href="#for" class="headerlink" title="for"></a>for</h5><blockquote>
<p>  for循环是将串行的元素取出,依次放入指定的变量中,重复执行在do和done之间的命令,直到所有元素取尽为止</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for  变量 in  串行</span><br><span class="line">do</span><br><span class="line">....</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for((i=0;i&lt;100;i++))</span><br><span class="line">do</span><br><span class="line">....</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">for i in $(seq 1 10)</span><br><span class="line">do</span><br><span class="line">    mkdir /tmp/test$&#123;i&#125;</span><br><span class="line">    cd /tmp/test$&#123;i&#125;</span><br><span class="line">    for j in $(seq 1 5)</span><br><span class="line">        do  </span><br><span class="line">            touch test$&#123;j&#125;</span><br><span class="line">        done</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">dir=&quot;/var&quot;</span><br><span class="line">cd $dir</span><br><span class="line">for i in $(ls $dir)</span><br><span class="line">do  </span><br><span class="line">    if [ -d $i ];then</span><br><span class="line">        du -sh $i</span><br><span class="line">     fi  </span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h5 id="while"><a href="#while" class="headerlink" title="while"></a>while</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while 条件测试</span><br><span class="line">do</span><br><span class="line">....</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">sum=100</span><br><span class="line">i=0</span><br><span class="line">while [ $i -le 100 ]</span><br><span class="line">    do</span><br><span class="line">        sum=$(($sum+$i))</span><br><span class="line">        i=$(($i+1))</span><br><span class="line">    done</span><br><span class="line">echo $sum</span><br></pre></td></tr></table></figure>
<h5 id="until"><a href="#until" class="headerlink" title="until"></a>until</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">until 条件测试</span><br><span class="line">do</span><br><span class="line">....</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">#条件为真时，循环停止</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sum=0</span><br><span class="line">i=1</span><br><span class="line">until ((i&gt;100))</span><br><span class="line">do</span><br><span class="line">        sum=$(( $sum+$i ))</span><br><span class="line">        i=$(( $i+1 ))</span><br><span class="line">done</span><br><span class="line">echo $sum</span><br></pre></td></tr></table></figure>
<h4 id="退出-跳出循环"><a href="#退出-跳出循环" class="headerlink" title="退出/跳出循环"></a>退出/跳出循环</h4><h5 id="break"><a href="#break" class="headerlink" title="break"></a>break</h5><blockquote>
<p>  直接打断循环</p>
</blockquote>
<h5 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h5><blockquote>
<p>  跳过本次循环</p>
</blockquote>
<h5 id="shift"><a href="#shift" class="headerlink" title="shift"></a>shift</h5><blockquote>
<p>  shift每执行一次，参数指针像右移动一位，</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">until [ $# -eq 0 ]</span><br><span class="line">do</span><br><span class="line">    echo &quot;第一个参数为: $1 参数个数为: $#&quot;</span><br><span class="line">    shift</span><br><span class="line">don</span><br><span class="line"></span><br><span class="line">第一个参数为: 1 参数个数为: 4</span><br><span class="line">第一个参数为: 2 参数个数为: 3</span><br><span class="line">第一个参数为: 3 参数个数为: 2</span><br><span class="line">第一个参数为: 4 参数个数为: 1</span><br></pre></td></tr></table></figure>
<h5 id="getopts"><a href="#getopts" class="headerlink" title="getopts"></a>getopts</h5><blockquote>
<p>  以后研究</p>
</blockquote>
<h4 id="Linux相关命令详解"><a href="#Linux相关命令详解" class="headerlink" title="Linux相关命令详解"></a>Linux相关命令详解</h4><h5 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h5><h6 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h6><p>grep (option) [file]</p>
<h6 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h6><blockquote>
<p>  -A 1 表示找到所有匹配行，并显示所有匹配行后的一行<br>  -B 1  表示找到所有匹配行，并显示所有匹配行的前面一行<br>  -C 1表示找到所有匹配行，并显示所有匹配行的前一行，后一行<br>  -V:显示不匹配的行<br>  -a 表示把所有文件当作ASCII文件来处理 搜索二进制文件<br>  -b 表示显示match的字符串在文件中的offset<br>  -c 显示有多少行match<br>  -e 后面跟一个正则表达式，指定多个正则表达式的时候很有用<br>  -f可以指定pattern在我们的文件中   pattern文件中的每一行都会来进行匹配<br>  -i:模式匹配时忽略大小写<br>  -l 出匹配模式的文件名称,而不是打印匹配的行<br>  -m 最多匹配几个后，就停止，这样速度会比较快<br>  -n 匹配之后，在前面打印行号，这个还是有用的<br>  -o 只打印匹配的内容<br>  -R 搜索子目录</p>
</blockquote>
<h6 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h6><p>文件，文档等</p>
<h6 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h6><blockquote>
<p>grep -n ‘root’ /etc/passwd</p>
<p>grep -m 1 ‘root’ /etc/passwd</p>
</blockquote>
<h5 id="tr"><a href="#tr" class="headerlink" title="tr"></a>tr</h5><h6 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h6><p><code>tr (选项) (参数)</code></p>
<h6 id="选项-1"><a href="#选项-1" class="headerlink" title="选项"></a>选项</h6><blockquote>
<p>  -c或——complerment：取代所有不属于第一字符集的字符；<br>  -d或——delete：删除所有属于第一字符集的字符；<br>  -s或——squeeze-repeats：把连续重复的字符以单独一个字符表示；<br>  -t或——truncate-set1：先删除第一字符集较第二字符集多出的字符。</p>
</blockquote>
<h6 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h6><blockquote>
<p>  字符集1：指定要转换或删除的原字符集。当执行转换操作时，必须使用参数“字符集2”指定转换的目标字符集。但执行删除操作时，不需要参数“字符集2”；<br>  字符集2：指定要转换成的目标字符集。</p>
</blockquote>
<h6 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h6><p>输入的字符串大写转成小写：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;HELLO WORLD&quot; | tr &apos;A-Z&apos; &apos;a-z&apos;</span><br><span class="line">hello world</span><br><span class="line">#由于是转换，所以必须要有字符集2 也就是&apos;a-z&apos;</span><br></pre></td></tr></table></figure>
<p>用tr压缩字符，可以压缩输入中重复的字符：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;thissss is      a text linnnnnnne.&quot; | tr -s &apos; sn&apos;</span><br><span class="line">this is a text line.</span><br></pre></td></tr></table></figure>
<h5 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h5><blockquote>
</blockquote>
<h6 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h6><blockquote>
<p>  sed的命令格式： sed [option] ‘sed command’filename<br>  sed的脚本格式：sed [option] -f ‘sed script’filename</p>
</blockquote>
<h6 id="选项-2"><a href="#选项-2" class="headerlink" title="选项"></a>选项</h6><blockquote>
<p>  -n ：只打印模式匹配的行<br>  -e ：直接在命令行模式上进行sed动作编辑，此为默认选项<br>  -f ：将sed的动作写在一个文件内，用–f filename 执行filename内的sed动作<br>  -r ：支持扩展表达式<br>  -i ：直接修改文件内容</p>
</blockquote>
<h6 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sed -n &apos;5p&apos; /etc/passwd         #打印某一行</span><br><span class="line">sed -n &apos;5,8P&apos; /etc/passwd       #打印5-8行</span><br><span class="line">sed -n &apos;/root/p&apos; /etc/passwd     #匹配某字符的行</span><br><span class="line">sed -n &apos;/root/,5p&apos; /etc/passwd   #以匹配某字符的行 到某行</span><br><span class="line">sed -n &apos;1,/adm/p&apos; /etc/passwd    #匹配从哪里开始 以某关键字结尾的行</span><br><span class="line">sed -n &apos;1,4&#123;=;p&#125;&apos; /etc/passwd    #打印带行号的</span><br><span class="line">sed -n &apos;1,4!&#123;=;p&#125;&apos; /etc/passwd   # ！感叹号取反 不打印1-4行</span><br></pre></td></tr></table></figure>
<h6 id="sed-匹配正则-r"><a href="#sed-匹配正则-r" class="headerlink" title="sed 匹配正则 -r"></a>sed 匹配正则 -r</h6><p>选项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">^       锚点行首的符合条件的内容，用法格式&quot;^pattern&quot;</span><br><span class="line">$       锚点行首的符合条件的内容，用法格式&quot;pattern$&quot;</span><br><span class="line">^$      空白行</span><br><span class="line">.       匹配任意单个字符</span><br><span class="line">*       匹配紧挨在前面的字符任意次(0,1,多次)</span><br><span class="line">.*      匹配任意长度的任意字符</span><br><span class="line">?       匹配紧挨在前面的字符0次或1次</span><br><span class="line">\&#123;m,n\&#125;  匹配其前面的字符至少m次，至多n次</span><br><span class="line">\&#123;m,\&#125;   匹配其前面的字符至少m次</span><br><span class="line">\&#123;m\&#125;    精确匹配前面的m次\&#123;0,n\&#125;:0到n次</span><br><span class="line">\&lt;      锚点词首----相当于 \b，用法格式：\&lt;pattern</span><br><span class="line">\&gt;      锚点词尾，   用法格式:\&gt;pattern</span><br><span class="line">\&lt;pattern\&gt; 单词锚点</span><br><span class="line"></span><br><span class="line">分组，用法格式：pattern，引用\1,\2</span><br><span class="line">[]          匹配指定范围内的任意单个字符</span><br><span class="line">[^]         匹配指定范围外的任意单个字符</span><br><span class="line">[:digit:]    所有数字, 相当于0-9， [0-9]---&gt; [[:digit:]]</span><br><span class="line">[:lower:]    所有的小写字母</span><br></pre></td></tr></table></figure>
<p>实例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#######sed的匹配模式支持正则表达式#####################  </span><br><span class="line">sed &apos;5 q&apos; /etc/passwd               #打印前5行  </span><br><span class="line">sed -n &apos;/r*t/p&apos; /etc/passwd          #打印匹配r有0个或者多个，后接一个t字符的行  </span><br><span class="line">sed -n &apos;/.r.*/p&apos; /etc/passwd         #打印匹配有r的行并且r后面跟任意字符  </span><br><span class="line">sed -n &apos;/o*/p&apos; /etc/passwd          #打印o字符重复任意次  </span><br><span class="line">sed -n &apos;/o\&#123;1,\&#125;/p&apos; /etc/passwd      #打印o字重复出现一次以上  </span><br><span class="line">sed -n &apos;/o\&#123;1,3\&#125;/p&apos; /etc/passwd     #打印o字重复出现一次到三次之间以上</span><br></pre></td></tr></table></figure></p>
<h6 id="sed编辑命令"><a href="#sed编辑命令" class="headerlink" title="sed编辑命令"></a>sed编辑命令</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">p   打印匹配行（和-n选项一起合用）</span><br><span class="line">=   显示文件行号</span><br><span class="line">a\  在定位行号后附加新文本信息</span><br><span class="line">i\  在定位行号前插入新文本信息</span><br><span class="line">d   删除定位行</span><br><span class="line">c\  用新文本替换定位文本</span><br><span class="line">w filename  写文本到一个文件，类似输出重定向 &gt;</span><br><span class="line">r filename  从另一个文件中读文本，类似输入重定向 &lt;</span><br><span class="line">s   使用替换模式替换相应模式</span><br><span class="line">q   第一个模式匹配完成后退出或立即退出</span><br><span class="line">l   显示与八进制ACSII代码等价的控制符</span><br><span class="line">&#123;&#125;  在定位行执行的命令组，用分号隔开</span><br><span class="line">n   从另一个文件中读文本下一行，并从下一条命令而不是第一条命令开始对其的处理</span><br><span class="line">N   在数据流中添加下一行以创建用于处理的多行组</span><br><span class="line">g   将模式2粘贴到/pattern n/</span><br><span class="line">y   传送字符，替换单个字符</span><br></pre></td></tr></table></figure>
<p>####### 实例</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sed -n &apos;/^#/p&apos; /etc/profile      #打印以井号开头的 &apos;/^#/!P&apos;加感叹号表示没有注释的行</span><br><span class="line">sed -n &apos;/^#/!&#123;/^$/!p&#125;&apos; /etc/profile #这样过滤所有的#开头和空白行</span><br><span class="line">sed -e &apos;/^#/d&apos; -e &apos;/^$/d&apos; /etc/profile  #等同上面，-e 支持对单个文件进行不同的操作</span><br><span class="line"></span><br><span class="line">sed &apos;/root/s/^/SSSSSSSSSSSSS/&apos; /etc/passwd  #匹配root的行，行首添加SSSSSS...</span><br><span class="line">sed &apos;/root/s/$/SSSSSSSSSSSSS/&apos; /etc/passwd  #匹配root的行，行尾添加SSSSSS...</span><br><span class="line"></span><br><span class="line">sed &apos;s/root/&amp; LLL/&apos; /etc/passwd     #匹配root关键字，前面添加 LLL</span><br><span class="line">sed &apos;s/root/LLL &amp;/&apos; /etc/passwd     #匹配root关键字，后面添加 LLL</span><br><span class="line"></span><br><span class="line">sed &apos;/zabbix/i ZZZ&apos; /etc/passwd     #匹配root关键字，前一行添加 ZZZ</span><br><span class="line">sed &apos;/zabbix/a ZZZ&apos; /etc/passwd     #匹配root关键字，后一行添加 ZZZ</span><br><span class="line">sed &apos;/zabbix/a ZZZ \n OOO&apos; /etc/passwd  #\n 可以用来换行</span><br><span class="line"></span><br><span class="line">sed &apos;s/^/DDDDDDDD/&apos; /etc/passwd     #每行的开头添加 DDDDDD....</span><br><span class="line">sed &apos;s/$/DDDDDDDD/&apos; /etc/passwd     #每行的结尾添加 DDDDDD....</span><br><span class="line">sed &apos;1，3s/^/#/&apos; /etc/passwd     #每行的开头#  这个用来添加注释</span><br></pre></td></tr></table></figure>
<h6 id="sed删除"><a href="#sed删除" class="headerlink" title="sed删除"></a>sed删除</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed &apos;/^#/d&apos;     #删除#开头的</span><br><span class="line">sed &apos;/^#/!d&apos;    #删除非#开头的</span><br><span class="line">sed &apos;/root/d&apos;   #删除匹配root的字符</span><br><span class="line">sed &apos;/\&lt;you&gt;\/&apos;  #删除包含you这个单词的行 \&lt;&gt;\用来定位单词</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h6 id="sed替换-脚本中较多使用"><a href="#sed替换-脚本中较多使用" class="headerlink" title="sed替换(脚本中较多使用)"></a>sed替换(脚本中较多使用)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">#================源文件里面的内容===============================  </span><br><span class="line">[root@jie1 ~]# cat test  </span><br><span class="line">anonymous_enable=YES  </span><br><span class="line">write_enable=YES  </span><br><span class="line">local_umask=022  </span><br><span class="line">xferlog_enable=YES  </span><br><span class="line">connect_from_port_20=YES  </span><br><span class="line">root:x:0:0:root:/root:/bin/bash  </span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin  </span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin  </span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin  </span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin  </span><br><span class="line">DEVICE=&quot;eth0&quot;  </span><br><span class="line">BOOTPROTO=&quot;static&quot;  </span><br><span class="line">HWADDR=&quot;00:0C:29:90:79:78&quot;  </span><br><span class="line">ONBOOT=&quot;yes&quot;  </span><br><span class="line">IPADDR=172.16.22.1  </span><br><span class="line">NETMASK=255.255.0.0  </span><br><span class="line">#======================================================================  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;/DEVICE/c\Ethernet&apos; test   </span><br><span class="line">        #匹配DEVICE的行，替换成Ethernet这行  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;s/static/dhcp/&apos; test       </span><br><span class="line">        #把static替换成dhcp(/,@,#都是前面所说的地址定界符)  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;/IPADDR/s@22\.1@10.12@&apos; test  </span><br><span class="line">        #匹配IPADDR的行，把22.1替换成10.12由于.号有特殊意义所有需要转义  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;/connect/s#YES#NO#&apos; test   </span><br><span class="line">        #匹配connect的行，把YES替换成NO  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;s/bin/tom/2g&apos; test         </span><br><span class="line">        #把所有匹配到bin的行中第二次及第二次之后出现bin替换成tom  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;s/daemon/jerry/2p&apos; test    </span><br><span class="line">        #把所有匹配到bin的行中第二次出现的daemon替换成jerry，并在生产与匹配行同样的行  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;s/adm/boss/2&apos; test         </span><br><span class="line">        #把所有匹配到adm的行中仅仅只是第二次出现的adm替换成boss  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;/root/&#123;s/bash/nologin/;s/0/1/g&#125;&apos; test  </span><br><span class="line">        #匹配root的行，把bash替换成nologin，且把0替换成1  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;s/root/(&amp;)/g&apos; test                   </span><br><span class="line">        #把root用括号括起来，&amp;表示引用前面匹配的字符  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;s/BOOTPROTO/#BOOTPROTO/&apos; test        </span><br><span class="line">        #匹配BOOTPROTO替换成#BOOTPROTO，在配置文件中一般用于注释某行  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;s/ONBOOT/#&amp;/&apos; test                   </span><br><span class="line">        #匹配ONBOOT的行的前面添加#号，在配置文件中也表示注释某行  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;/ONBOOT/s/#//&apos; test                  </span><br><span class="line">        #匹配ONBOOT的行，把#替换成空，即去掉#号，也一般用作去掉#注释  </span><br><span class="line">#================执行以上sed命令之后文件显示的内容====================  </span><br><span class="line">[root@jie1 ~]# cat test  </span><br><span class="line">anonymous_enable=YES  </span><br><span class="line">write_enable=YES  </span><br><span class="line">local_umask=022  </span><br><span class="line">xferlog_enable=YES  </span><br><span class="line">connect_from_port_20=NO  </span><br><span class="line">(root):x:1:1:(root):/(root):/bin/nologin  </span><br><span class="line">bin:x:1:1:tom:/tom:/stom/nologin  </span><br><span class="line">daemon:x:2:2:jerry:/sbin:/stom/nologin  </span><br><span class="line">daemon:x:2:2:jerry:/sbin:/stom/nologin  </span><br><span class="line">adm:x:3:4:boss:/var/adm:/sbin/nologin  </span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin  </span><br><span class="line">Ethernet  </span><br><span class="line">#BOOTPROTO=&quot;dhcp&quot;  </span><br><span class="line">HWADDR=&quot;00:0C:29:90:79:78&quot;  </span><br><span class="line">ONBOOT=&quot;yes&quot;  </span><br><span class="line">IPADDR=172.16.10.12  </span><br><span class="line">NETMASK=255.255.0.0</span><br></pre></td></tr></table></figure>
<h6 id="sed-引用变量-脚本中也较多使用"><a href="#sed-引用变量-脚本中也较多使用" class="headerlink" title="sed 引用变量  (脚本中也较多使用)"></a>sed 引用变量  (脚本中也较多使用)</h6><p><strong>第一种当sed命令里面没有默认的变量时可以把单引号改成双引号</strong><br><strong>第二种当sed命令里面有默认的变量时，自己定义的变量需加单引号，且sed里面的语句必须用单引</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">my_name=li</span><br><span class="line">sed -i &apos;s/&apos;bbb&apos; /&apos;$my_name&apos;/&apos; /shell/myfile</span><br></pre></td></tr></table></figure>
<h6 id="sed的其他用法"><a href="#sed的其他用法" class="headerlink" title="sed的其他用法"></a>sed的其他用法</h6><p><strong>操作一个文件，并写入到另一个文件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@jie1 ~]# cat test   #sed操作的文件中的内容  </span><br><span class="line">Ethernet  </span><br><span class="line">#BOOTPROTO=&quot;dhcp&quot;  </span><br><span class="line">HWADDR=&quot;00:0C:29:90:79:78&quot;  </span><br><span class="line">ONBOOT=&quot;yes&quot;  </span><br><span class="line">IPADDR=172.16.10.12  </span><br><span class="line">NETMASK=255.255.0.0  </span><br><span class="line">[root@jie1 ~]# sed -i &apos;s/IPADDR/ip/w ip.txt&apos; test  </span><br><span class="line">       #把sed操作的文件内容保存到另外一个文件中，w表示保存，ip.txt文件名  </span><br><span class="line">[root@jie1 ~]# cat ip.txt  #查看新文件的内容  </span><br><span class="line">ip=172.16.10.12</span><br></pre></td></tr></table></figure></p>
<p><strong>读取一个文件到正在用sed操作的文件中</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@jie1 ~]# cat myfile   #文件内容  </span><br><span class="line">hello world  </span><br><span class="line">i am li  </span><br><span class="line">how are you  </span><br><span class="line">li  </span><br><span class="line">[root@jie1 ~]# cat test  #将用sed操作的文件的内容  </span><br><span class="line">Ethernet  </span><br><span class="line">#BOOTPROTO=&quot;dhcp&quot;  </span><br><span class="line">HWADDR=&quot;00:0C:29:90:79:78&quot;  </span><br><span class="line">ONBOOT=&quot;yes&quot;  </span><br><span class="line">IPADDR=172.16.10.12  </span><br><span class="line">NETMASK=255.255.0.0  </span><br><span class="line">[root@jie1 ~]# sed  -i &apos;/Ethernet/r myfile&apos; test  </span><br><span class="line">      #在匹配Ethernet的行，读进来另一个文件的内容，读进来的文件的内容会插入到匹配Ethernet的行后  </span><br><span class="line">[root@jie1 ~]# cat test  #再次查看用sed命令操作的行  </span><br><span class="line">Ethernet  </span><br><span class="line">hello world  </span><br><span class="line">i am li  </span><br><span class="line">how are you  </span><br><span class="line">li  </span><br><span class="line">#BOOTPROTO=&quot;dhcp&quot;  </span><br><span class="line">HWADDR=&quot;00:0C:29:90:79:78&quot;  </span><br><span class="line">ONBOOT=&quot;yes&quot;  </span><br><span class="line">IPADDR=172.16.10.12  </span><br><span class="line">NETMASK=255.255.0.0  </span><br><span class="line">[root@jie1 ~]#</span><br></pre></td></tr></table></figure>
<h6 id="sed的经典例子"><a href="#sed的经典例子" class="headerlink" title="sed的经典例子"></a>sed的经典例子</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@jie1 ~]# cat myfile   #文件内容  </span><br><span class="line">hello world  </span><br><span class="line">i am li  </span><br><span class="line">how are you  </span><br><span class="line">li  </span><br><span class="line">[root@jie1 ~]# cat test  #将用sed操作的文件的内容  </span><br><span class="line">Ethernet  </span><br><span class="line">#BOOTPROTO=&quot;dhcp&quot;  </span><br><span class="line">HWADDR=&quot;00:0C:29:90:79:78&quot;  </span><br><span class="line">ONBOOT=&quot;yes&quot;  </span><br><span class="line">IPADDR=172.16.10.12  </span><br><span class="line">NETMASK=255.255.0.0  </span><br><span class="line">[root@jie1 ~]# sed  -i &apos;/Ethernet/r myfile&apos; test  </span><br><span class="line">      #在匹配Ethernet的行，读进来另一个文件的内容，读进来的文件的内容会插入到匹配Ethernet的行后  </span><br><span class="line">[root@jie1 ~]# cat test  #再次查看用sed命令操作的行  </span><br><span class="line">Ethernet  </span><br><span class="line">hello world  </span><br><span class="line">i am li  </span><br><span class="line">how are you  </span><br><span class="line">li  </span><br><span class="line">#BOOTPROTO=&quot;dhcp&quot;  </span><br><span class="line">HWADDR=&quot;00:0C:29:90:79:78&quot;  </span><br><span class="line">ONBOOT=&quot;yes&quot;  </span><br><span class="line">IPADDR=172.16.10.12  </span><br><span class="line">NETMASK=255.255.0.0  </span><br><span class="line">[root@jie1 ~]#</span><br></pre></td></tr></table></figure>
<h5 id="AWK"><a href="#AWK" class="headerlink" title="AWK"></a>AWK</h5><h6 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">awk [options] file ...</span><br><span class="line"></span><br><span class="line">#逐行读取并打印出来，默认以空格分割</span><br><span class="line">awk &apos;&#123;print $0&#125;&apos; /etc/passwd  </span><br><span class="line"></span><br><span class="line">#读取每行的第一个域的内容，并打印出来</span><br><span class="line">awk -F: &apos;&#123;print $1&#125;&apos; /etc/passwd </span><br><span class="line"></span><br><span class="line">#匹配的列,只要有匹配就打印，不分域</span><br><span class="line">awk &apos;/root/ &#123;print $1&#125;&apos; /etc/passwd</span><br><span class="line"></span><br><span class="line">#统计行数</span><br><span class="line">awk &apos;&#123;count++&#125;END&#123;print  count&#125;&apos; /etc/passwd</span><br><span class="line">#count是自定义变量,这里没有初始化count,虽然默认是0,但是妥当的做法还是初始化为0.</span><br><span class="line">awk &apos;BEGIN&#123;count=0&#125;&#123;count=count+1&#125;END&#123;print count&#125;&apos; /etc/passwd</span><br><span class="line"></span><br><span class="line">#字符长度大于N的行</span><br><span class="line">awk -F: &apos;length($1)&gt;5&apos; /etc/passwd</span><br><span class="line"></span><br><span class="line">#统计某个文件夹下的文件占用的字节数</span><br><span class="line">ls -l |awk &apos;BEGIN &#123;size=0;&#125; &#123;size=size+$5;&#125; END&#123;print &quot;[end]size is &quot;, size&#125;&apos;</span><br><span class="line">#按照M为单位显示</span><br><span class="line">ls -l |awk &apos;BEGIN &#123;size=0;&#125; &#123;size=size+$5;&#125; END&#123;print &quot;[end]size is &quot;, size/1024/1024,&quot;M&quot;&#125;&apos;</span><br></pre></td></tr></table></figure>
<h6 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ARGC               命令行参数个数</span><br><span class="line">ARGV               命令行参数排列</span><br><span class="line">ENVIRON            支持队列中系统环境变量的使用</span><br><span class="line">FILENAME           awk浏览的文件名</span><br><span class="line">FNR                浏览文件的记录数</span><br><span class="line">FS                 设置输入域分隔符，等价于命令行 -F选项</span><br><span class="line">NF                 浏览记录的域的个数</span><br><span class="line">NR                 已读的记录数</span><br><span class="line">OFS                输出域分隔符</span><br><span class="line">ORS                输出记录分隔符</span><br><span class="line">RS                 控制记录分隔符</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容:</span><br><span class="line">awk  -F: &apos;&#123;print &quot;filename:&quot; FILENAME &quot;,linenumber:&quot; NR &quot;,columns:&quot; NF &quot;,linecontent:&quot;$0&#125;&apos; /etc/passwd</span><br><span class="line"></span><br><span class="line">#命令行参数个数</span><br><span class="line">awk &apos;&#123;print ARGC&#125;&apos; file file2...</span><br></pre></td></tr></table></figure>
<p><strong>awk可以做很多事情，赋值，运算，变量等等…具体就不一一说明了，自行搜索.</strong></p>
<h5 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h5><h6 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort [option] [files...]</span><br></pre></td></tr></table></figure>
<h6 id="选项-3"><a href="#选项-3" class="headerlink" title="选项"></a>选项</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-b：忽略每行前面开始处的空格字符；</span><br><span class="line">-c：检查文件是否已经按照顺序排序，排序过为真；</span><br><span class="line">-d：排序时，处理英文字母、数字和空格字符，以字典顺序排序。忽略其他所有字符；</span><br><span class="line">-f：排序时，将小写字母视为大写字母；</span><br><span class="line">-i：排序时，处理040~176之间的ASCII字符，忽略其他所有字符；</span><br><span class="line">-m：将几个排序好的文件进行合并；</span><br><span class="line">-M：将前面3个字母按月份的缩写进行排序；</span><br><span class="line">-n：按照数值大小进行排序；</span><br><span class="line">-o outfile.txt：将排序后的结果存入outfile.txt；</span><br><span class="line">-r：以相反的顺序进行排序；</span><br><span class="line">-k：指定需要排序的列数（栏数）；就是指定按第几列进行排序</span><br><span class="line">-t 分隔符：指定排序时所用到的栏位分隔符；</span><br><span class="line">-u 去重 不过一般使用 uniq操作</span><br></pre></td></tr></table></figure>
<p>例如,如下文本</p>
<blockquote>
<p>  one_two<br>  one_two_three<br>  one_two_four<br>  one_two_five</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">### 以下划线为分割 第一第二列进行排序,那么默认第三列会按顺序进行排序，所以结果会被打乱</span><br><span class="line">sort -t_ -k1,1 -k2,2 filename</span><br></pre></td></tr></table></figure>
<blockquote>
<p>[root/shell] ]$sort -t _ -k1,1 -k2,2 c<br>one_two<br>one_two_five<br>one_two_four<br>one_two_three</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#所以，sort提供了--stable参数来进行补救。</span><br><span class="line">sort -t_ -k1,1 -k2,2 filename</span><br></pre></td></tr></table></figure>
<h5 id="uniq"><a href="#uniq" class="headerlink" title="uniq"></a>uniq</h5><h6 id="选项-4"><a href="#选项-4" class="headerlink" title="选项"></a>选项</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-c, --count              //在每行前加上表示相应行目出现次数的前缀编号</span><br><span class="line">-d, --repeated          //只输出重复的行</span><br><span class="line">-D, --all-repeated      //只输出重复的行，不过有几行输出几行</span><br><span class="line">-f, --skip-fields=N     //-f 忽略的段数，-f 1 忽略第一段</span><br><span class="line">-i, --ignore-case       //不区分大小写</span><br><span class="line">-s, --skip-chars=N      //根-f有点像，不过-s是忽略，后面多少个字符 -s 5就忽略后面5个字符</span><br><span class="line">-u, --unique            //去除重复的后，全部显示出来，根MySQL的distinct功能上有点像</span><br><span class="line">-z, --zero-terminated   end lines with 0 byte, not newline</span><br><span class="line">-w, --check-chars=N      //对每行第N 个字符以后的内容不作对照</span><br><span class="line">--help              //显示此帮助信息并退出</span><br><span class="line">--version              //显示版本信息并退出</span><br></pre></td></tr></table></figure>
<h6 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h6><blockquote>
<p>  二点!<br>  1，对文本操作时，它一般会和sort命令进行组合使用，因为uniq 不会检查重复的行，除非它们是相邻的行。如果您想先对输入排序，使用sort -u。<br>  2，对文本操作时，若域中为先空字符(通常包括空格以及制表符)，然后非空字符，域中字符前的空字符将被跳过</p>
</blockquote>
<h5 id="fmt文本块操作"><a href="#fmt文本块操作" class="headerlink" title="fmt文本块操作"></a>fmt文本块操作</h5><h6 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fmt [option] [file-list]</span><br></pre></td></tr></table></figure>
<h6 id="选项-5"><a href="#选项-5" class="headerlink" title="选项"></a>选项</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-s              截断长行，但不合并</span><br><span class="line">-t               除每个段落的第1行外都缩进</span><br><span class="line">-u              改变格式化，使字之间出现一个空格，句子之间出现两个空格</span><br><span class="line">-w n           将输出的行宽改为n个字符。不带该选项时，fmt输出的行宽度为75个字符</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">例如,我有一个文件demo,内容为:</span><br><span class="line">A long time ago, there was a huge apple tree.         A little boy loved to come and play around it every day. He climbed to the tree top, ate the apples, took a nap under the shadow… He loved the tree and the tree loved to play with him. </span><br><span class="line"> </span><br><span class="line">使用命令 fmt -s demo,输出为:</span><br><span class="line"> </span><br><span class="line">A long time ago, there was a huge apple tree.         A little boy loved</span><br><span class="line">to come and play around it every day. He climbed to the tree top, ate</span><br><span class="line">the apples, took a nap under the shadow… He loved the tree and the</span><br><span class="line">tree loved to play with him.</span><br><span class="line">该命令的含义是节段2长行.</span><br><span class="line"> </span><br><span class="line">使用fmt -t demo命令的意思是说排除首行的缩进,结果为:</span><br><span class="line">A long time ago, there was a huge apple tree.         A little boy loved</span><br><span class="line">   to come and play around it every day. He climbed to the tree top,</span><br><span class="line">   ate the apples, took a nap under the shadow… He loved the tree and</span><br><span class="line">   the tree loved to play with him.</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">使用fmt -u demo命令的意思是说格式化单词和句子的间隔.输出为:</span><br><span class="line">A long time ago, there was a huge apple tree.  A little boy loved to come</span><br><span class="line">and play around it every day. He climbed to the tree top, ate the apples,</span><br><span class="line">took a nap under the shadow… He loved the tree and the tree loved to</span><br><span class="line">play with him.</span><br><span class="line">显然A little boy前面的多个空格变成了两个.</span><br><span class="line"> </span><br><span class="line">使用命令fmt -w 40 demo意思是说指定行的宽度,这里的行宽为40个字符.所以输出为:</span><br><span class="line">A long time ago, there was a huge</span><br><span class="line">apple tree.         A little boy</span><br><span class="line">loved to come and play around it</span><br><span class="line">every day. He climbed to the tree top,</span><br><span class="line">ate the apples, took a nap under the</span><br><span class="line">shadow… He loved the tree and the</span><br><span class="line">tree loved to play with him.</span><br><span class="line"> </span><br><span class="line">仅作切割的选项： -s , 在你想将长的行绕回，短的行保持不动时很好用，这么做也能使结果与原始版本间的差异达到最小,例如:</span><br><span class="line">fmt -s -w 10 &lt;&lt; EOF</span><br><span class="line">one two three four five</span><br><span class="line">six</span><br><span class="line">seven</span><br><span class="line">eight</span><br><span class="line">输出为:</span><br><span class="line">one two</span><br><span class="line">three</span><br><span class="line">four five</span><br><span class="line">six</span><br><span class="line">seven</span><br><span class="line">eight</span><br><span class="line"> </span><br><span class="line">fmt的小案例:</span><br><span class="line">下面以拼音字典为例：</span><br><span class="line">字典文件：/usr/dict/words或者/usr/share/dict/words。</span><br><span class="line">sed -n -e 9991,10010p /usr/share/dict/words | fmt</span><br><span class="line">sed -n -e 9991,10010p /usr/share/dict/words | fmt -w 30</span><br></pre></td></tr></table></figure>
<h5 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h5><h6 id="选项-6"><a href="#选项-6" class="headerlink" title="选项"></a>选项</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-c:统计字节数</span><br><span class="line">-l:统计行数</span><br><span class="line">-m:统计字符数.这个标志不能与-c标志一起使用</span><br><span class="line">-w:统计字数.一个字被定义为由空白,挑个或换行字符分隔的字符串.</span><br><span class="line">-L:打印最常行的长度</span><br><span class="line">-help:显示帮助信息</span><br><span class="line">--version:显示版本信息</span><br></pre></td></tr></table></figure>
<h5 id="seq"><a href="#seq" class="headerlink" title="seq"></a>seq</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-s 指定分隔符，默认是换行</span><br><span class="line">-w 等位补全，就是宽度相等，不足的前面补 0</span><br><span class="line">-f 格式化输出，就是指定打印的格式</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">seq 1 10        #输出1到10</span><br><span class="line">seq -s &quot;--&quot; 1 3     #输出1--2--3</span><br><span class="line">seq -w 1 3      #等宽输出</span><br><span class="line">seq -f %03g 1 20    #格式化为五位，不足用0补齐</span><br><span class="line"># %后面指定数字的位数 默认是%g，%3g那么数字位数不足部分是空格。</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ansible基础]]></title>
      <url>/2017/02/25/ansible%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p><img src="/images/ansible-logo.jpg" width="30%" height="20%" alt="ansble-logo" align="center"></p>
<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p><strong>Ansible is Simple IT Automation——简单的自动化IT工具，可以实现 批量系统配置、批量程序部署、批量运行命令等功能，简而言之，就是</strong> <span style="color:red"> <strong>分布式集中管理工具</strong></span>， <strong>通俗的讲就是批量在远端服务器上执行命令。其实，ansible自身不具备部署能力的，只是提供框架，其核心为模块</strong><br><a id="more"></a></p>
<h4 id="什么是ansible"><a href="#什么是ansible" class="headerlink" title="什么是ansible?"></a>什么是ansible?</h4><p><img src="http://upload-images.jianshu.io/upload_images/2511748-ee48dcc8af53cf00.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ansible架构.JPG"></p>
<table>
<thead>
<tr>
<th style="text-align:left">五大部分</th>
<th style="text-align:left">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">connection plugins</td>
<td style="text-align:left">远程连接插件</td>
</tr>
<tr>
<td style="text-align:left">hosts</td>
<td style="text-align:left">定义管理主机或主机组</td>
</tr>
<tr>
<td style="text-align:left">modules</td>
<td style="text-align:left">包含各个核心模块及自定义模块</td>
</tr>
<tr>
<td style="text-align:left">Plugin</td>
<td style="text-align:left">完成模块功能的补充，如日志插件、邮件插件等</td>
</tr>
<tr>
<td style="text-align:left">Playbook</td>
<td style="text-align:left">ansible的任务配置文件，将多个任务定义在剧本中进行管理</td>
</tr>
</tbody>
</table>
<p>​    </p>
<p>​    </p>
<p>​    </p>
<h4 id="ansible-的工作流程"><a href="#ansible-的工作流程" class="headerlink" title="ansible 的工作流程"></a>ansible 的工作流程</h4><p><img src="http://upload-images.jianshu.io/upload_images/2511748-1001b5832ebba246.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ansible流程.JPG"></p>
<hr>
<p>​    </p>
<p>​    </p>
<p>​    </p>
<h4 id="安装ansible"><a href="#安装ansible" class="headerlink" title="安装ansible"></a>安装ansible</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>配置源  ansible默认不在yum仓库中</span><br><span class="line">rpm -iUvh http://ftp.jaist.ac.jp/pub/Linux/Fedora/epel//7/x86_64/e/epel-release-7-9.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>此源主要是为了安装PyYAML</span><br><span class="line">wget http://mirrors.163.com/.help/CentOS7-Base-163.repo          </span><br><span class="line">mv CentOS7-Base-163.repo /etc/yum.repos.d/</span><br><span class="line"></span><br><span class="line">yum -y install ansible</span><br><span class="line"></span><br><span class="line">ansible --version</span><br><span class="line"><span class="meta">#</span>可查看当前ansible版本</span><br></pre></td></tr></table></figure>
<h4 id="配置登录"><a href="#配置登录" class="headerlink" title="配置登录"></a>配置登录</h4><blockquote>
<p>  ansible 使用ssh登录，所以主奴之间要配置密钥进行认证，这样才能开始正常工作</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa #回车</span><br><span class="line"><span class="meta">#</span>将会生成密钥/root/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line">ssh-copy-id -i root@ipaddress </span><br><span class="line"><span class="meta">#</span>公钥将会被cp到各个ipaddress节点</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>至此 已经实现了master与各节点的连接</span><br></pre></td></tr></table></figure>
<h4 id="定义Ansible的节点清单"><a href="#定义Ansible的节点清单" class="headerlink" title="定义Ansible的节点清单"></a>定义Ansible的节点清单</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ansible/hosts</span><br><span class="line">[testgroup]-----#服务器组的名字，方便统一管理，划分和命名要有规划</span><br><span class="line">192.168.1.XX----#组内节点的地址</span><br><span class="line">192.168.1.XXX</span><br><span class="line">等等</span><br><span class="line"></span><br><span class="line">[websever]</span><br><span class="line">....</span><br><span class="line">[DBserver]</span><br><span class="line">....</span><br></pre></td></tr></table></figure>
<h4 id="简单的远程操作"><a href="#简单的远程操作" class="headerlink" title="简单的远程操作"></a>简单的远程操作</h4><p><strong>通过执行who，查看服务器登录信息</strong></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ansible testgroup -m command -a 'who' #组</span><br><span class="line">ansible all -m command -a 'who'   # 所有</span><br><span class="line">ansible 192.168.1.XX -m command -a 'who'  #单个ip</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>#</span><br><span class="line">192.168.247.152 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">root     :0           2017-02-15 22:33 (:0)</span><br><span class="line">root     pts/0        2017-02-15 22:34 (:0)</span><br><span class="line">root     pts/1        2017-02-18 13:08 (192.168.247.1)</span><br><span class="line">root     pts/2        2017-03-07 22:52 (:0)</span><br><span class="line">root     pts/3        2017-03-07 22:54 (192.168.247.156)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 以ashin用户身份ping .134</span><br><span class="line">ansible 192.168.1.134 -m ping -u zili</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 以用户zili身份使用sudo来ping 组testgroup</span><br><span class="line"><span class="meta">#</span> -K是输入root密码</span><br><span class="line">ansible v1 -m ping -u zili --sudo -K</span><br></pre></td></tr></table></figure>
<h4 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h4><h5 id="定义主机变量"><a href="#定义主机变量" class="headerlink" title="定义主机变量"></a>定义主机变量</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[web]</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span>  <span class="string">http_port=80</span></span><br><span class="line"><span class="string">...............</span>  <span class="string">http_port=303</span></span><br><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#组名以及ip根本自己需求定义</span></span><br><span class="line"><span class="comment">#主机指定变量，以便后面供palybooks配置使用。</span></span><br><span class="line"><span class="comment">#定义两台web服务器的apache参数http_port，可以让两台服务器产生的apache配置文件httpd.conf差异化</span></span><br></pre></td></tr></table></figure>
<h5 id="定义组变量"><a href="#定义组变量" class="headerlink" title="定义组变量"></a>定义组变量</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[web]</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span></span><br><span class="line"><span class="string">[web:vars]</span></span><br><span class="line"><span class="string">http_port=80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#组变量的作用域是覆盖组所有成员，通过定义一个新块，块名由组名+ ":vars"组成。</span></span><br></pre></td></tr></table></figure>
<h5 id="嵌套组"><a href="#嵌套组" class="headerlink" title="嵌套组"></a>嵌套组</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="string">[web]</span></span><br><span class="line">    <span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span></span><br><span class="line">    <span class="string">[mysql]</span></span><br><span class="line">    <span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="string">[nested：children]</span></span><br><span class="line">    <span class="string">web</span></span><br><span class="line">    <span class="string">mysql</span></span><br><span class="line">    <span class="string">[nested：vars]</span></span><br><span class="line">    <span class="string">ntp_server=s1b.time.edu.cn</span>   </span><br><span class="line">    </span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="string">嵌套组定义一个新块，块名由</span> <span class="string">组名+":chilren"</span> <span class="string">组成。</span></span><br><span class="line"><span class="string">同是嵌套组也可以定义组变量，作用域是嵌套组里的所有组,</span>  </span><br><span class="line"><span class="string">嵌套组只能在/usr/bin/ansible-playbook中，</span></span><br><span class="line"><span class="string">在/usr/bin/ansible中不起作用，下面会介绍playbook</span></span><br></pre></td></tr></table></figure>
<h5 id="分离主机和组特定数据"><a href="#分离主机和组特定数据" class="headerlink" title="分离主机和组特定数据"></a>分离主机和组特定数据</h5><blockquote>
<p>  为更好的规范定义的<strong>主机与组变量</strong>，我们实际是不会在hosts里直接写的var，将定义的主机名与组变量单独剥离出来放到指定的文件中，将采用YAML格式存放<br>全局的变量放在group_vars/all中，局部变量放在group_vars/x中，特定的host使用特定的变量可以使用host_vars/x，子group中的变量会覆盖上级变量，hosts变量总是覆盖groups变量<br>存放位置规定：”/etc/ansible/group_vars/名”和”/etc/ansible/host_vars/主机名”分别存放指定组名或主机名定义的变量，如<br><code>/etc/ansible/group\_vars/mysql.yml</code><br><code>/etc/ansible/host\_vars/192.168.11.1.yml</code><br>使用变量要用jinja语法去引用</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">mysql.yml</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span><span class="bullet">--</span></span><br><span class="line"><span class="attr">    ntp_server:</span> <span class="string">s1b.time.edu.cn</span></span><br><span class="line"><span class="attr">    database_server:</span> <span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="string">规范变量名字，是因为，ansible会自动加载这目录下的变量，</span></span><br><span class="line"><span class="string">否则无法调用，当然也有解决不放此目录的方法</span></span><br></pre></td></tr></table></figure>
<p>例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@master ansible]# tree</span><br><span class="line">├── create_user.yml</span><br><span class="line">├── group_vars</span><br><span class="line">│   └── t1.yml</span><br><span class="line">├── hosts</span><br><span class="line"></span><br><span class="line">[root@master ansible]# cat hosts</span><br><span class="line">[t1]</span><br><span class="line">10.1.27.24</span><br><span class="line"></span><br><span class="line">所以</span><br><span class="line">├── group_vars</span><br><span class="line">│   └── t1.yml  #他的内容就是t1的变量</span><br><span class="line"></span><br><span class="line">[root@master ansible]# cat group_vars/t1.yml </span><br><span class="line">---</span><br><span class="line">user: ansibleTest1</span><br><span class="line"></span><br><span class="line">[root@master ansible]# cat create_user.yml </span><br><span class="line"># create user</span><br><span class="line">---</span><br><span class="line">- name: create user</span><br><span class="line">  hosts: t1</span><br><span class="line">  user: root</span><br><span class="line">  tasks:</span><br><span class="line">  - name: useradd &#123;&#123; user &#125;&#125;  #引用t1变量</span><br><span class="line">    user: name=&quot;&#123;&#123; user &#125;&#125;&quot;</span><br><span class="line"></span><br><span class="line">返回结果如下</span><br><span class="line">[root@master ansible]# ansible-playbook create_user.yml </span><br><span class="line"></span><br><span class="line">PLAY [create user] ***********************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] *******************************************************************************************************</span><br><span class="line">ok: [10.1.27.24]</span><br><span class="line"></span><br><span class="line">TASK [useradd ansibleTest1] **************************************************************************************************</span><br><span class="line">changed: [10.1.27.24]</span><br><span class="line"></span><br><span class="line">PLAY RECAP *******************************************************************************************************************</span><br><span class="line">10.1.27.24                 : ok=2    changed=1    unreachable=0    failed=0</span><br></pre></td></tr></table></figure></p>
<h4 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h4><blockquote>
<p>   ansible <host-pattern> [options]  </host-pattern></p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">-m MODULE_NAME, --module-name=MODULE_NAME     要执行的模块，默认为 command  </span><br><span class="line">-a MODULE_ARGS, --args=MODULE_ARGS      模块的参数  </span><br><span class="line">-u REMOTE_USER, --user=REMOTE_USER ssh      连接的用户名，默认用 root，ansible.cfg 中可以配置</span><br><span class="line">-k, --ask-pass      提示输入 ssh 登录密码，当使用密码验证登录的时候用     </span><br><span class="line">-s, --sudo      sudo 运行</span><br><span class="line">-U SUDO_USER, --sudo-user=SUDO_USER     sudo 到哪个用户，默认为 root</span><br><span class="line">-K, --ask-sudo-pass     提示输入 sudo 密码，当不是 NOPASSWD 模式时使用</span><br><span class="line">-B SECONDS, --background=SECONDS       run asynchronously, failing after X seconds(default=N/A)</span><br><span class="line">-P POLL_INTERVAL, --poll=POLL_INTERVAL      set the poll interval if using</span><br><span class="line">-B (default=15)</span><br><span class="line">-C, --check     只是测试一下会改变什么内容，不会真正去执行</span><br><span class="line">-c CONNECTION   连接类型(default=smart)</span><br><span class="line">-f FORKS, --forks=FORKS     fork 多少个进程并发处理，默认 5</span><br><span class="line">-i INVENTORY, --inventory-file=INVENTORY      指定hosts文件路径默认 default =/etc/ansible/hosts</span><br><span class="line">-l SUBSET, --limit=SUBSET       指定一个 pattern，对&lt;host_pattern&gt;已经匹配的主机中再过滤一次</span><br><span class="line">--list-hosts        只打印有哪些主机会执行这个 playbook 文件：不是实际执行该 playbook</span><br><span class="line">-M MODULE_PATH, --module-path=MODULE_PATH       要执行的模块的路径，默认为/usr/share/ansible/</span><br><span class="line">-o, --one-line      压缩输出，摘要输出</span><br><span class="line">--private-key=PRIVATE_KEY_FILE      私钥路径</span><br><span class="line">-T TIMEOUT, --timeout=TIMEOUT   ssh 连接超时时间，默认 10 秒</span><br><span class="line">-t TREE, --tree=TREE            日志输出到该目录，日志文件名会以主机名命名</span><br><span class="line">-v, --verbose   verbose mode (-vvv for more, -vvvv to enable connection debugging)</span><br></pre></td></tr></table></figure>
<h4 id="Pattern"><a href="#Pattern" class="headerlink" title="Pattern"></a>Pattern</h4><p>可以直接指定ip或hosts中的组名，同时指定多个组或者多个<code>ip</code>使用<code>:</code>分割<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ansible group1:group2 -m ping</span><br><span class="line">ansible ip1:ip2 -m ping</span><br><span class="line"></span><br><span class="line">#all  或者 *  代表全部</span><br><span class="line">ansible all -m ping</span><br><span class="line"></span><br><span class="line"># 感叹号 ! 表示非</span><br><span class="line">g1:!g2   #表示在g1分组中，但是不在g2中的hosts</span><br><span class="line"></span><br><span class="line"># &amp;符号表示交集</span><br><span class="line">g1:&amp;g2  #表示在g1分组中，也在g2中的hosts</span><br><span class="line"></span><br><span class="line">#使用下标</span><br><span class="line">g1[2]  #组的第三个</span><br><span class="line">g1[0:3] #组的前四个</span><br></pre></td></tr></table></figure></p>
<h4 id="常用模块"><a href="#常用模块" class="headerlink" title="常用模块"></a>常用模块</h4><h5 id="copy模块"><a href="#copy模块" class="headerlink" title="copy模块"></a>copy模块</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：把主控端/root目录下的a.sh文件拷贝到到指定节点上  </span><br><span class="line">命令：ansible 192.168.247.152 -m copy -a <span class="string">'src=/root/a.sh dest=/tmp/ owner=root group=root mode=0755'</span></span><br></pre></td></tr></table></figure>
<h5 id="file模块"><a href="#file模块" class="headerlink" title="file模块"></a>file模块</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：更改指定节点上/tmp/t.sh的权限为755，属主和属组为root  </span><br><span class="line">命令：ansible all -m file -a <span class="string">"dest=/tmp/t.sh mode=755 owner=root group=root"</span></span><br></pre></td></tr></table></figure>
<h5 id="cron模块"><a href="#cron模块" class="headerlink" title="cron模块"></a>cron模块</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：在指定节点上定义一个计划任务，每隔3分钟到主控端更新一次时间  </span><br><span class="line">命令：ansible all -m cron -a <span class="string">'name="custom job" minute=*/3 hour=* day=* month=* weekday=* job="/usr/sbin/ntpdate 192.168.247.152"'</span></span><br></pre></td></tr></table></figure>
<h5 id="group模块"><a href="#group模块" class="headerlink" title="group模块"></a>group模块</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：在所有节点上创建一个组名为nolinux，gid为2014的组  </span><br><span class="line">命令：ansible all -m group -a <span class="string">'gid=2014 name=nolinux'</span></span><br></pre></td></tr></table></figure>
<h5 id="uesr模块"><a href="#uesr模块" class="headerlink" title="uesr模块"></a>uesr模块</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">目的：在所有节点上创建一个用户名为nolinux，组为nolinux的用户  </span><br><span class="line">命令：ansible all -m user -a <span class="string">'name=nolinux groups=nolinux state=present'</span></span><br><span class="line">删除用户  </span><br><span class="line">命令：ansible all -m user -a <span class="string">'name=nolinux state=absent remove=yes'</span></span><br></pre></td></tr></table></figure>
<h5 id="yum模块"><a href="#yum模块" class="headerlink" title="yum模块"></a>yum模块</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">目的：在指定节点上安装 apache 服务  </span><br><span class="line">命令：ansible all -m yum -a <span class="string">"state=present name=httpd"</span></span><br><span class="line"><span class="comment">#state=latest 安装最新版本</span></span><br></pre></td></tr></table></figure>
<h5 id="shell模块"><a href="#shell模块" class="headerlink" title="shell模块"></a>shell模块</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：在指定节点上安装 apache 服务  </span><br><span class="line">命令：ansible testgroup -m shell -a 'yum -y install httpd'</span><br></pre></td></tr></table></figure>
<h5 id="command模块"><a href="#command模块" class="headerlink" title="command模块"></a>command模块</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：在指定节点上运行hostname命令</span><br><span class="line">命令：ansible 192.168.247.152 -m command -a &apos;hostname&apos;</span><br></pre></td></tr></table></figure>
<h5 id="raw模块"><a href="#raw模块" class="headerlink" title="raw模块"></a>raw模块</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：在192.168.247.152节点上运行ifconfig命令</span><br><span class="line">命令：ansible 192.168.247.152 -m raw-a &apos;ifconfig|eth0&apos;</span><br></pre></td></tr></table></figure>
<h5 id="script模块"><a href="#script模块" class="headerlink" title="script模块"></a>script模块</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：在指定节点上执行/root/a.sh脚本(该脚本是在ansible主控端)  </span><br><span class="line">命令：ansible 10.1.1.113 -m script -a '/root/a.sh'</span><br></pre></td></tr></table></figure>
<h5 id="command-script-shell-raw的区别"><a href="#command-script-shell-raw的区别" class="headerlink" title="command,script,shell,raw的区别"></a>command,script,shell,raw的区别</h5><blockquote>
<p>  思考：四者有何区别？</p>
</blockquote>
<p> command模块 [执行远程命令]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible client -m command -a &quot;uname -n&quot; -s</span><br></pre></td></tr></table></figure></p>
<p>script模块 [在远程主机执行主控端的shell/python脚本]<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible client -m script -a &quot;/soft/ntpdate.py&quot; -s</span><br></pre></td></tr></table></figure></p>
<p> shell模块 [执行远程主机的shell/python脚本]<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible client -m shell -a &quot;/soft/file.py&quot; -s</span><br></pre></td></tr></table></figure></p>
<p>raw模块 [类似于command模块、支持管道传递]<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible client -m raw -a &quot;ifconfig eth0|sed -n 2p|awk &apos;&#123;print \$2&#125;&apos;&quot; -s</span><br></pre></td></tr></table></figure></p>
<h5 id="service模块"><a href="#service模块" class="headerlink" title="service模块"></a>service模块</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：启动指定节点上的 httpd 服务，并让其开机自启动  </span><br><span class="line">命令：ansible 192.168.247.152 -m service -a 'name=httpd state=restarted enabled=yes'</span><br></pre></td></tr></table></figure>
<h5 id="ping模块"><a href="#ping模块" class="headerlink" title="ping模块"></a>ping模块</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：检查指定节点机器是否还能连通  </span><br><span class="line">命令：ansible 192.168.247.152 -m ping</span><br></pre></td></tr></table></figure>
<h5 id="get-url"><a href="#get-url" class="headerlink" title="get_url"></a>get_url</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">目的：下载百度下的图标文件到节点的/tmp文件下</span><br><span class="line">命令：ansible testgroup -m get_url -a &apos;url=https://www.baidu.com/favicon dest=/tmp&apos;</span><br><span class="line">#结果为error.html，但是证明了模块是可用的</span><br></pre></td></tr></table></figure>
<h5 id="stat模块"><a href="#stat模块" class="headerlink" title="stat模块"></a>stat模块</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目的：获取远程文件状态信息，包括atime、ctime、mtime、md5、uid、gid等信息</span><br><span class="line">ansible web -m stat -a &apos;path=/etc/sysctl.conf&apos;</span><br></pre></td></tr></table></figure>
<h5 id="template模块"><a href="#template模块" class="headerlink" title="template模块"></a>template模块</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">template使用了Jinja2格式作为文件模版，进行文档内变量的替换的模块。它的每次使用都会被ansible标记为”changed”状态。</span><br></pre></td></tr></table></figure>
<h6 id="模块参数"><a href="#模块参数" class="headerlink" title="模块参数"></a>模块参数</h6><table>
<thead>
<tr>
<th>参数名</th>
<th>是否必须</th>
<th>默认值</th>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>backup</td>
<td>no</td>
<td>no</td>
<td>yes/no</td>
<td>建立个包括timestamp在内的文件备份，以备不时之需.</td>
</tr>
<tr>
<td>dest</td>
<td>yes</td>
<td></td>
<td></td>
<td>远程节点上的绝对路径，用于放置template文件。</td>
</tr>
<tr>
<td>group</td>
<td>no</td>
<td></td>
<td></td>
<td>设置远程节点上的的template文件的所属用户组</td>
</tr>
<tr>
<td>mode</td>
<td>no</td>
<td></td>
<td></td>
<td>设置远程节点上的template文件权限。类似<a href="http://www.2cto.com/os/linux/" target="_blank" rel="noopener">Linux</a>中<em>chmod</em>的用法</td>
</tr>
<tr>
<td>owner</td>
<td>no</td>
<td></td>
<td></td>
<td>设置远程节点上的template文件所属用户</td>
</tr>
<tr>
<td>src</td>
<td>yes</td>
<td></td>
<td></td>
<td>本地Jinjia2模版的template文件位置</td>
</tr>
</tbody>
</table>
<h6 id="模块参数案例"><a href="#模块参数案例" class="headerlink" title="模块参数案例"></a>模块参数案例</h6><p>把/mytemplates/foo.j2文件经过填写参数后，复制到远程节点的/etc/file.conf，文件权限相关略过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- template: src=/mytemplates/foo.j2 dest=/etc/file.conf owner=bin group=wheel mode=0644</span><br></pre></td></tr></table></figure></p>
<p> 跟上面一样的效果，不一样的文件权限设置方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- template: src=/mytemplates/foo.j2 dest=/etc/file.conf owner=bin group=wheel mode=&quot;u=rw,g=r,o=r&quot;</span><br></pre></td></tr></table></figure></p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#详细说明 </span></span><br><span class="line"> roles/templates/server.xml中的template文件关键部分如下：</span><br><span class="line"> &lt;user username=<span class="string">"&#123;&#123; admin_username &#125;&#125;"</span> password=<span class="string">"&#123;&#123; admin_password &#125;&#125;"</span> roles=<span class="string">"manager-gui"</span> /&gt;</span><br><span class="line"> <span class="comment">#当这个文件还没被template执行的时候，本地的admin_username及admin_password 都是变量状态。 </span></span><br><span class="line"> <span class="comment">#当playbook执行完template的时候，远程的admin_username*及admin_password 会变成变量所对应的值。</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">#例 </span></span><br><span class="line"> <span class="comment">#前面的那个Playbook,如果我们在tomcat-servers设置了这两个变量如下：</span></span><br><span class="line"> dmin_username: admin</span><br><span class="line"> admin_password: adminsecret</span><br><span class="line"></span><br><span class="line"><span class="comment">#那么在执行这个Playbook前，对应的那个template文件（俗称模版），</span></span><br><span class="line">将在本地保持&#123;&#123; admin_username &#125;&#125;及&#123;&#123; admin_password &#125;&#125;的状态。</span><br><span class="line">在Ansible调用template模版执行的时候，这里将由Jinjia2从”tomcat-servers”读取对应的值，</span><br><span class="line">然后替换掉模版里的变量，然后把这个替换变量值后的文件拷贝到远程节点。</span><br><span class="line"><span class="comment">#这个就是template的意义所在。</span></span><br></pre></td></tr></table></figure>
<h5 id="更多模块"><a href="#更多模块" class="headerlink" title="更多模块"></a>更多模块</h5><p>ansible-doc -l 查询</p>
<hr>
<h4 id="playbook的配置和使用"><a href="#playbook的配置和使用" class="headerlink" title="playbook的配置和使用"></a>playbook的配置和使用</h4><p>配置文件后缀名为.yml</p>
<h5 id="官网demo说明"><a href="#官网demo说明" class="headerlink" title="官网demo说明"></a>官网demo说明</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这个是你选择的主机</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">webservers</span></span><br><span class="line"><span class="comment">#这个是变量</span></span><br><span class="line"><span class="attr">  vars:</span></span><br><span class="line"><span class="attr">    http_port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    max_clients:</span> <span class="number">200</span></span><br><span class="line"><span class="comment">#远端的执行权限</span></span><br><span class="line"><span class="attr">  remote_user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="comment">#利用yum模块来操作</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">ensure</span> <span class="string">apache</span> <span class="string">is</span> <span class="string">at</span> <span class="string">the</span> <span class="string">latest</span> <span class="string">version</span></span><br><span class="line"><span class="attr">    yum:</span> <span class="string">pkg=httpd</span> <span class="string">state=latest</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">write</span> <span class="string">the</span> <span class="string">apache</span> <span class="string">config</span> <span class="string">file</span></span><br><span class="line"><span class="attr">    template:</span> <span class="string">src=/srv/httpd.j2</span> <span class="string">dest=/etc/httpd.conf</span></span><br><span class="line"><span class="comment">#触发重启服务器</span></span><br><span class="line"><span class="attr">    notify:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">restart</span> <span class="string">apache</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">ensure</span> <span class="string">apache</span> <span class="string">is</span> <span class="string">running</span></span><br><span class="line"><span class="attr">    service:</span> <span class="string">name=httpd</span> <span class="string">state=started</span></span><br><span class="line"><span class="comment">#这里的restart apache 和上面的触发是配对的。这就是handlers的作用。相当于tag</span></span><br><span class="line"><span class="attr">  handlers:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">restart</span> <span class="string">apache</span></span><br><span class="line"><span class="attr">      service:</span> <span class="string">name=httpd</span> <span class="string">state=restarted</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#有的系统做了sudo限制，所以需要在playbook中开启权限，如下</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">  remote_user:</span> <span class="string">vic</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">    - service:</span> <span class="string">name=nginx</span> <span class="string">state=started</span></span><br><span class="line"><span class="attr">      sudo:</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure>
<h5 id="脚本实例"><a href="#脚本实例" class="headerlink" title="脚本实例"></a>脚本实例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#create_user.yml</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">create</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  user:</span> <span class="string">root</span></span><br><span class="line">  <span class="comment">##facts可以调用client的变量来使用，后面变量里会详细介绍</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  vars:</span></span><br><span class="line"><span class="attr">  - user:</span> <span class="string">"usertest1"</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">create</span> <span class="string">&#123;&#123;</span> <span class="string">user</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">name="&#123;&#123;</span> <span class="string">user</span> <span class="string">&#125;&#125;"</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#返回结果如下</span></span><br><span class="line"><span class="string">[root/]</span> <span class="string">]$ansible-playbook</span> <span class="string">create_user.yml</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">[create</span> <span class="string">user]</span> <span class="string">*************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[create</span> <span class="string">usertest1]</span> <span class="string">********************************************************</span></span><br><span class="line"><span class="attr">ok:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">RECAP</span> <span class="string">*********************************************************************</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span>            <span class="string">:</span> <span class="string">ok=1</span>    <span class="string">changed=0</span>    <span class="string">unreachable=0</span>    <span class="string">failed=0</span></span><br></pre></td></tr></table></figure>
<h6 id="给脚本添加service的调用"><a href="#给脚本添加service的调用" class="headerlink" title="给脚本添加service的调用"></a>给脚本添加service的调用</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#create_user.yml</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">create</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  vars:</span></span><br><span class="line"><span class="attr">  - user:</span> <span class="string">"usertest1"</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">create</span> <span class="string">&#123;&#123;</span> <span class="string">user</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">name=&#123;&#123;</span> <span class="string">user</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">start</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">    service:</span> <span class="string">name=httpd</span> <span class="string">state=startd</span></span><br><span class="line">  <span class="comment">#添加了httpd服务的开启</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">#返回结果如下 </span></span><br><span class="line"><span class="string">PLAY</span> <span class="string">[create</span> <span class="string">user]</span> <span class="string">*************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[create</span> <span class="string">usertest2]</span> <span class="string">********************************************************</span></span><br><span class="line"><span class="attr">ok:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"><span class="comment">#可以注意到 TASK [service]显示已经开启了</span></span><br><span class="line"><span class="string">TASK</span> <span class="string">[service]</span> <span class="string">*****************************************************************</span></span><br><span class="line"><span class="attr">changed:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">RECAP</span> <span class="string">*********************************************************************</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span>            <span class="string">:</span> <span class="string">ok=2</span>    <span class="string">changed=1</span>    <span class="string">unreachable=0</span>    <span class="string">failed=0</span></span><br></pre></td></tr></table></figure>
<h6 id="给脚本添加copy模块的调用"><a href="#给脚本添加copy模块的调用" class="headerlink" title="给脚本添加copy模块的调用"></a>给脚本添加copy模块的调用</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#create_user.yml</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">create</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  vars:</span></span><br><span class="line"><span class="attr">  - user:</span> <span class="string">"usertest1"</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">create</span> <span class="string">&#123;&#123;</span> <span class="string">user</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">name=&#123;&#123;</span> <span class="string">user</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">start</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">    service:</span> <span class="string">name=httpd</span> <span class="string">state=startd</span></span><br><span class="line">   <span class="comment">#添加了httpd服务的开启</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">Copy</span> <span class="string">file</span> <span class="string">to</span> <span class="string">client</span></span><br><span class="line"><span class="attr">    copy:</span> <span class="string">src=/tmp/test.test</span> <span class="string">dest=/tmp/</span></span><br><span class="line">    <span class="comment">#添加了copy服务的开启</span></span><br><span class="line">    </span><br><span class="line"> <span class="comment">#返回结果如下</span></span><br><span class="line"><span class="string">[root/ansible_yml]</span> <span class="string">]$ansible-playbook</span> <span class="string">create_user.yml</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">[create</span> <span class="string">user]</span> <span class="string">************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[create</span> <span class="string">usertest2]</span> <span class="string">*******************************************************</span></span><br><span class="line"><span class="attr">ok:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[service]</span> <span class="string">****************************************************************</span></span><br><span class="line"><span class="attr">ok:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"><span class="comment">#可以注意到 TASK [copy file to clent]已成功</span></span><br><span class="line"><span class="string">TASK</span> <span class="string">[copy</span> <span class="string">file</span> <span class="string">to</span> <span class="string">clent]</span> <span class="string">*****************************************************</span></span><br><span class="line"><span class="attr">changed:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">RECAP</span> <span class="string">********************************************************************</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span>            <span class="string">:</span> <span class="string">ok=3</span>    <span class="string">changed=1</span>    <span class="string">unreachable=0</span>    <span class="string">failed=0</span></span><br></pre></td></tr></table></figure>
<p><strong>copy传送的时候，可能报错</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">afewbug | FAILED &gt;&gt; &#123;</span><br><span class="line">    &quot;checksum&quot;: &quot;4ee72f7427050dcd97068734d35ca7b2c651bc88&quot;, </span><br><span class="line">    &quot;failed&quot;: true, </span><br><span class="line">    &quot;msg&quot;: &quot;Aborting, target uses selinux but python bindings (libselinux-python) aren‘t installed!&quot;</span><br><span class="line">    </span><br><span class="line">是因为ansible需要libselinux-python包。（被控端需要安装libselinux-python**）  </span><br><span class="line">可以在copy前先调用yum模块，安装libselinux-python</span><br></pre></td></tr></table></figure>
<h6 id="template模板（支持jinja2）"><a href="#template模板（支持jinja2）" class="headerlink" title="template模板（支持jinja2）"></a>template模板（支持jinja2）</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#create_user.yml</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">create</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  vars:</span></span><br><span class="line"><span class="attr">  - user:</span> <span class="string">"usertest1"</span></span><br><span class="line"><span class="attr">  - temp:</span> <span class="string">temptest</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">create</span> <span class="string">&#123;&#123;</span> <span class="string">user</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">name=&#123;&#123;</span> <span class="string">user</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">start</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">    service:</span> <span class="string">name=httpd</span> <span class="string">state=startd</span></span><br><span class="line">   <span class="comment">#添加了httpd服务的开启</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">Copy</span> <span class="string">file</span> <span class="string">to</span> <span class="string">client</span></span><br><span class="line"><span class="attr">    copy:</span> <span class="string">src=/tmp/test.test</span> <span class="string">dest=/tmp/</span></span><br><span class="line">    <span class="comment">#添加了copy服务的开启</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">template</span> <span class="string">test</span></span><br><span class="line"><span class="attr">    template:</span> <span class="string">src=/tmp/temp</span> <span class="string">dest=/tmp/&#123;&#123;temp&#125;&#125;</span> <span class="comment">#&#123;&#123;temp&#125;&#125;变量来自vars</span></span><br><span class="line">    <span class="comment">#添加了template模板使用</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#返回结果</span></span><br><span class="line"><span class="string">[root/ansible_yml]</span> <span class="string">]$ansible-playbook</span> <span class="string">create_user.yml</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">[create</span> <span class="string">user]</span> <span class="string">*************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[create</span> <span class="string">usertest2]</span> <span class="string">********************************************************</span></span><br><span class="line"><span class="attr">ok:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[start</span> <span class="string">httpd]</span> <span class="string">*************************************************************</span></span><br><span class="line"><span class="attr">ok:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[copy</span> <span class="string">file</span> <span class="string">to</span> <span class="string">clent]</span> <span class="string">******************************************************</span></span><br><span class="line"><span class="attr">ok:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"><span class="comment">#可以注意到 返回结果显示成功，去client相关目录即可看到文件</span></span><br><span class="line"><span class="string">TASK</span> <span class="string">[template</span> <span class="string">test]</span> <span class="string">***********************************************************</span></span><br><span class="line"><span class="attr">changed:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">RECAP</span> <span class="string">*********************************************************************</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span>            <span class="string">:</span> <span class="string">ok=4</span>    <span class="string">changed=1</span>    <span class="string">unreachable=0</span>    <span class="string">failed=0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">#template模块可以引用变量到源文件</span></span><br><span class="line"><span class="string">/tmp/temp</span></span><br><span class="line"><span class="string">&#123;&#123;user&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;&#123;temp&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#执行yml后</span></span><br><span class="line"></span><br><span class="line"><span class="string">[root/ansible_yml]</span> <span class="string">]$ansible</span> <span class="string">testgroup</span> <span class="bullet">-m</span> <span class="string">command</span> <span class="bullet">-a</span> <span class="string">'cat /tmp/temptest'</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span> <span class="string">| SUCCESS | rc=0 &gt;&gt;</span></span><br><span class="line"><span class="string">##client返回的就是主机源文件中引入的变量</span></span><br><span class="line"><span class="string">usertest1</span></span><br><span class="line"><span class="string">temptest</span></span><br></pre></td></tr></table></figure>
<h6 id="执行外部命令的模块"><a href="#执行外部命令的模块" class="headerlink" title="执行外部命令的模块"></a>执行外部命令的模块</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#create_user.yml</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">create</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  vars:</span></span><br><span class="line"><span class="attr">  - user:</span> <span class="string">"usertest1"</span></span><br><span class="line"><span class="attr">  - temp:</span> <span class="string">temptest</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">create</span> <span class="string">&#123;&#123;</span> <span class="string">user</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">name=&#123;&#123;</span> <span class="string">user</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">start</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">    service:</span> <span class="string">name=httpd</span> <span class="string">state=startd</span></span><br><span class="line">   <span class="comment">#添加了httpd服务的开启</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">Copy</span> <span class="string">file</span> <span class="string">to</span> <span class="string">client</span></span><br><span class="line"><span class="attr">    copy:</span> <span class="string">src=/tmp/test.test</span> <span class="string">dest=/tmp/</span></span><br><span class="line">    <span class="comment">#添加了copy服务的开启</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">template</span> <span class="string">test</span></span><br><span class="line"><span class="attr">    template:</span> <span class="string">src=/tmp/temp</span> <span class="string">dest=/tmp/&#123;&#123;temp&#125;&#125;</span> <span class="comment">#&#123;&#123;temp&#125;&#125;变量来自vars</span></span><br><span class="line">    <span class="comment">#添加了template模板使用</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">run</span> <span class="string">shell</span></span><br><span class="line"><span class="attr">    shell:</span> <span class="string">/usr/bin/ls</span> <span class="string">/tmp/</span> <span class="string">||</span> <span class="string">/bin/true</span></span><br><span class="line">    <span class="comment">#/bin/true 防中断</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">run</span>  <span class="string">command</span></span><br><span class="line"><span class="attr">    command:</span> <span class="string">mkdir</span> <span class="string">/tmp/command-test</span></span><br><span class="line">  <span class="comment">#添加了两个执行外部命令模块shell和command</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#返回结果如下</span></span><br><span class="line"><span class="string">[root/ansible_yml]</span> <span class="string">]$ansible-playbook</span> <span class="string">create_user.yml</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">[create</span> <span class="string">user]</span> <span class="string">*************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[create</span> <span class="string">usertest2]</span> <span class="string">********************************************************</span></span><br><span class="line"><span class="attr">ok:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[start</span> <span class="string">httpd]</span> <span class="string">*************************************************************</span></span><br><span class="line"><span class="attr">ok:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[copy</span> <span class="string">file</span> <span class="string">to</span> <span class="string">client]</span> <span class="string">*****************************************************</span></span><br><span class="line"><span class="attr">changed:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[template</span> <span class="string">test]</span> <span class="string">***********************************************************</span></span><br><span class="line"><span class="attr">changed:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[shell~]</span> <span class="string">******************************************************************</span></span><br><span class="line"><span class="attr">changed:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[run</span> <span class="string">this</span> <span class="string">command]</span> <span class="string">********************************************************</span></span><br><span class="line"><span class="attr">changed:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"> <span class="string">[WARNING]:</span> <span class="string">Consider</span> <span class="string">using</span> <span class="string">file</span> <span class="string">module</span> <span class="string">with</span> <span class="string">state=directory</span> <span class="string">rather</span> <span class="string">than</span> <span class="string">running</span></span><br><span class="line"><span class="string">mkdir</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">RECAP</span> <span class="string">*********************************************************************</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span>            <span class="string">:</span> <span class="string">ok=6</span>    <span class="string">changed=4</span>    <span class="string">unreachable=0</span>    <span class="string">failed=0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment">#1./usr/bin/...||/bin/true  前面失败的话/bin/true：返回true。防止中断，继续执行。类似的判断还有chenge_when参数</span></span><br></pre></td></tr></table></figure>
<h4 id="变量功能"><a href="#变量功能" class="headerlink" title="变量功能"></a>变量功能</h4><h5 id="facts"><a href="#facts" class="headerlink" title="facts"></a>facts</h5><blockquote>
<p>  一个常用的组件，可实现对远程自己系统信息的获取，比如：主机名，IP地址，操作系统，分区情况，硬件信息等，配合playbook使用，更加的灵活和个性化定制</p>
</blockquote>
<p><code>ansible ip/group -m setup</code>可以获取clients的facts信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root~] ]<span class="variable">$ansible</span> testgroup -m setup</span><br><span class="line">192.168.247.152 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"ansible_all_ipv4_addresses"</span>: [</span><br><span class="line">            <span class="string">"192.168.122.1"</span>,</span><br><span class="line">            <span class="string">"192.168.247.152"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"ansible_all_ipv6_addresses"</span>: [</span><br><span class="line">            <span class="string">"fe80::20c:29ff:feb5:6e6"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"ansible_architecture"</span>: <span class="string">"x86_64"</span>,</span><br><span class="line">        <span class="string">"ansible_bios_date"</span>: <span class="string">"07/02/2015"</span>,</span><br><span class="line">        <span class="string">"ansible_bios_version"</span>: <span class="string">"6.00"</span>,</span><br><span class="line">        </span><br><span class="line">        ......</span><br></pre></td></tr></table></figure>
<p><strong>脚本中开启Facts功能</strong></p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#create_user.yml</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">create</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">false</span> <span class="comment">#开启facts</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">template</span> <span class="string">test</span></span><br><span class="line"><span class="attr">    template:</span> <span class="string">src=/tmp/temp</span> <span class="string">dest=/tmp/&#123;&#123;temp&#125;&#125;</span> <span class="comment">#&#123;&#123;temp&#125;&#125;变量来自vars</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#返回结果，</span></span><br><span class="line"><span class="string">[root/ansible_yml]</span> <span class="string">]$ansible-playbook</span> <span class="string">create_user.yml</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">[create</span> <span class="string">user]</span> <span class="string">*************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[setup]</span> <span class="string">*******************************************************************</span></span><br><span class="line"><span class="attr">ok:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[template</span> <span class="string">test]</span> <span class="string">***********************************************************</span></span><br><span class="line"><span class="attr">changed:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">RECAP</span> <span class="string">*********************************************************************</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span>            <span class="string">:</span> <span class="string">ok=2</span>    <span class="string">changed=1</span>    <span class="string">unreachable=0</span>    <span class="string">failed=0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看</span></span><br><span class="line"><span class="string">[root/ansible_yml]</span> <span class="string">]$ansible</span> <span class="string">testgroup</span> <span class="bullet">-m</span> <span class="string">raw</span> <span class="bullet">-a</span> <span class="string">"ls /tmp | grep 192*"</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span> <span class="string">| SUCCESS | rc=0 &gt;&gt;</span></span><br><span class="line"><span class="string">[u'192.168.122.1', u'192.168.247.152']</span></span><br><span class="line"><span class="string">Shared connection to 192.168.247.152 closed.</span></span><br><span class="line"><span class="string">#IP地址有两个所以文件名很奇怪</span></span><br></pre></td></tr></table></figure>
<p><strong>当然，我们也可以在主机的/tmp/temp下调用facts变量</strong></p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改/tmp/temp文件</span></span><br><span class="line"><span class="string">test</span></span><br><span class="line"><span class="string">&#123;&#123;ansible_all_ipv4_addresses&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#create_user.yml</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">create</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">false</span> <span class="comment">#开启facts</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">template</span> <span class="string">test</span></span><br><span class="line"><span class="attr">    template:</span> <span class="string">src=/tmp/temp</span> <span class="string">dest=/tmp/factstest</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#结果如下</span></span><br><span class="line"><span class="string">[root/ansible_yml]</span> <span class="string">]$ansible-playbook</span> <span class="string">create_user.yml</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">[create</span> <span class="string">user]</span> <span class="string">*************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[setup]</span> <span class="string">*******************************************************************</span></span><br><span class="line"><span class="attr">ok:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">TASK</span> <span class="string">[template</span> <span class="string">test]</span> <span class="string">***********************************************************</span></span><br><span class="line"><span class="attr">changed:</span> <span class="string">[192.168.247.152]</span></span><br><span class="line"></span><br><span class="line"><span class="string">PLAY</span> <span class="string">RECAP</span> <span class="string">*********************************************************************</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span>            <span class="string">:</span> <span class="string">ok=2</span>    <span class="string">changed=1</span>    <span class="string">unreachable=0</span>    <span class="string">failed=0</span></span><br><span class="line"></span><br><span class="line"><span class="string">[root/ansible_yml]</span> <span class="string">]$ansible</span> <span class="string">testgroup</span> <span class="bullet">-m</span> <span class="string">raw</span> <span class="bullet">-a</span> <span class="string">"cat /tmp/factstest"</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.247</span><span class="number">.152</span> <span class="string">| SUCCESS | rc=0 &gt;&gt;</span></span><br><span class="line"><span class="string">test</span></span><br><span class="line"><span class="string">[u'192.168.122.1', u'192.168.247.152']</span></span><br><span class="line"><span class="string">Shared connection to 192.168.247.152 closed.</span></span><br></pre></td></tr></table></figure>
<h5 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h5><blockquote>
<p>  如何facts的变量并不能满足需求的，就可以自定义facts模板来实现</p>
<p>  另外可以通过本地facts来实现，只需在client的/etc/ansible/facts.d目录定义JSON,INI或可执行的JSON输出，后缀名一定要用.fact，那么这些文件就可以作为本地的facts</p>
</blockquote>
<p>######在client定义变量，供ansible主机使用</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@test1 ~]<span class="comment"># mkdir /etc/ansible/facts.d -p</span></span><br><span class="line">[root@test1 ~]<span class="comment"># cd /etc/ansible/facts.d/</span></span><br><span class="line">[root@test1 facts.d]<span class="comment"># cat client.fact</span></span><br><span class="line">[general]</span><br><span class="line">name=zili</span><br></pre></td></tr></table></figure>
<p><strong>ansible主机</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root/ansible_yml] ]$ansible 192.168.247.152 -m setup -a "filter=ansible_local" 192.168.247.152 | SUCCESS =&gt; &#123;</span><br><span class="line">    "ansible_facts": &#123;</span><br><span class="line">        "ansible_local": &#123;      #本地facts</span><br><span class="line">            "client": &#123;       #文件名</span><br><span class="line">                "general": &#123;       #节点名</span><br><span class="line">                    "name": "zili"    #key-value</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    "changed": false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>那么就可以通过如下方式去调用自定义的facts变量</strong></p>
<p><code></code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root/ansible_yml] ]<span class="variable">$ansible</span>-playbook create_user.yml</span><br><span class="line"></span><br><span class="line">PLAY [create user] *************************************************************</span><br><span class="line"></span><br><span class="line">TASK [setup] *******************************************************************</span><br><span class="line">ok: [192.168.247.152]</span><br><span class="line"></span><br><span class="line">TASK [template <span class="built_in">test</span>] ***********************************************************</span><br><span class="line">changed: [192.168.247.152]</span><br><span class="line"></span><br><span class="line">PLAY RECAP *********************************************************************</span><br><span class="line">192.168.247.152            : ok=2    changed=1    unreachable=0    failed=0</span><br><span class="line"><span class="comment">#调用成功，并可看到client内容已变化</span></span><br><span class="line">[root/ansible_yml] ]<span class="variable">$ansible</span> testgroup -m raw -a <span class="string">"cat /tmp/factstest2"</span>          192.168.247.152 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">zili <span class="comment">#</span></span><br><span class="line">Shared connection to 192.168.247.152 closed.</span><br></pre></td></tr></table></figure>
<h6 id="在操作主机定义变量，来控制client"><a href="#在操作主机定义变量，来控制client" class="headerlink" title="在操作主机定义变量，来控制client"></a>在操作主机定义变量，来控制client</h6><p>思路就是在执行playbook的时候将本地的facts推送到client相关目录下</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">    - name:</span> <span class="string">create</span> <span class="string">directory</span> <span class="string">for</span> <span class="string">ansible</span> <span class="string">custom</span> <span class="string">facts</span></span><br><span class="line"><span class="attr">      file:</span> <span class="string">state=directory</span> <span class="string">recurse=yes</span> <span class="string">path=/etc/ansible/facts.d</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">install</span> <span class="string">custom</span> <span class="string">facts</span></span><br><span class="line"><span class="attr">      copy:</span> <span class="string">src=/etc/ansible/host.fact</span> <span class="string">dest=/etc/ansible/facts.d</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">re-read</span> <span class="string">facts</span> <span class="string">after</span> <span class="string">adding</span> <span class="string">custom</span> <span class="string">fact</span></span><br><span class="line"><span class="attr">      setup:</span> <span class="string">filter=ansible_local</span></span><br><span class="line"><span class="comment">#如此相当于批量在client创建了facts变量</span></span><br><span class="line"><span class="comment">#然后就可以主机调用了!</span></span><br></pre></td></tr></table></figure>
<h5 id="注册变量"><a href="#注册变量" class="headerlink" title="注册变量"></a>注册变量</h5><blockquote>
<p>  变量可以将一条命令的返回值进行保存，然后提供给playbook使用</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@ansible</span> <span class="string">ansible]#</span> <span class="string">cat</span> <span class="string">user1.yml</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  remote_user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - shell:</span> <span class="string">/usr/bin/foo</span></span><br><span class="line"><span class="attr">    register:</span> <span class="string">z</span>     <span class="comment">#注册了一个foo\_resul变量，变量值为shell: /usr/bin/foo的运行结果;  </span></span><br><span class="line"><span class="attr">    ignore_errors:</span> <span class="literal">True</span>  <span class="comment">#ignore\_errors: True为忽略错误</span></span><br><span class="line"><span class="attr">  - shell:</span> <span class="string">touch</span> <span class="string">/tmp/LLL</span> <span class="comment">#当变量注册完成后，就可以在后面的playbook中使用了</span></span><br><span class="line"><span class="attr">    when:</span> <span class="string">z.rc</span> <span class="string">==</span> <span class="number">5</span> </span><br><span class="line"><span class="comment">#当条件语句when: z.rc == 5成立时，shell: touch /tmp/LLL命令才会执行</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#可以注意到command是skipping的。因为返回值是127，所以client肯定还是没有创建LLL的</span></span><br><span class="line">[root/ansible_yml] ]<span class="variable">$ansible</span>-playbook user1.yml</span><br><span class="line"></span><br><span class="line">PLAY [testgroup] ***************************************************************</span><br><span class="line"></span><br><span class="line">TASK [setup] *******************************************************************</span><br><span class="line">ok: [192.168.247.152]</span><br><span class="line"></span><br><span class="line">TASK [<span class="built_in">command</span>] *****************************************************************</span><br><span class="line">fatal: [192.168.247.152]: FAILED! =&gt; &#123;<span class="string">"changed"</span>: <span class="literal">true</span>, <span class="string">"cmd"</span>: <span class="string">"/usr/bin/foo"</span>, <span class="string">"delta"</span>: <span class="string">"0:00:00.003488"</span>, <span class="string">"end"</span>: <span class="string">"2017-03-11 13:08:45.996549"</span>, <span class="string">"failed"</span>: <span class="literal">true</span>, <span class="string">"rc"</span>: 127, <span class="string">"start"</span>: <span class="string">"2017-03-11 13:08:45.993061"</span>, <span class="string">"stderr"</span>: <span class="string">"/bin/sh: /usr/bin/foo: No such file or directory"</span>, <span class="string">"stdout"</span>: <span class="string">""</span>, <span class="string">"stdout_lines"</span>: [], <span class="string">"warnings"</span>: []&#125;</span><br><span class="line">...ignoring</span><br><span class="line"></span><br><span class="line">TASK [<span class="built_in">command</span>] *****************************************************************</span><br><span class="line">skipping: [192.168.247.152]</span><br><span class="line"></span><br><span class="line">PLAY RECAP *********************************************************************</span><br><span class="line">192.168.247.152            : ok=2    changed=1    unreachable=0    failed=0</span><br><span class="line"></span><br><span class="line"><span class="comment">##所以我门修改z.rc的返回值为127在执行</span></span><br><span class="line"><span class="comment">#以为返回值是对的，所以执行了touch，warning是友情提示，最好用线管模块进行文件的操作</span></span><br><span class="line">[root/ansible_yml] ]<span class="variable">$ansible</span>-playbook user1.yml</span><br><span class="line"></span><br><span class="line">PLAY [testgroup] ***************************************************************</span><br><span class="line"></span><br><span class="line">TASK [setup] *******************************************************************</span><br><span class="line">ok: [192.168.247.152]</span><br><span class="line"></span><br><span class="line">TASK [<span class="built_in">command</span>] *****************************************************************</span><br><span class="line">fatal: [192.168.247.152]: FAILED! =&gt; &#123;<span class="string">"changed"</span>: <span class="literal">true</span>, <span class="string">"cmd"</span>: <span class="string">"/usr/bin/foo"</span>, <span class="string">"delta"</span>: <span class="string">"0:00:00.003539"</span>, <span class="string">"end"</span>: <span class="string">"2017-03-11 13:11:01.955975"</span>, <span class="string">"failed"</span>: <span class="literal">true</span>, <span class="string">"rc"</span>: 127, <span class="string">"start"</span>: <span class="string">"2017-03-11 13:11:01.952436"</span>, <span class="string">"stderr"</span>: <span class="string">"/bin/sh: /usr/bin/foo: No such file or directory"</span>, <span class="string">"stdout"</span>: <span class="string">""</span>, <span class="string">"stdout_lines"</span>: [], <span class="string">"warnings"</span>: []&#125;</span><br><span class="line">...ignoring</span><br><span class="line"></span><br><span class="line">TASK [<span class="built_in">command</span>] *****************************************************************</span><br><span class="line">changed: [192.168.247.152]</span><br><span class="line"> [WARNING]: Consider using file module with state=touch rather than running touch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PLAY RECAP *********************************************************************</span><br><span class="line">192.168.247.152            : ok=3    changed=2    unreachable=0    failed=0</span><br><span class="line"></span><br><span class="line">[root/ansible_yml] ]$</span><br></pre></td></tr></table></figure>
<h4 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h4><h5 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h5><blockquote>
<p>  playbook的执行结果取决于变量，不管是facts还是tasks结果赋值的，而变量的值可以依赖于其他变量，当然一会印象ansible的执行</p>
<p>  有时候我们，想要跳过某些主机的执行步骤，比如，某些client不安装某个软件包，不清理垃圾等等</p>
<p>  就要使用判断了</p>
</blockquote>
<h6 id="when"><a href="#when" class="headerlink" title="when"></a>when</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">when</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  remote_user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">shutdown</span> <span class="string">centos</span></span><br><span class="line"><span class="attr">    command:</span> <span class="string">/sbin/shutdown</span> <span class="bullet">-t</span> <span class="string">now</span></span><br><span class="line"><span class="attr">    when:</span> <span class="string">ansible_hostname</span> <span class="string">==</span> <span class="string">'test1'</span></span><br><span class="line"><span class="comment">#when返回bool值，为true是执行，false则不执行</span></span><br></pre></td></tr></table></figure>
<p><strong>when 针对不同分支的二级处理</strong></p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">when</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">  remote_user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - command:</span> <span class="string">/sbin/ip</span> <span class="string">a</span></span><br><span class="line"><span class="attr">    register:</span> <span class="string">result</span></span><br><span class="line"><span class="attr">    ignore_errors:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">  - command:</span> <span class="string">/bin/something</span></span><br><span class="line"><span class="attr">    when:</span> <span class="string">result|failed</span></span><br><span class="line"><span class="attr">  - command:</span> <span class="string">/bin/something_else</span></span><br><span class="line"><span class="attr">    when:</span> <span class="string">result|success</span></span><br><span class="line"><span class="attr">  - command:</span> <span class="string">/bin/still/something_else</span></span><br><span class="line"><span class="attr">    when:</span> <span class="string">result|skipped</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># when: result|success"的意思为当变量result执行结果为成功</span></span><br><span class="line"><span class="comment">#将执行/bin/something_else命令，其他同理。</span></span><br><span class="line"><span class="comment">#其中success为Ansible内部过滤器方法，返回True代表命令运行成功。</span></span><br></pre></td></tr></table></figure>
<h5 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">whell</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  remote_user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">"add user"</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">name=&#123;&#123;</span> <span class="string">item</span> <span class="string">&#125;&#125;</span> <span class="string">state=present</span> <span class="string">groups=wheel</span></span><br><span class="line"><span class="attr">    with_items:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">tiger1</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">tiger2</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#创建用户的。with_items会自动循环执行上面的语句"user: name=&#123;&#123; item &#125;&#125; state=present groups=wheel"，循环的次数为with_items的元素个数。这里有2个元素，分别为tiger1、tiger2，会分别替换&#123;&#123; item &#125;&#125;项</span></span><br><span class="line"><span class="comment">#等同于</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">whell</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  remote_user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">"add user tiger1"</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">name=tiger1</span> <span class="string">state=present</span> <span class="string">groups=wheel</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">"add user tiger2"</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">name=tiger2</span> <span class="string">state=present</span> <span class="string">groups=wheel</span></span><br></pre></td></tr></table></figure>
<h6 id="循环元素支持列表"><a href="#循环元素支持列表" class="headerlink" title="循环元素支持列表"></a>循环元素支持列表</h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#首先定义好列表 list.yml</span></span><br><span class="line"><span class="attr">packages_base:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">[</span> <span class="string">'vsftpd'</span><span class="string">,</span> <span class="string">'vim'</span> <span class="string">]</span></span><br><span class="line"><span class="attr">packages_apps:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">[[</span> <span class="string">'mysql'</span><span class="string">,httpd'</span> <span class="string">]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#然后引入使用</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">whell</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  remote_user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  var_files:</span> </span><br><span class="line"><span class="bullet">  -</span> <span class="string">/etc/ansible/list.yml</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">"install rpm"</span></span><br><span class="line"><span class="attr">    yum:</span> <span class="string">name=&#123;&#123;</span> <span class="string">item</span> <span class="string">&#125;&#125;</span> <span class="string">state=installed</span></span><br><span class="line"><span class="attr">    with_flattened:</span> <span class="comment">#此语句 用来循环定义好的列表</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">packages_base</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">packages_apps</span></span><br></pre></td></tr></table></figure>
<h5 id="handlers-和-include"><a href="#handlers-和-include" class="headerlink" title="handlers 和 include"></a>handlers 和 include</h5><blockquote>
<p>  当多个playbook涉及复用的任务列表时，可以将复用的内容剥离出来，写到独立的文件里，需要的地方include进来即可</p>
<p>  除了tasks之外，还有一个handlers的命令，handlers是在执行tasks之后服务器发生变化之后可供调用的handler</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">write</span> <span class="string">the</span> <span class="string">httpd</span> <span class="string">config</span> <span class="string">file</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">testgroup</span></span><br><span class="line"><span class="attr">  remote_user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">write</span> <span class="string">the</span> <span class="string">httpd.conf</span> <span class="string">to</span> <span class="string">client</span></span><br><span class="line"><span class="attr">    template:</span> <span class="string">src=/httpd.conf.j2</span> <span class="string">dest=/etc/httpd/conf/httpd.conf</span></span><br><span class="line"><span class="attr">    notify:</span>    <span class="comment"># 如果copy执行完之后/etc/httpd/conf/httpd.conf文件发送了变化，则执行</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">restart</span> <span class="string">httpd</span>  <span class="comment"># 调用handler</span></span><br><span class="line"><span class="attr">    - include:</span> <span class="string">playbook/tasks/httpd.yml</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">    handlers:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">restart</span> <span class="string">httpd</span> <span class="comment">#此处的标识必须和notify一样才可以引起触发</span></span><br><span class="line"><span class="attr">      service:</span> <span class="string">name=httpd</span> <span class="string">state=restarted</span></span><br><span class="line">      </span><br><span class="line"> <span class="comment">#注意上面使用的- include: playbook/tasks/httpd.yml，看一下这个文件的内容</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">ensure</span> <span class="string">httpd</span> <span class="string">is</span> <span class="string">running</span></span><br><span class="line"><span class="attr">  service:</span> <span class="string">name=httpd</span> <span class="string">state=started</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>  notify这个action可用于在每个play的最后被触发，这样可以避免多次有改变发生时每次都执行指定的操作，取而代之，仅在所有的变化发生完成后一次性地执行指定操作。</p>
<p>  Handlers 是由通知者进行 notify, 如果没有被 notify,handlers 不会执行。</p>
<p>  Handlers 最佳的应用场景是用来重启服务,或者触发系统重启操作.除此以外很少用到了。</p>
</blockquote>
<h4 id="roles-使用"><a href="#roles-使用" class="headerlink" title="roles 使用"></a>roles 使用</h4><p>前面的所有都在一个文件内.还有一种方法可以进行更好的组织架构<br>使用roles<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@master roles]# tree</span><br><span class="line">.</span><br><span class="line">├── test</span><br><span class="line">│   └── tasks</span><br><span class="line">│       └── main.yml</span><br><span class="line">└── test.yml</span><br><span class="line">test.yml为入口文件,每次执行它即可.他的内容如下</span><br><span class="line"></span><br><span class="line">[root@master roles]# cat test.yml </span><br><span class="line">---</span><br><span class="line">- hosts: all</span><br><span class="line">  roles:</span><br><span class="line">    - role: test</span><br><span class="line">定义了主机/主机组,然后定义了要使用的roles,(也就是roles下的文件夹的名字)</span><br><span class="line"></span><br><span class="line">test文件夹下定义了tasks,内有 **main.yml**  这个命名是规定好的.必须是main</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main.yml 书写了tasks的任务.</span><br><span class="line">[root@master roles]# cat test/tasks/main.yml </span><br><span class="line">---</span><br><span class="line">- name: test role ping</span><br><span class="line">  ping:</span><br><span class="line"></span><br><span class="line">[root@master roles]#</span><br></pre></td></tr></table></figure></p>
<p>结果如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@master roles]# ansible-playbook test.yml </span><br><span class="line"></span><br><span class="line">PLAY [all] ************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] ************************************************************************</span><br><span class="line">ok: [10.1.27.28]</span><br><span class="line">ok: [10.1.27.24]</span><br><span class="line"></span><br><span class="line">TASK [test : test role ping] ******************************************************************</span><br><span class="line">ok: [10.1.27.28]</span><br><span class="line">ok: [10.1.27.24]</span><br><span class="line"></span><br><span class="line">PLAY RECAP ************************************************************************************</span><br><span class="line">10.1.27.24                 : ok=2    changed=0    unreachable=0    failed=0   </span><br><span class="line">10.1.27.28                 : ok=2    changed=0    unreachable=0    failed=0</span><br></pre></td></tr></table></figure></p>
<p>roles有很多结构,ansible可以根据其进行解析.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├── defaults</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">├── meta</span><br><span class="line">├── tasks</span><br><span class="line">├── templates</span><br><span class="line">└── vars</span><br></pre></td></tr></table></figure>
<p>如果<code>roles/x/tasks/main.yml</code>存在,则自动将里面的tasks添加到play中。<br>如果<code>roles/x/handlers/main.yml</code>存在,则自动将里面的handlers添加到play中。<br>如果<code>roles/x/vars/main.yml</code>存在, 则自动将其中的variables添加到play中。<br>如果<code>roles/x/meta/main.yml</code>存在,则添加role的依赖关系roles中。<br>任何<code>copy</code>任务、<code>script</code>任务都可以引用<code>roles/x/files</code>中的文件，无论是使用绝对或相对路径都可以。<br>任何<code>template</code>任务都可以引用<code>roles/x/templates</code>中的文件，无论绝对或相对路径。<br>任何<code>include</code>任务都可以引用<code>roles/x/tasks/</code>中的文件，无论相对或绝对路径</p>
<p>具体可以参见文档：<a href="http://docs.ansible.com/playbooks_intro.html" target="_blank" rel="noopener">http://docs.ansible.com/playbooks_intro.html</a></p>
<h4 id="ansible和saltstack的对比"><a href="#ansible和saltstack的对比" class="headerlink" title="ansible和saltstack的对比"></a>ansible和saltstack的对比</h4><blockquote>
<p>  1、salt要安装agent , ansible通过ssh连接。</p>
<p>  2、salt在server端要启进程；ansible不需要。</p>
<p>  3、salt与ansible都有模块，可使用任意语言开发模块。</p>
<p>  4、salt与ansible都使用yaml语言格式编写剧本。</p>
<p>  ansible走的是ssh,所以它有认证以及加密码的过程，使得ansible非常慢，不适用于大规模环境（指上千台）</p>
</blockquote>
<hr>
]]></content>
      
        <categories>
            
            <category> 运维工具 </category>
            
            <category> 自动化 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx+tomcat+redis实现负载与session]]></title>
      <url>/2017/02/20/nginx-tomcat-redis%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E4%B8%8Esession/</url>
      <content type="html"><![CDATA[<p>可实现nginx的负载,session共享,后台健康检测,以达到故障后实现快速切换<br><a id="more"></a><br>安装需要准备的包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">commons-pool2-2.2.jar</span><br><span class="line">jedis-2.7.2.jar</span><br><span class="line">tomcat-redis-session-manage-tomcat7.jar</span><br><span class="line">#目前上面这些组件不支持tomcat8.0</span><br><span class="line">apache-tomcat-7.0.75.tar.gz</span><br><span class="line">jdk-8u45-linux-x64.tar.gz    #用以支持JAVA</span><br><span class="line">nginx-1.7.8.tar.gz</span><br><span class="line">nginx_upstream_check_module-master.zip   #后台健康监测插件，需要安装Nginx时编译进去</span><br></pre></td></tr></table></figure>
<p><strong>YUM源为epel</strong></p>
<p>规划—(测试机的配置基本一致，本文只书写其一)</p>
<table>
<thead>
<tr>
<th>IP</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>192.168.247.151</td>
<td>Nginx+Redis</td>
</tr>
<tr>
<td>192.168.247.152</td>
<td>tomcat（test1）</td>
</tr>
<tr>
<td>192.168.247.153</td>
<td>tomcat（test2）</td>
</tr>
</tbody>
</table>
<blockquote>
<p>  192.168.247.151</p>
</blockquote>
<h5 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h5><p>为了支持Nginx的rewrite功能，首先安装pcre*模块</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install pcre*</span><br></pre></td></tr></table></figure>
<p>为了进行后台的健康检测，所以下载淘宝的检测插件，安装Nginx直接编译进去</p>
<p>/usr/local/src</p>
<p><strong>nginx_upstream_check_module-master.zip 和nginx-1.7.8.tar.gz</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">unzip  nginx_upstream_check_module-master.zip</span><br><span class="line">tar -zxvf nginx-1.7.8.tar.gz</span><br><span class="line">cd nginx-1.7.8</span><br><span class="line">./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_spdy_module --with-http_stub_status_module --with-pcre --add-module=/usr/local/src/nginx_upstream_check_module-master</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>注意：如果是Nginx安装后进行的编译</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.7.8</span><br><span class="line">patch -p1 &lt; ../nginx_http_upstream_check_module/check_1.7.?+.patch    #版本根据Nginx选择</span><br><span class="line">./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_spdy_module --with-http_stub_status_module --with-pcre --add-module=/usr/local/src/nginx_upstream_check_module-master</span><br><span class="line">make     #千万不能  make install  不然就真的覆盖了</span><br><span class="line">mv /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx-1.7.0.bak</span><br><span class="line">cp ./objs/nginx /usr/local/nginx/sbin/</span><br><span class="line">/usr/local/nginx/sbin/nginx    #启动Nginx</span><br></pre></td></tr></table></figure>
<h6 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h6><p>/usr/local/nginx/conf/nginx.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    #开启负载均衡，指向后台tomcat集群</span><br><span class="line">    upstream test &#123;</span><br><span class="line">        server 192.168.247.152:8080;</span><br><span class="line">        server 192.168.247.153:8080;</span><br><span class="line">        #开启健康检测机制</span><br><span class="line">        check interval=3000 rise=2 fall=5 timeout=1000 type=http;</span><br><span class="line">        check_http_send &quot;HEAD /test HTTP/1.0\r\n\r\n&quot;;</span><br><span class="line">        check_http_expect_alive http_2xx http_3xx;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    server&#123;</span><br><span class="line">        listen  80;</span><br><span class="line">        #server_name test.test.com; #设置域名</span><br><span class="line">        #健康检测界面</span><br><span class="line">        location = /nstatus &#123;</span><br><span class="line">            check_status;</span><br><span class="line">            access_log off;</span><br><span class="line">            allow all;</span><br><span class="line">            &#125;</span><br><span class="line">        #测试页面 自己在tomcat上新建的</span><br><span class="line">        location /test &#123;</span><br><span class="line">            proxy_pass http://test;</span><br><span class="line">            proxy_set_header Host $host; </span><br><span class="line">            proxy_redirect off; </span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr; </span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>启动Nginx 输入健康检测地址即可看到后台tomcat状态</p>
<h5 id="安装Redis-实现session共享"><a href="#安装Redis-实现session共享" class="headerlink" title="安装Redis  实现session共享"></a>安装Redis  实现session共享</h5><p>下载redis包官网<a href="http://redis.io/" target="_blank" rel="noopener">http://redis.io</a></p>
<p>注：redis的test需要tcl的支持，所以可先检查下是否安装了tcl</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum - y install</span><br><span class="line">wget http://download.redis.io/redis-stable.tar.gz</span><br><span class="line">tar –zxvf redis-stable.tar.gz</span><br><span class="line">cd redis-stable</span><br><span class="line">make</span><br></pre></td></tr></table></figure>
<p>完毕后 src下会多出几个文件</p>
<p> redis-benchmark redis-check-aof redis-check-rdb redis-cli redis-sentinel  redis-server </p>
<p>可手动将其复制到/usr/local/bin目录下，也可执行make install</p>
<p>此处选择make install</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>注意：若此时执行redis-server –v (查看版本命令)，若提示redis-server command not found，则需要将/usr/local/bin目录加到环境变量，如何添加，此处不做详细介绍，可查看修改/etc/profile，(查看环境变量命令：echo $PATH)</p>
<p><strong>redis安装完毕</strong></p>
<h6 id="修改redis配置文件"><a href="#修改redis配置文件" class="headerlink" title="修改redis配置文件"></a>修改redis配置文件</h6><p>创建redis目录用以存放redis 日志 数据库 进程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/redis/&#123;data,log,run&#125;</span><br></pre></td></tr></table></figure>
<p>拷贝解压包下的redis.conf文件至/etc/redis</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -p /usr/local/src/redis-stable/redis.conf /etc/redis.conf</span><br><span class="line">vim /etc/redis.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">port 6379</span><br><span class="line">daemonize yes #开启后台进程</span><br><span class="line">pidfile /var/redis/run/6379.pid</span><br><span class="line">logfile /var/redis/log/redis.log</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir /var/redis/data  #数据库路径 默认是./</span><br><span class="line">requirepass centos #设置密码为centos</span><br><span class="line">#bind 127.0.0.1  默认是开启的，只允许本地登陆，所以，要不添加IP，要不给注释了</span><br></pre></td></tr></table></figure>
<p>启动redis</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">redis-server /etc/redis.conf</span><br><span class="line">ps -aux | grep redis</span><br><span class="line">redis-cli    #客户端连接，进入redis</span><br><span class="line"></span><br><span class="line">AUTH centos  #密码认证</span><br><span class="line">SHUTDOWN</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">service redis start</span><br></pre></td></tr></table></figure>
<h6 id="设置redis开机启动"><a href="#设置redis开机启动" class="headerlink" title="设置redis开机启动"></a>设置redis开机启动</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -p /usr/local/src/redis-stable/utils/redis_init_script /etc/init.d/redis</span><br><span class="line">ll    #看有没有执行权限</span><br></pre></td></tr></table></figure>
<p>修改脚本的pid,conf等路径,添加开机启动权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#开机启动</span><br><span class="line">#chkconfig: 2345 90 10</span><br><span class="line">#description: Redis is a persistent ket-value database</span><br><span class="line">#added by zili on 20170218  </span><br><span class="line"></span><br><span class="line">REDISPORT=6379</span><br><span class="line">EXEC=/usr/local/bin/redis-server</span><br><span class="line">CLIEXEC=/usr/local/bin/redis-cli</span><br><span class="line"></span><br><span class="line">PIDFILE=/var/redis/run/6379.pid</span><br><span class="line">CONF=&quot;/etc/redis.conf&quot;</span><br><span class="line">...</span><br><span class="line">#如果是在生产环境，那么就规划好端口等，尽量使用变量去实现，加以区分</span><br><span class="line">比如</span><br><span class="line">PIDFILE=/var/redis/run/$&#123;REDISPORT&#125;.pid</span><br><span class="line">CONF=&quot;/etc/redis_$&#123;REDISPORT&#125;.conf&quot;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service redis star | stop #等均可使用了，不能使用就查看权限 ll</span><br><span class="line">chkconfig redis on</span><br></pre></td></tr></table></figure>
<blockquote>
<p>192.168.254.152/153</p>
</blockquote>
<h5 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h5><p>tomcat 安装依赖JAVA的JDK 所以判断JDK是否安装并进行安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep java</span><br></pre></td></tr></table></figure>
<h6 id="删除openjdk"><a href="#删除openjdk" class="headerlink" title="删除openjdk"></a>删除openjdk</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps java-1.7....... # -e 删除 --nodeps强行删除</span><br></pre></td></tr></table></figure>
<p>下载 jdk-8u45-linux-x64.tar.gz 解压 到   /usr/java/</p>
<p>配置全局变量 vim /etc/profile  在末尾添家，注意路径！特别是JDK文件名字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">export RUN_AS_USER=root</span><br><span class="line">export JAVA_HOME=/usr/local/jdk1.8.0_45</span><br><span class="line">export CLASS_HOME=/usr/local/jdk1.8.0_45/lib:$JAVA_HOME/jre/lib</span><br><span class="line">#export JRE_HOME=/usr/local/jdk1.8.0_45/jre</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version  #不报错，能看版本，安装成功</span><br></pre></td></tr></table></figure>
<p>下载tomcat包 apache-tomcat-7.0.75.tar.gz  （注意redis组件目前不支持tomcat8.0）</p>
<p>以及三个是jar插件 commons-pool2-2.2.jar     jedis-2.7.2.jar    tomcat-redis-session-manage-tomcat7.jar</p>
<p>解压 tomcat安装包 到/usr/local/tomcat</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-tomcat-7.0.75.tar.gz </span><br><span class="line">mv apache-tomcat-7.0.75 /usr/local/tomcat</span><br><span class="line">mv  3个插件  /usr/local/tomcat/lib</span><br><span class="line">/usr/local/tomcat/bin/startup.sh</span><br></pre></td></tr></table></figure>
<p>浏览器即可访问tomcat  默认端口8080</p>
<h6 id="tomcat配置"><a href="#tomcat配置" class="headerlink" title="tomcat配置"></a>tomcat配置</h6><p>manager-gui等配置,去conf文件下修改 tomcat-users.xml</p>
<p>添加相应权限  注！只可以<strong>本地访问manager</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"tomcat"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"role1"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">"tomcat"</span> <span class="attr">password</span>=<span class="string">"tomcat"</span> <span class="attr">roles</span>=<span class="string">"tomcat"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">"both"</span> <span class="attr">password</span>=<span class="string">"tomcat"</span> <span class="attr">roles</span>=<span class="string">"tomcat,role1"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">"role1"</span> <span class="attr">password</span>=<span class="string">"tomcat"</span> <span class="attr">roles</span>=<span class="string">"role1"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"admin"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"admin-gui"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-gui"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">"vic"</span> <span class="attr">password</span>=<span class="string">"tomcat"</span> <span class="attr">roles</span>=<span class="string">"manager-gui,admin-gui,admin"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tomcat-users</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>重启生效</p>
<p>编辑test下的测试页面 主要测试session</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> %&gt;&lt;html&gt;</span><br><span class="line">  &lt;head&gt;&lt;title&gt;152&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;&lt;font color="green"&gt;152&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">    &lt;table align=<span class="string">"centre"</span> border=<span class="string">"1"</span>&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">       &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">        &lt;% session.setAttribute(<span class="string">"tomcat.suzf.net"</span>,<span class="string">"tomcat.suzf.net"</span>); %&gt;</span><br><span class="line">        &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h6 id="session共享保存设置"><a href="#session共享保存设置" class="headerlink" title="session共享保存设置"></a>session共享保存设置</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/tomcat/conf/context.xml</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Valve className=&quot;com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve&quot; /&gt;        </span><br><span class="line">&lt;Manager className=&quot;com.orangefunction.tomcat.redissessions.RedisSessionManager&quot; </span><br><span class="line">    host=&quot;192.168.247.151&quot;             &lt;!-- Redis地址 --&gt;</span><br><span class="line">    port=&quot;6379&quot;                        &lt;!-- Redis端口 --&gt;</span><br><span class="line">    password=&quot;centos&quot;                  &lt;!-- Redis密码 --&gt;</span><br><span class="line">    database=&quot;0&quot;                       &lt;!-- 存储Session的Redis库编号 --&gt;</span><br><span class="line">    maxInactiveInterval=&quot;60&quot;           &lt;!-- Session失效的间隔（秒） --&gt;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure>
<p>重启生效</p>
<p><strong>如若出现500错误 查看防火墙，selinux，iptables等以及redis是否启动</strong></p>
<p><em>完毕</em></p>
]]></content>
      
        <categories>
            
            <category> web </category>
            
            <category> nginx </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nginx </tag>
            
            <tag> tomcat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows常用命令]]></title>
      <url>/1111/11/11/windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h4 id="wmic"><a href="#wmic" class="headerlink" title="wmic"></a>wmic</h4><h5 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h5><p>a. 启动Windows Management Instrumentation服务，开放TCP135端口。<br>b. 本地安全策略的“网络访问: 本地帐户的共享和安全模式”应设为“经典-本地用户以自己的身份验证”。</p>
<ol>
<li>wmic /node:”192.168.1.20” /user:”domain\administrator” /password:”123456”</li>
</ol>
<h5 id="硬件信息-管理"><a href="#硬件信息-管理" class="headerlink" title="硬件信息(管理)"></a>硬件信息(管理)</h5><p>获取磁盘资料：<br><code>wmic DISKDRIVE get deviceid,Caption,size,InterfaceType</code></p>
<p>获取分区资料：<br><code>wmic LOGICALDISK get name,Description,filesystem,size,freespace</code></p>
<p>获取CPU资料:<br><code>wmic cpu get name,addresswidth,processorid</code></p>
<p>获取主板资料:<br><code>wmic BaseBoard get Manufacturer,Product,Version,SerialNumber</code></p>
<p>获取内存数:<br><code>wmic memlogical get totalphysicalmemory</code></p>
<p>获得品牌机的序列号:<br><code>wmic csproduct get IdentifyingNumber</code></p>
<p>获取声卡资料:<br><code>wmic SOUNDDEV get ProductName</code></p>
<p>获取屏幕分辨率<br><code>wmic DESKTOPMONITOR where Status=&#39;ok&#39; get ScreenHeight,ScreenWidth</code></p>
<h5 id="PROCESS-进程管理-："><a href="#PROCESS-进程管理-：" class="headerlink" title="PROCESS(进程管理)："></a>PROCESS(进程管理)：</h5><p>列出进程<br><code>wmic process list brief</code><br>(Full显示所有、Brief显示摘要、Instance显示实例、Status显示状态)</p>
<p>wmic 获取进程路径:<br><code>wmic process where name=&quot;jqs.exe&quot; get executablepath</code></p>
<p>wmic 创建新进程 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wmic process call create notepad</span><br><span class="line">wmic process call create &quot;C:\Program Files\Tencent\QQ\QQ.exe&quot; </span><br><span class="line">wmic process call create &quot;shutdown.exe -r -f -t 20&quot;</span><br></pre></td></tr></table></figure>
<p>wmic 删除指定进程: </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wmic process where name=&quot;qq.exe&quot; call terminate </span><br><span class="line">wmic process where processid=&quot;2345&quot; delete </span><br><span class="line">wmic process 2345 call terminate</span><br></pre></td></tr></table></figure>
<p>wmic 删除可疑进程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wmic process where &quot;name=&apos;explorer.exe&apos; and executablepath&lt;&gt;&apos;%SystemDrive%\windows\explorer.exe&apos;&quot; delete</span><br><span class="line"></span><br><span class="line">wmic process where &quot;name=&apos;svchost.exe&apos; and ExecutablePath&lt;&gt;&apos;C:\WINDOWS\system32\svchost.exe&apos;&quot; call Terminate</span><br></pre></td></tr></table></figure>
<h5 id="USERACCOUNT-账号管理-："><a href="#USERACCOUNT-账号管理-：" class="headerlink" title="USERACCOUNT(账号管理)："></a>USERACCOUNT(账号管理)：</h5><p>更改当前用户名 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WMIC USERACCOUNT where &quot;name=&apos;%UserName%&apos;&quot; call rename newUserName </span><br><span class="line"></span><br><span class="line">WMIC USERACCOUNT create /?</span><br></pre></td></tr></table></figure>
<h5 id="SHARE-共享管理-："><a href="#SHARE-共享管理-：" class="headerlink" title="SHARE(共享管理)："></a>SHARE(共享管理)：</h5><p>建立共享</p>
<p><code>WMIC SHARE CALL Create &quot;&quot;,&quot;test&quot;,&quot;3&quot;,&quot;TestShareName&quot;,&quot;&quot;,&quot;c:\test&quot;,0</code><br>(可使用 WMIC SHARE CALL Create /? 查看create后的参数类型)</p>
<p>删除共享<br><code>WMIC SHARE where name=&quot;C$&quot; call delete</code><br><code>WMIC SHARE where path=&#39;c:\\test&#39; delete</code></p>
<h5 id="SERVICE-服务管理-："><a href="#SERVICE-服务管理-：" class="headerlink" title="SERVICE(服务管理)："></a>SERVICE(服务管理)：</h5><p>更改telnet服务启动类型[Auto|Disabled|Manual]<br><code>wmic SERVICE where name=&quot;tlntsvr&quot; set startmode=&quot;Auto&quot;</code></p>
<p>运行telnet服务<br><code>wmic SERVICE where name=&quot;tlntsvr&quot; call startservice</code></p>
<p>停止ICS服务<br><code>wmic SERVICE where name=&quot;ShardAccess&quot; call stopservice</code></p>
<p>删除test服务<br><code>wmic SERVICE where name=&quot;test&quot; call delete</code></p>
<h5 id="FSDIR-目录管理"><a href="#FSDIR-目录管理" class="headerlink" title="FSDIR(目录管理)"></a>FSDIR(目录管理)</h5><p>列出c盘下名为test的目录<br><code>wmic FSDIR where &quot;drive=&#39;c:&#39; and filename=&#39;test&#39;&quot; list</code></p>
<p>删除c:\good文件夹<br><code>wmic fsdir &quot;c:\\test&quot; call delete</code></p>
<p>重命名c:\test文件夹为abc<br><code>wmic fsdir &quot;c:\\test&quot; rename &quot;c:\abc&quot;</code><br><code>wmic fsdir where (name=&#39;c:\\test&#39;) rename &quot;c:\abc&quot;</code></p>
<p>复制文件夹<br><code>wmic fsdir where name=&#39;d:\\test&#39; call copy &quot;c:\\test&quot;</code></p>
<h5 id="datafile-文件管理"><a href="#datafile-文件管理" class="headerlink" title="datafile(文件管理)"></a>datafile(文件管理)</h5><p>重命名<br><code>wmic datafile &quot;c:\\test.txt&quot; call rename c:\abc.txt</code></p>
<h5 id="任务计划："><a href="#任务计划：" class="headerlink" title="任务计划："></a>任务计划：</h5><p><code>wmic job call create &quot;notepad.exe&quot;,0,0,true,false,********154800.000000+480</code><br><code>wmic job call create &quot;explorer.exe&quot;,0,0,1,0,********154600.000000+480</code></p>
<h5 id="自动脚本"><a href="#自动脚本" class="headerlink" title="自动脚本"></a>自动脚本</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">::get os data</span><br><span class="line">wmic os get Caption,Version,SerialNumber,InstallDate /value</span><br><span class="line">echo ---</span><br><span class="line">:: get ip data</span><br><span class="line">wmic nicconfig where &quot;IPEnabled  = True&quot; get Description,DefaultIPGateway,IPAddress,IPSubnet,MACAddress /value</span><br><span class="line">echo ---</span><br><span class="line">:: get system data</span><br><span class="line">wmic COMPUTERSYSTEM get Name,NumberOfLogicalProcessors,NumberOfProcessors,TotalPhysicalMemory /value</span><br><span class="line">echo ---</span><br><span class="line">:: get cpu data</span><br><span class="line">wmic CPU get NAME,DeviceID /value</span><br><span class="line">echo ---</span><br><span class="line">:: get phydisk data</span><br><span class="line">wmic diskdrive get serialnumber,DeviceID,Size /value</span><br><span class="line">echo ---</span><br><span class="line">:: get logicaldisk data</span><br><span class="line">wmic logicaldisk get DeviceID,FreeSpace,Size,VolumeSerialNumber /value</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">::wmic nicconfig where &quot;IPEnabled  = True&quot; get Description,DefaultIPGateway,IPAddress,IPSubnet,MACAddress /value|findstr [1-9]</span><br><span class="line">:: 可去除不相关的回车换行等</span><br></pre></td></tr></table></figure>
<h4 id="cmd-bat"><a href="#cmd-bat" class="headerlink" title="cmd(bat)"></a>cmd(bat)</h4><h5 id="取ip"><a href="#取ip" class="headerlink" title="取ip"></a>取ip</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off </span><br><span class="line">for /f &quot;tokens=2 delims=:&quot; %%b in (&apos;ipconfig^|find /i &quot;ip&quot;&apos;) do set minion=%%b</span><br><span class="line">echo %minion%</span><br></pre></td></tr></table></figure>
<h4 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h4><h5 id="获取系统硬件信息"><a href="#获取系统硬件信息" class="headerlink" title="获取系统硬件信息"></a>获取系统硬件信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$os_version=Get-CimInstance -ClassName Win32_OperatingSystem | Select-Object -ExpandProperty Caption</span><br><span class="line">$os_kernel=Get-CimInstance -ClassName Win32_OperatingSystem | Select-Object -ExpandProperty version</span><br><span class="line">$cpu_model=Get-CimInstance Win32_processor | Select-Object -ExpandProperty name -Unique</span><br><span class="line">$cpu_num=(Get-CimInstance Win32_processor | Select-Object -ExpandProperty name).count</span><br><span class="line">$cpu_core=(Get-CimInstance Win32_processor | Select-Object -ExpandProperty processorid).count</span><br><span class="line">$mem_total=(get-CimInstance -class Win32_PhysicalMemory   -namespace &quot;root\cimv2&quot;).Capacity</span><br><span class="line">$disk_total=Get-CimInstance -class win32_logicaldisk | Measure-Object -Sum size | Select-Object -ExpandProperty sum</span><br><span class="line">$product_id=Get-CimInstance -ClassName Win32_OperatingSystem | Select-Object -ExpandProperty SerialNumber</span><br><span class="line"></span><br><span class="line">$os_info = @&quot;</span><br><span class="line">&#123;&quot;os_sys&quot;:&quot;Windows&quot;,&quot;os_version&quot;:&quot;$os_version&quot;,&quot;os_kernel&quot;:&quot;$os_kernel&quot;,&quot;cpu_model&quot;:&quot;$cpu_model&quot;,&quot;cpu_num&quot;:&quot;$cpu_num&quot;,&quot;cpu_core&quot;:&quot;$cpu_core&quot;,&quot;mem_total&quot;:&quot;$mem_total&quot;,&quot;disk_total&quot;:&quot;$disk_total&quot;,&quot;product_id&quot;:&quot;$product_id&quot;&#125;</span><br><span class="line">&quot;@</span><br><span class="line"></span><br><span class="line">$os_info</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> windows </category>
            
        </categories>
        
        
        <tags>
            
            <tag> -个人备忘手册 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux个人备忘手册]]></title>
      <url>/1111/11/11/linux%E4%B8%AA%E4%BA%BA%E5%A4%87%E5%BF%98%E6%89%8B%E5%86%8C/</url>
      <content type="html"><![CDATA[<blockquote>
<p>一些小命令的记录</p>
</blockquote>
<a id="more"></a>
<h4 id="按当前日期命名文件"><a href="#按当前日期命名文件" class="headerlink" title="按当前日期命名文件"></a>按当前日期命名文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建备份Shell脚本:</span><br><span class="line">输入/粘贴以下内容：</span><br><span class="line">#!/bin/bash</span><br><span class="line">mysqldump -uusername -ppassword DatabaseName &gt; /home/backup/DatabaseName_$(date +%Y%m%d_%H%M%S).sql</span><br><span class="line">对备份进行压缩：</span><br><span class="line">#!/bin/bash</span><br><span class="line">mysqldump -uusername -ppassword DatabaseName | gzip &gt; /home/backup/DatabaseName_$(date +%Y%m%d_%H%M%S).sql.gz</span><br></pre></td></tr></table></figure>
<h4 id="定时备份"><a href="#定时备份" class="headerlink" title="定时备份"></a>定时备份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/bash</span><br><span class="line">cd /var/log/</span><br><span class="line">tar -zcf /var/log/haproxy_log_bk/$(date +%Y%m%d_%H%M%S).tar.gz haproxy.log</span><br><span class="line">echo &quot;&quot; &gt; haproxy.log</span><br></pre></td></tr></table></figure>
<h4 id="mtime"><a href="#mtime" class="headerlink" title="-mtime"></a>-mtime</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">查找 并移动3天前的</span><br><span class="line">find /net-log/ -mtime +3 -name &quot;*.log&quot; -exec mv &#123;&#125; /tmp/ \;</span><br><span class="line">删除</span><br><span class="line">find /net-log/ -mtime +3 -name &quot;*.log&quot; -exec rm -rf &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">命令可写到定时任务中,对长时间不读取文件进行删除</span><br><span class="line">crontab -e</span><br><span class="line">* * * * *  + 程序 +命令或脚本</span><br><span class="line">#如果是bash命令 可直接写.</span><br><span class="line">例:每天0点执行test.py</span><br><span class="line">0 0 * * *  /usr/bin/python3   /script/test.py</span><br></pre></td></tr></table></figure>
<h4 id="ssh快捷登录"><a href="#ssh快捷登录" class="headerlink" title="ssh快捷登录"></a>ssh快捷登录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">zili@Ubuntu:~$ cat ~/.ssh/config</span><br><span class="line">ServerAliveInterval 60 #60S发送一次存活信息,以免断开</span><br><span class="line">Host study</span><br><span class="line">User root</span><br><span class="line">Hostname 10.1.1.11</span><br><span class="line">Port 21131</span><br><span class="line">#默认为22 有修改则填写</span><br><span class="line">#若有多个主机,直接复制修改即可</span><br><span class="line">zili@Ubuntu:~$ ssh study</span><br><span class="line">root@10.1.1.11&apos;s password:</span><br></pre></td></tr></table></figure>
<h4 id="mysql开启远程"><a href="#mysql开启远程" class="headerlink" title="mysql开启远程"></a>mysql开启远程</h4><p><code>GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;youpassword&#39; WITH GRANT OPTION;</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user,host from mysql.user;</span><br><span class="line">+--------+-----------+</span><br><span class="line">| user   | host      |</span><br><span class="line">+--------+-----------+</span><br><span class="line">| root   | 127.0.0.1 |</span><br><span class="line">| root   | localhost |</span><br><span class="line">+--------+-----------+</span><br><span class="line"></span><br><span class="line">mysql&gt; show status like &apos;Threads%&apos;;</span><br><span class="line">+-------------------+-------+</span><br><span class="line">| Variable_name     | Value |</span><br><span class="line">+-------------------+-------+</span><br><span class="line">| Threads_cached    | 58    |</span><br><span class="line">| Threads_connected | 57    |   ###这个数值指的是打开的连接数</span><br><span class="line">| Threads_created   | 3676  |</span><br><span class="line">| Threads_running   | 4     |   ###这个数值指的是激活的连接数，这个数值一般远低于connected数值</span><br><span class="line">+-------------------+-------+</span><br><span class="line"></span><br><span class="line">Threads_connected 跟show processlist结果相同，表示当前连接数。准确的来说，Threads_running是代表当前并发数</span><br><span class="line"></span><br><span class="line">这是是查询数据库当前设置的最大连接数</span><br><span class="line">mysql&gt; show variables like &apos;%max_connections%&apos;;</span><br><span class="line">+-----------------+-------+</span><br><span class="line">| Variable_name   | Value |</span><br><span class="line">+-----------------+-------+</span><br><span class="line">| max_connections | 1000  |</span><br><span class="line">+-----------------+-------+</span><br><span class="line"></span><br><span class="line">可以在/etc/my.cnf里面设置数据库的最大连接数</span><br><span class="line">[mysqld]</span><br><span class="line">max_connections = 10000</span><br></pre></td></tr></table></figure>
<h4 id="开启snmp"><a href="#开启snmp" class="headerlink" title="开启snmp"></a>开启snmp</h4><p><code>yum –y install net-snmp net-snmp-devel</code><br>若要使用snmpwalk进行安装检测，则还需要<br><code>yum –y install net-snmp-utils</code></p>
<p><code>vi /etc/snmp/snmpd.conf</code><br>把<code>62</code>行中的<code>systemview</code>改为<code>mib2</code><br>把<code>89行的</code>#<code>去掉。
然后在最后一行添加</code>rwcommunity  ge.<code>保存退出。
防火墙添加策略,重启服务即可</code>snmpwalk -v 2c -c public localhost sysName.0<code>可做验证,默认社区号是</code>public<code>若需要修改则</code>41<code>行中</code>public`换为指定字符串即可</p>
<h4 id="openssl自签"><a href="#openssl自签" class="headerlink" title="openssl自签"></a>openssl自签</h4><p>Key是私用秘钥，通常是RSA算法<br>Csr是证书请求文件，用于申请证书。在制作csr文件时，必须使用自己的私钥来签署申，还可以设定一个密钥。<br>crt是CA认证后的证书文，签署人用自己的key给你签署凭证。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 生成一个RSA密钥</span><br><span class="line">openssl genrsa -des3 -out 33iq.key 1024</span><br><span class="line"></span><br><span class="line"># 拷贝一个不需要输入密码的密钥文件</span><br><span class="line">openssl rsa -in 33iq.key -out 33iq_nopass.key</span><br><span class="line"></span><br><span class="line"># 生成一个证书请求</span><br><span class="line">openssl req -new -key 33iq.key -out 33iq.csr</span><br><span class="line"></span><br><span class="line"># 自己签发证书</span><br><span class="line">openssl x509 -req -days 365 -in 33iq.csr -signkey 33iq.key -out 33iq.crt</span><br></pre></td></tr></table></figure></p>
<h4 id="pip源更换"><a href="#pip源更换" class="headerlink" title="pip源更换"></a>pip源更换</h4><p>pip国内的一些镜像</p>
<pre><code>- 阿里云 http://mirrors.aliyun.com/pypi/simple/
- 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/
- 豆瓣(douban) http://pypi.douban.com/simple/
- 清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/
- 中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/
</code></pre><p>临时使用：<br>可以在使用pip的时候在后面加上-i参数，指定pip源<br><code>pip install scrapy -i https://pypi.tuna.tsinghua.edu.cn/simple</code></p>
<p>永久修改：<br>    linux:<br>    修改 ~/.pip/pip.conf (没有就创建一个)，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></p>
<h4 id="shell保留最近的N个文件"><a href="#shell保留最近的N个文件" class="headerlink" title="shell保留最近的N个文件"></a>shell保留最近的N个文件</h4><p><code>cd 指定目录 &amp;&amp; ls -lt | awk &#39;{if(NR&gt;=11){print $9}}&#39; | xargs rm -f</code></p>
<h4 id="shell-for循环计数比对"><a href="#shell-for循环计数比对" class="headerlink" title="shell for循环计数比对"></a>shell for循环计数比对</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">get_disk()&#123;</span><br><span class="line">    i=1</span><br><span class="line">    for line in `iostat -d | awk -F &quot; *&quot; &apos;&#123;print $1&#125;&apos;`;do</span><br><span class="line">            i=$((i+1))</span><br><span class="line">    done</span><br><span class="line"></span><br><span class="line">    ii=1</span><br><span class="line">    printf &quot;&#123;\n&quot;</span><br><span class="line">    printf &quot;\t\&quot;data\&quot;:[\n&quot;</span><br><span class="line">    for line in `iostat -d | awk -F &quot; *&quot; &apos;&#123;print $1&#125;&apos;`;do</span><br><span class="line">            ii=$((ii+1))</span><br><span class="line">            disk=$line</span><br><span class="line">            if [ &quot;$ii&quot; == $i ];</span><br><span class="line">            then</span><br><span class="line">                printf &quot;\t&#123;\t\t\&quot;&#123;#DISK&#125;\&quot;:\&quot;$disk\&quot;\t&#125;&quot;;</span><br><span class="line">            else</span><br><span class="line">                printf &quot;\t&#123;\t\t\&quot;&#123;#DISK&#125;\&quot;:\&quot;$disk\&quot;\t&#125;,&quot;;</span><br><span class="line">            fi</span><br><span class="line">    done</span><br><span class="line">    printf &quot;\n\t]\n&quot;</span><br><span class="line">    printf &quot;&#125;\n&quot;</span><br><span class="line">&#125;</span><br><span class="line">echo $(get_disk)</span><br></pre></td></tr></table></figure>
<h4 id="shell-统计指定文件ip数"><a href="#shell-统计指定文件ip数" class="headerlink" title="shell 统计指定文件ip数"></a>shell 统计指定文件ip数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">在/tmp下有大量文件access1.log,access2.log...，内容格式为:时间 IP,例:</span><br><span class="line"></span><br><span class="line">a1.log</span><br><span class="line">2018-01-01 127.0.0.1</span><br><span class="line">2018-01-02 127.0.0.1</span><br><span class="line">2018-01-02 127.0.0.1</span><br><span class="line">2018-01-02 10.10.2.2</span><br><span class="line">2018-01-03 192.168.1.1</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">取出最后十个文件,文件内容去重,并统计重复IP数,取第四行,存入count中</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">!/bin/bash</span><br><span class="line">for filename in find /tmp-type f -name &quot;access*.log&quot; | tail -n 10</span><br><span class="line">do</span><br><span class="line">  sed -n &apos;4p&apos; $filename | awk &apos;&#123;print $2&#125;&apos; | uniq -c &gt;&gt;count</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h4 id="shell-系统判断"><a href="#shell-系统判断" class="headerlink" title="shell 系统判断"></a>shell 系统判断</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">check_os_release()</span><br><span class="line">&#123;</span><br><span class="line">  while true</span><br><span class="line">  do</span><br><span class="line">    os_release=$(grep &quot;Red Hat Enterprise Linux Server release&quot; /etc/issue 2&gt;/dev/null)</span><br><span class="line">    os_release_2=$(grep &quot;Red Hat Enterprise Linux Server release&quot; /etc/redhat-release 2&gt;/dev/null)</span><br><span class="line">    if [ &quot;$os_release&quot; ] &amp;&amp; [ &quot;$os_release_2&quot; ]</span><br><span class="line">    then</span><br><span class="line">      if echo &quot;$os_release&quot;|grep &quot;release 5&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=redhat5</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      elif echo &quot;$os_release&quot;|grep &quot;release 6&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=redhat6</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      elif echo &quot;$os_release&quot;|grep &quot;release 7&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=redhat7</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      else</span><br><span class="line">        os_release=&quot;&quot;</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      fi</span><br><span class="line">      break</span><br><span class="line">    fi</span><br><span class="line">    os_release=$(grep &quot;Aliyun Linux release&quot; /etc/issue 2&gt;/dev/null)</span><br><span class="line">    os_release_2=$(grep &quot;Aliyun Linux release&quot; /etc/aliyun-release 2&gt;/dev/null)</span><br><span class="line">    if [ &quot;$os_release&quot; ] &amp;&amp; [ &quot;$os_release_2&quot; ]</span><br><span class="line">    then</span><br><span class="line">      if echo &quot;$os_release&quot;|grep &quot;release 5&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=aliyun5</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      elif echo &quot;$os_release&quot;|grep &quot;release 6&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=aliyun6</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      elif echo &quot;$os_release&quot;|grep &quot;release 7&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=aliyun7</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      else</span><br><span class="line">        os_release=&quot;&quot;</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      fi</span><br><span class="line">      break</span><br><span class="line">    fi</span><br><span class="line">    os_release_2=$(grep &quot;CentOS&quot; /etc/*release 2&gt;/dev/null)</span><br><span class="line">    if [ &quot;$os_release_2&quot; ]</span><br><span class="line">    then</span><br><span class="line">      if echo &quot;$os_release_2&quot;|grep &quot;release 5&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=centos5</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      elif echo &quot;$os_release_2&quot;|grep &quot;release 6&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=centos6</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      elif echo &quot;$os_release_2&quot;|grep &quot;release 7&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=centos7</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      else</span><br><span class="line">        os_release=&quot;&quot;</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      fi</span><br><span class="line">      break</span><br><span class="line">    fi</span><br><span class="line">    os_release=$(grep -i &quot;ubuntu&quot; /etc/issue 2&gt;/dev/null)</span><br><span class="line">    os_release_2=$(grep -i &quot;ubuntu&quot; /etc/lsb-release 2&gt;/dev/null)</span><br><span class="line">    if [ &quot;$os_release&quot; ] &amp;&amp; [ &quot;$os_release_2&quot; ]</span><br><span class="line">    then</span><br><span class="line">      if echo &quot;$os_release&quot;|grep &quot;Ubuntu 10&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=ubuntu10</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      elif echo &quot;$os_release&quot;|grep &quot;Ubuntu 12.04&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=ubuntu1204</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      elif echo &quot;$os_release&quot;|grep &quot;Ubuntu 12.10&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=ubuntu1210</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      elif echo &quot;$os_release&quot;|grep &quot;Ubuntu 14.04&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=ubuntu1204</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      elif echo &quot;$os_release&quot;|grep &quot;Ubuntu 16.04&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=ubuntu1604</span><br><span class="line">        echo &quot;$os_release&quot; </span><br><span class="line">      else</span><br><span class="line">        os_release=&quot;&quot;</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      fi</span><br><span class="line">      break</span><br><span class="line">    fi</span><br><span class="line">    os_release=$(grep -i &quot;debian&quot; /etc/issue 2&gt;/dev/null)</span><br><span class="line">    os_release_2=$(grep -i &quot;debian&quot; /proc/version 2&gt;/dev/null)</span><br><span class="line">    if [ &quot;$os_release&quot; ] &amp;&amp; [ &quot;$os_release_2&quot; ]</span><br><span class="line">    then</span><br><span class="line">      if echo &quot;$os_release&quot;|grep &quot;Linux 6&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=debian6</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      elif echo &quot;$os_release&quot;|grep &quot;Linux 7&quot; &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">      then</span><br><span class="line">        os_release=debian7</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      else</span><br><span class="line">        os_release=&quot;&quot;</span><br><span class="line">        echo &quot;$os_release&quot;</span><br><span class="line">      fi</span><br><span class="line">      break</span><br><span class="line">    fi</span><br><span class="line">    break</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">os_release=$(check_os_release)</span><br></pre></td></tr></table></figure>
<h4 id="shell获取系统硬件资源信息"><a href="#shell获取系统硬件资源信息" class="headerlink" title="shell获取系统硬件资源信息"></a>shell获取系统硬件资源信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#获取centos信息</span><br><span class="line">get_info()&#123;</span><br><span class="line">  os_sys=`uname -o`</span><br><span class="line">  product_id=`dmidecode -t 1 | grep Serial`</span><br><span class="line">  if [[ $os_release =~ &apos;ubuntu&apos; ]];then</span><br><span class="line">    os_version=`grep -i &quot;ubuntu&quot; /etc/issue | awk -F&apos; &apos; &apos;&#123;print $1$2$3&#125;&apos;`</span><br><span class="line">  elif [[ $os_release =~ &apos;centos&apos; ]];then</span><br><span class="line">    os_version=`cat /etc/redhat-release`</span><br><span class="line">  elif [[ $os_release =~ &apos;redhat&apos; ]];then</span><br><span class="line">    os_version=`cat /etc/redhat-release`</span><br><span class="line">  else</span><br><span class="line">    os_version=`cat /etc/redhat-release`</span><br><span class="line">  fi</span><br><span class="line">  os_kernel=`uname -r`</span><br><span class="line">  cpu_model=`grep &apos;model name&apos; /proc/cpuinfo |uniq |awk -F : &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">  cpu_num=`cat /proc/cpuinfo| grep &apos;physical id&apos;| sort| uniq| wc -l`</span><br><span class="line">  cpu_core=`grep &apos;cpu cores&apos; /proc/cpuinfo |uniq |awk -F : &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">  cpu_load=`cat /proc/loadavg | awk &apos;&#123;print $1&#125;&apos;`</span><br><span class="line">  #mem_total=`free -m |grep -i mem |awk &apos;&#123; print $2&#125;&apos;`</span><br><span class="line">  #系统总内存,与物理不符,因为系统初始化会保留一部分内存</span><br><span class="line">  mem_total=(`dmidecode -t memory | grep &apos;Installed Size&apos; | awk -F : &apos;NR==1&#123; print $2 &#125;&apos;`)</span><br><span class="line">  #disk_total=`lsblk | grep -E -i &apos;disk|磁盘&apos; | grep -E -i &apos;sd|vd&apos; | awk &apos;&#123; print $4 &#125;&apos; | sed &apos;s/G//g&apos;`</span><br><span class="line">  disk_total_o=`cat /proc/partitions | grep -w &quot;0&quot; |grep -E -i &apos;sd|vd&apos; | awk &apos;&#123;print $3&#125;&apos;`</span><br><span class="line">  disk_total=$[disk_total_o/1024/1024]</span><br><span class="line"></span><br><span class="line">  # SUSE lsblk -m | grep -E -i &apos;disk|磁盘&apos; | grep -E -i &apos;sd|vd&apos;  | awk &apos;NR==1&#123; print $2 &#125;&apos;</span><br><span class="line"></span><br><span class="line">#dict</span><br><span class="line">  echo &quot;&#123;\</span><br><span class="line">    \&quot;os_sys\&quot;:\&quot;$os_sys\&quot;,\</span><br><span class="line">    \&quot;os_version\&quot;:\&quot;$os_version\&quot;,\</span><br><span class="line">    \&quot;os_kernel\&quot;:\&quot;$os_kernel\&quot;,\</span><br><span class="line">    \&quot;cpu_model\&quot;:\&quot;$cpu_model\&quot;,\</span><br><span class="line">    \&quot;cpu_num\&quot;:\&quot;$cpu_num\&quot;,\</span><br><span class="line">    \&quot;cpu_core\&quot;:\&quot;$cpu_core\&quot;,\</span><br><span class="line">    \&quot;mem_total\&quot;:\&quot;$mem_total\&quot;,\</span><br><span class="line">    \&quot;product_id\&quot;:\&quot;$product_id\&quot;,\</span><br><span class="line">    \&quot;disk_total\&quot;:\&quot;$disk_total\&quot;\</span><br><span class="line">  &#125;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo $(get_info)</span><br></pre></td></tr></table></figure>
<h4 id="win7-centos双系统-引导修复"><a href="#win7-centos双系统-引导修复" class="headerlink" title="win7 centos双系统 引导修复"></a>win7 centos双系统 引导修复</h4><p>先有centos7 再有win7 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 修复grub引导</span><br><span class="line">grub2-install --root-directory=/mnt/sysimage /dev/sda</span><br><span class="line">sync</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>
<p>先有win7 再有centos7</p>
<p>需要安装<code>ntfs-3g</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install ntfs-3g</span><br><span class="line"></span><br><span class="line"># 修复启动项</span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 设置默认启动win7，&quot;Windows 7&quot;是根据文件/boot/grub2/grub.cfg中得到的</span><br><span class="line"></span><br><span class="line"># 查找配置文件中的 menuentry &apos;xxxxxx&apos; 的项就是了, &apos;xxxxxx&apos;可随意更改。</span><br><span class="line">grub2-set-default  &quot;Windows 7&quot;</span><br><span class="line">grub2-editenv list</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> -个人备忘手册 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常用配置文件示例]]></title>
      <url>/1111/11/11/zz%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%A4%BA%E4%BE%8B/</url>
      <content type="html"><![CDATA[<p>常用配置文件示例<br><a id="more"></a></p>
<h4 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h4><h5 id="反代-跨域-session"><a href="#反代-跨域-session" class="headerlink" title="反代,跨域,session"></a>反代,跨域,session</h5><p>一个tomcat下跑多个应用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line">worker_processes  auto;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">    multi_accept on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line">    server_names_hash_bucket_size 128;</span><br><span class="line">    client_header_buffer_size 32k;</span><br><span class="line">    large_client_header_buffers 4 32k;</span><br><span class="line">    client_max_body_size 50m;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    gzip  on;</span><br><span class="line">    gzip_min_length  1k;</span><br><span class="line">    gzip_buffers     4 16k;</span><br><span class="line">    gzip_http_version 1.1;</span><br><span class="line">    gzip_comp_level 2;</span><br><span class="line">    gzip_types     text/plain application/javascript application/x-javascript   text/javascript text/css application/xml application/xml+rss;</span><br><span class="line">    gzip_vary on;</span><br><span class="line">    gzip_proxied   expired no-cache no-store private auth;</span><br><span class="line">    gzip_disable   &quot;MSIE [1-6]\.&quot;;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  192.168.1.42;</span><br><span class="line"></span><br><span class="line">        error_log  logs/error.log;</span><br><span class="line">        access_log logs/access.log;</span><br><span class="line"></span><br><span class="line">        default_type &apos;text/html&apos;;</span><br><span class="line">        charset utf-8;</span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line">    </span><br><span class="line">        #root    /usr/local/nginx/html;</span><br><span class="line">    </span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/local/nginx/html;</span><br><span class="line">            #index  index.html index.htm;</span><br><span class="line">            add_header &apos;Access-Control-Allow-Origin&apos; *;</span><br><span class="line">        try_files $uri $uri/ @router;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /itsm/ &#123;</span><br><span class="line">                root   /usr/local/nginx/html;</span><br><span class="line">                add_header &apos;Access-Control-Allow-Origin&apos; *;</span><br><span class="line">                #try_files $uri $uri/ @router;</span><br><span class="line">                try_files $uri $uri/ /itsm/index.html;</span><br><span class="line">                index  index.html index.htm;</span><br><span class="line">                #error_log  logs/vue_itsm_error.log;</span><br><span class="line">                #access_log logs/vue_itsm_access.log; </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        location @router &#123;</span><br><span class="line">                rewrite ^.*$ /index.html last;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">            # redirect server error pages to the static page /50x.html</span><br><span class="line">            #</span><br><span class="line">            error_page   500 502 503 504  /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">                root   html;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">            root           /usr/local/nginx/html;</span><br><span class="line">            fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            fastcgi_param  SCRIPT_FILENAME  /usr/local/nginx/html/$fastcgi_script_name;</span><br><span class="line">            include        fastcgi_params;</span><br><span class="line">            access_log logs/php_access.log;</span><br><span class="line">            error_log  logs/php_error.log  notice;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /cmdb &#123;</span><br><span class="line">                proxy_set_header Host $host;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_pass http://192.168.1.42:8080/cmdb/;</span><br><span class="line">            proxy_ignore_client_abort on;</span><br><span class="line">            #error_log  logs/cmdb_error.log;</span><br><span class="line">                #access_log logs/cmdb_access.log;</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        location /itsm/cmdb &#123;</span><br><span class="line">                proxy_set_header Host $host;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_pass http://192.168.1.42:8080/cmdb/;</span><br><span class="line">                proxy_ignore_client_abort on;</span><br><span class="line">                #error_log  logs/cmdb_error.log;</span><br><span class="line">                #access_log logs/cmdb_access.log;</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">        location  /itsmboot &#123;</span><br><span class="line">                proxy_set_header Host $host;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_pass http://192.168.1.42:8080/itsmboot/;</span><br><span class="line">                proxy_cookie_path /cmdb /itsmboot;  #处理跳转的</span><br><span class="line">                proxy_ignore_client_abort on;</span><br><span class="line">            #    error_log  logs/itsm_error.log;</span><br><span class="line">            #    access_log logs/itsm_access.log;</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        location  /itsm/itsmboot &#123;</span><br><span class="line">                proxy_set_header Host $host;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_pass http://192.168.1.42:8080/itsmboot/;</span><br><span class="line">                proxy_ignore_client_abort on;</span><br><span class="line">            #    error_log  logs/itsm_error.log;</span><br><span class="line">            #    access_log logs/itsm_access.log;</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">        #websocket ping</span><br><span class="line">        location /cmdb/wsping &#123;</span><br><span class="line">            	proxy_pass http://192.168.1.155:8080/cmdb/webSocket;</span><br><span class="line">                proxy_redirect off;</span><br><span class="line">            	proxy_read_timeout 300s;</span><br><span class="line">                proxy_send_timeout 300s;</span><br><span class="line">                proxy_pass_request_headers on;</span><br><span class="line">                #proxy_cookie_path /cmdb /itsmboot;</span><br><span class="line">                proxy_set_header Host $host;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_http_version 1.1;</span><br><span class="line">                proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">                proxy_set_header Connection Upgrade;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">        location /api &#123;</span><br><span class="line">            uwsgi_pass  0.0.0.0:18001;</span><br><span class="line">            include     /usr/local/nginx/conf/uwsgi_params;</span><br><span class="line">            error_log  logs/api_error.log;</span><br><span class="line">            access_log logs/api_access.log; </span><br><span class="line">        &#125;</span><br><span class="line">        location /monitor &#123;</span><br><span class="line">                proxy_set_header Host $host;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_pass http://192.168.1.36:8080/monitor/;</span><br><span class="line">                proxy_ignore_client_abort on;</span><br><span class="line">                error_log  logs/monitor_error.log;</span><br><span class="line">                access_log logs/monitor_access.log;</span><br><span class="line">            proxy_redirect off;</span><br><span class="line">              &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h4><p>文件中的路径根据实际情况修改</p>
<h5 id="etc-redis-conf"><a href="#etc-redis-conf" class="headerlink" title="/etc/redis.conf"></a>/etc/redis.conf</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">port 6379</span><br><span class="line">protected-mode no #保护模式 开启则需要配置bind和密码,否则关闭</span><br><span class="line">daemonize yes #开启后台进程</span><br><span class="line">pidfile /var/redis/run/6379.pid</span><br><span class="line">logfile /var/redis/log/redis.log</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir /var/redis/data  #数据库路径 默认是./</span><br><span class="line">requirepass centos #设置密码为centos</span><br><span class="line">#bind 127.0.0.1  默认是开启的，只允许本地登陆，所以，要不添加IP，要不给注释了</span><br></pre></td></tr></table></figure>
<h5 id="etc-init-d-redis"><a href="#etc-init-d-redis" class="headerlink" title="/etc/init.d/redis"></a>/etc/init.d/redis</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">REDISPORT=6379</span><br><span class="line">EXEC=/usr/local/redis/bin/redis-server</span><br><span class="line">CLIEXEC=/usr/local/redis/bin/redis-cli</span><br><span class="line"></span><br><span class="line">PIDFILE=/var/redis/run/$&#123;REDISPORT&#125;.pid</span><br><span class="line">CONF=&quot;/etc/redis.conf&quot;</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">    start)</span><br><span class="line">        if [ -f $PIDFILE ]</span><br><span class="line">        then</span><br><span class="line">                echo &quot;$PIDFILE exists, process is already running or crashed&quot;</span><br><span class="line">        else</span><br><span class="line">                echo &quot;Starting Redis server...&quot;</span><br><span class="line">                $EXEC $CONF</span><br><span class="line">        fi</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        if [ ! -f $PIDFILE ]</span><br><span class="line">        then</span><br><span class="line">                echo &quot;$PIDFILE does not exist, process is not running&quot;</span><br><span class="line">        else</span><br><span class="line">                PID=$(cat $PIDFILE)</span><br><span class="line">                echo &quot;Stopping ...&quot;</span><br><span class="line">                $CLIEXEC -p $REDISPORT shutdown</span><br><span class="line">                while [ -x /proc/$&#123;PID&#125; ]</span><br><span class="line">                do</span><br><span class="line">                    echo &quot;Waiting for Redis to shutdown ...&quot;</span><br><span class="line">                    sleep 1</span><br><span class="line">                done</span><br><span class="line">                echo &quot;Redis stopped&quot;</span><br><span class="line">        fi</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        echo &quot;Please use start or stop as first argument&quot;</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[python相关备忘]]></title>
      <url>/1111/11/11/python%E7%9B%B8%E5%85%B3%E5%A4%87%E5%BF%98/</url>
      <content type="html"><![CDATA[<blockquote>
<p>python相关的一些记录,初衷是记录一些 包括web,linux,以及python语法等<br><a id="more"></a></p>
</blockquote>
<h4 id="web相关"><a href="#web相关" class="headerlink" title="web相关"></a>web相关</h4><h5 id="python3安装"><a href="#python3安装" class="headerlink" title="python3安装"></a>python3安装</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装Python3.4</span></span><br><span class="line"></span><br><span class="line">yum -y install epel-release</span><br><span class="line">yum install python34</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装pip3</span></span><br><span class="line">yum -y install python34-pip</span><br><span class="line">或</span><br><span class="line">yum install python34-setuptools</span><br><span class="line">easy_install<span class="number">-3.4</span> pip</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用pip3了，如：</span></span><br><span class="line"></span><br><span class="line">pip3 install numpy</span><br><span class="line"></span><br><span class="line"><span class="comment">#pip更换源安装</span></span><br><span class="line">阿里云 http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ </span><br><span class="line">豆瓣(douban) http://pypi.douban.com/simple/ </span><br><span class="line">清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/</span><br><span class="line">中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/</span><br><span class="line"><span class="comment">#使用方法很简单，直接 -i 加 url</span></span><br><span class="line">pip install web.py -i http://pypi.douban.com/simple</span><br></pre></td></tr></table></figure>
<h4 id="字符串取数字"><a href="#字符串取数字" class="headerlink" title="字符串取数字"></a>字符串取数字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t = &apos;aaa18aaa&apos;</span><br><span class="line">print(filter(str.isdigit, t))</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[李自立-个人简历]]></title>
      <url>/1111/11/01/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/</url>
      <content type="html"><![CDATA[<p>个人简历<br><a id="more"></a></p>
<blockquote>
<h5 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h5></blockquote>
<p>3年工作经验<br><strong>姓名</strong> : 李自立  |  男 | 1990年6月生<br><strong>户口</strong> ：河南-平顶山 | 现居住于:上海-闵行区<br><strong>联系方式</strong> : 18521501353<br><strong>E-mail</strong> ： zili.li@foxmail.com</p>
<hr>
<blockquote>
<h5 id="求职意向"><a href="#求职意向" class="headerlink" title="求职意向"></a>求职意向</h5></blockquote>
<p><strong>工作性质</strong>：全职<br><strong>期望职业</strong>：<code>系统工程师</code>  <code>运维工程师</code><br><strong>工作地区</strong>：上海<br><strong>目前状况</strong>：我目前在职，正考虑换个新环境（如有合适的工作机会，到岗时间一个月左右）</p>
<hr>
<blockquote>
<h5 id="自我评价"><a href="#自我评价" class="headerlink" title="自我评价"></a>自我评价</h5></blockquote>
<p>熟悉Zabbix,Mysql,ELK,Jenkins,ansible等，空闲时学习了PHP，可在LAMP环境下进行web开发，后学习py3，调用微信API，结合Zabbix API，以Django为后台开发出告警系统。对Nginx、redis，saltstack等都有一定的了解与认识</p>
<hr>
<blockquote>
<h5 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h5></blockquote>
<p><code>2017/03 -- 至今</code><br><strong>万达信息股份有限公司</strong> |系统工程师<br>行业类别： 计算机软件|企业性质：上市公司<br>规模：1000-9999人|职位月薪：6-8k元/月</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">工作描述：</span><br><span class="line"></span><br><span class="line">1: 预约系统.中间件是weblogic,Nginx代理.后搭建ELK对日志进行收集与分析.jenkins对项目部署做支持.</span><br><span class="line">2: 监控.部署Zabbix监控平台,并开发配套监控系统.</span><br><span class="line">3: 备份.公司各部门的数据备份,做raid5,安装ESXI,搭建备份服务环境,学习使用备份软件,到后续的备份维护与支持.</span><br><span class="line">4: 云桌面. 维护申康客服中心,vmware Horizon6云桌面,其中涉及AD,SQL,DHCP等,提供相应技术支持与维护.</span><br><span class="line">5: 公司云资源的维护.维护各部门在虚拟化平台上申请的云资源.</span><br></pre></td></tr></table></figure>
<p><code>2014/04 -- 2017/01</code><br><strong>上海易声通信技术发展有限公司</strong> |网络工程师<br>行业类别： 通信/电信运营、增值服务<br>企业性质：民营|规模：20-99人|职位月薪：4-6K/月<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">工作描述：</span><br><span class="line"></span><br><span class="line">1：公司业务运维.配合各地pop点对通讯线路进行开通,联调与测试</span><br><span class="line">保证业务正常运行，以及对问题的及时响应和处理。</span><br><span class="line">2：系统集成项目.综合布线，路由交换，服务器的安装与配置等</span><br><span class="line">3：监控.对网络设备,服务器等进行监控.</span><br></pre></td></tr></table></figure></p>
<blockquote>
<h5 id="教育背景"><a href="#教育背景" class="headerlink" title="教育背景"></a>教育背景</h5></blockquote>
<p><code>2011/03 -- 2016/01</code> ： 南阳师范学院 | 计算机科学与技术 | 本科 | 非统招</p>
<p><code>2016/05-- 2016/09</code> ： 上海央邦,系统的学习了Linux,并取得相关认证.</p>
<hr>
<blockquote>
<h5 id="项目经验"><a href="#项目经验" class="headerlink" title="项目经验"></a>项目经验</h5></blockquote>
<p><strong>时间</strong> : 2017/05 – 2017/09<br><strong>项目名称</strong> : <code>监控系统部署&amp;开发</code><br><strong>责任描述</strong> :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">此次项目担任工程师职责.由于公司云主机较多,人员架构较复杂,</span><br><span class="line">icinga告警的推送较乱且不太智能，由此而有了需求.</span><br><span class="line">接着便部署了zabbix server,zabbix proxy,对mysql做了主从同步</span><br><span class="line">调用zabbix的api,结合企业微信接口,通过Django 后台,</span><br><span class="line">对告警系统进行了升级,做到可交互,权限划分,告警的时刻监控,等功能,</span><br><span class="line">将告警的推送范围有效的缩小,并对事件有了跟进效果.</span><br></pre></td></tr></table></figure></p>
<p><strong>时间</strong> : 2017/04 - 2017/04<br><strong>项目名称</strong> : <code>预约平台规划与部署</code><br><strong>责任描述</strong> :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">此次项目担任工程师职责.客服中心有应用上线,需要一个平台.程序是java写的</span><br><span class="line">按要求运行在weblogic10上.keepalive做了冗余,前端用nginx做反向代理</span><br><span class="line">后续加入了ELK日志统计.对异常IP访问,页面响应时间等进行记录</span><br><span class="line">随后搭建jenkins对项目部署做支持.整个环境基本成型,将所有设备加入监控.</span><br></pre></td></tr></table></figure></p>
<hr>
<blockquote>
<h5 id="作品展示"><a href="#作品展示" class="headerlink" title="作品展示"></a>作品展示</h5></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">网络同事对信息的录入还处于excel手工状态,查询,更新,各同事件的协调都不方便</span><br><span class="line">个人根据情况,将数据导入mysql,基于LAMP环境,开发了简单的信息统计系统</span><br></pre></td></tr></table></figure>
<p><img src="/images/lizili/it-manager.png" width="70%" height="50%" align="center"></p>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">以Django为后台,调用zabbix API 和微信接口,</span><br><span class="line">处理前台交互.菜单页支持最近事件查询,事件批量确认</span><br><span class="line">以及未处理事件查询(图片未截全)</span><br><span class="line">整个事件都做了相应权限划分,只有相关人员可收到相关信息.</span><br></pre></td></tr></table></figure>
<p><img src="/images/lizili/zbx-wechat.png" width="70%" height="50%" align="center"></p>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">日志服务器</span><br></pre></td></tr></table></figure>
<p><img src="/images/lizili/elk.png" width="70%" height="50%" align="center"></p>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RHCE</span><br></pre></td></tr></table></figure>
<p><img src="/images/lizili/rhce.jpg" width="70%" height="50%" align="center"></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
